GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   2   
   3   
   4  * --
   5  * --  Prototype Proto_CGE CGE Model: Dynamic Version
   6  * --
   7  * --
   8  * --            David Roland-Holst
   9  * --                             Dominique van der Mensbrugghe
  10  * --            Samuel G. Evans
  11  * --            Cecilia Han Springer
  12  * --
  13  * --            December, 2016
  14  * --
  15  * --
  16  * --
  17   
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 2
Proto_CGE
C o m p i l a t i o n


  19   
  20  * -- Decompose project effects for medium case
  21   
  22  set allsim / Baseline / ;
  23  set sim(allsim) / Baseline / ;
  24   
  25  parameter ivb Verbose Output /0/ ;
  26  parameter echk /1.0/ ;
  27  parameter CalFlag Flag determining nature of dynamic scenarios ;
  28  parameter iann Annual Results Posted /1/ ;
  29   
  30  * Set CalFlag to 1 to calibrate labor productivity, 0 otherwise
  31   
  32  CalFlag = 1 ;
  33   
  34  parameter Header Flag determining whether to output header records in output files ;
  35   
  36  * Set Header to 1 to output header in output file
  37   
  38  Header = 1 ;
  39   
  40  *----- Declare the output file names
  41  file reportfile / Proto_CGE_Results.csv / ;
  42  file samfile    / Proto_CGE_SAM.csv / ;
  43  file Proto_CGEscn     / Proto_CGE_scn.gms / ;
  44   
  45   
  46  * ----- Model output options
  47   
  48  options limcol=0, limrow=0 ;
  49  options solprint=off ;
  50  option solvelink=2;
  51   
  52  * ---- Verbose output for CSV File
  53  parameter icsv /0/ ;
  54   
  55  * ----- Input the base SAM and aggregate
  56   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_3.dat
  58  *##
  59  *## This file creates an aggregated dataset from the 2008 Mongolia SAM
  60  *## Also included are a variety of set declarations and initial data for the model
  61  *##
  62   
  63  *## Define the aggregate SAM institution sets and subsets
  64   
  65  set
  66  s final sam /
  67  Primary
  68  Manufact
  69  Tertiary
  70   
  71  UnSkil
  72  Skill
  73  Captl
  74  LandR
  75  natrs
  76  hhsld
  77  gov
  78  inv
  79  depry
  80  trdmg
  81  indtx
  82  prdtx
  83  imptx
  84  exptx
  85  dirtx
  86  row
  87  total
  88  ent
  89  /
  90   
  91  i(s) /
  92  Primary
  93  Manufact
  94  Tertiary
  95   
  96   
  97  /
  98   
  99  v(s) Factors /
 100  UnSkil
 101  Skill
 102  Captl
 103  LandR
 104  natrs
 105   
 106  /
 107   
 108  l(v) /
 109  UnSkil
 110  Skill
 111  /
 112   
 113     ul(l) Unskilled labor /
 114  UnSkil
 115     /
 116   
 117     sl(l) Skilled labor /
 118  Skill
 119     /
 120   
 121     lt(v) Land types
 122     /
 123        LandR      Land remuneration
 124     /
 125   
 126     kt(v) Capital types /
 127       Captl
 128     /
 129     nr(v) Natural resources      /
 130      natrs
 131                  /
 132   
 133     e(s)  Enterprises /
 134  ENT
 135     /
 136   
 137     fd(s) Final demand accounts /
 138  hhsld
 139  gov
 140  inv
 141  depry
 142  trdmg
 143  indtx
 144  prdtx
 145  imptx
 146  exptx
 147  dirtx
 148     /
 149   
 150     h(fd) Households /
 151          hhsld
 152  /
 153   
 154     f(fd) Other final demand accounts /
 155  gov
 156  inv
 157  indtx
 158  prdtx
 159  imptx
 160  exptx
 161  dirtx
 162     /
 163   
 164     r(s) Regions /
 165  row
 166     /
 167  ;
 168   
 169  alias (i,k), (i,ii), (k,kk) ;
 170   
 171  set mapik(i,k) /
 172  Primary .       Primary
 173  Manufact        .       Manufact
 174  Tertiary        .       Tertiary
 175  /
 176  ;
 177   
 178  *## Define the institution sets and subsets for the i initial SAM
 179   
 180  set
 181  s0 initial sam /
 182  pdr      "Paddy rice"
 183  wht      "Wheat"
 184  gro      "Cereal grains, n.e.s."
 185  v_f      "Vegetables and fruits"
 186  osd      "Oil seeds"
 187  c_b      "Sugar cane and sugar beet"
 188  pfb      "Plant-based fibers"
 189  ocr      "Crops, n.e.s."
 190  ctl      "Bovine cattle, sheep and goats, horses"
 191  oap      "Animal products n.e.s."
 192  rmk      "Raw milk"
 193  wol      "Wool, silk-worm cocoons"
 194  frs      "Forestry"
 195  fsh      "Fishing"
 196  coa      "Coal"
 197  oil      "Oil"
 198  gas      "Gas"
 199  omn      "Minerals n.e.s."
 200  cmt      "Bovine cattle, sheep and goat, horse meat products"
 201  omt      "Meat products n.e.s."
 202  vol      "Vegetable oils and fats"
 203  mil      "Dairy products"
 204  pcr      "Processed rice"
 205  sgr      "Sugar"
 206  ofd      "Food products n.e.s."
 207  b_t      "Beverages and tobacco products"
 208  tex      "Textiles"
 209  wap      "Wearing apparel"
 210  lea      "Leather products"
 211  lum      "Wood products"
 212  ppp      "Paper products, publishing"
 213  p_c      "Petroleum, coal products"
 214  crp      "Chemical, rubber, plastic products"
 215  nmm      "Mineral products n.e.s."
 216  i_s      "Ferrous metals"
 217  nfm      "Metals n.e.s."
 218  fmp      "Metal products"
 219  mvh      "Motor vehicles and parts"
 220  otn      "Transport equipment n.e.s."
 221  ele      "Electronic equipment"
 222  ome      "Machinery and equipment n.e.s."
 223  omf      "Manufactures n.e.s."
 224  ely      "Electricity"
 225  gdt      "Gas manufacture, distribution"
 226  wtr      "Water"
 227  cns      "Construction"
 228  trd      "Trade"
 229  otp      "Transport n.e.s."
 230  wtp      "Sea transport"
 231  atp      "Air transport"
 232  cmn      "Communication"
 233  ofi      "Financial services n.e.s."
 234  isr      "Insurance"
 235  obs      "Business services n.e.s."
 236  ros      "Recreation and other services"
 237  osg      "Public administration and defense, education, health services"
 238  dwe      "Dwellings"
 239  cgds     "Investment goods"
 240   
 241  UnSkil
 242  Skill
 243  Captl
 244  LandR
 245  natrs
 246  hhsld
 247  gov
 248  inv
 249  depry
 250  trdmg
 251  indtx
 252  prdtx
 253  imptx
 254  exptx
 255  dirtx
 256  row
 257  Total
 258  ent
 259  /
 260   
 261  i0(s0) /
 262  pdr
 263  wht
 264  gro
 265  v_f
 266  osd
 267  c_b
 268  pfb
 269  ocr
 270  ctl
 271  oap
 272  rmk
 273  wol
 274  frs
 275  fsh
 276  coa
 277  oil
 278  gas
 279  omn
 280  cmt
 281  omt
 282  vol
 283  mil
 284  pcr
 285  sgr
 286  ofd
 287  b_t
 288  tex
 289  wap
 290  lea
 291  lum
 292  ppp
 293  p_c
 294  crp
 295  nmm
 296  i_s
 297  nfm
 298  fmp
 299  mvh
 300  otn
 301  ele
 302  ome
 303  omf
 304  ely
 305  gdt
 306  wtr
 307  cns
 308  trd
 309  otp
 310  wtp
 311  atp
 312  cmn
 313  ofi
 314  isr
 315  obs
 316  ros
 317  osg
 318  dwe
 319  /
 320   
 321   
 322  v0(s0) Factors /
 323  UnSkil
 324  Skill
 325  Captl
 326  LandR
 327  natrs
 328   
 329  /
 330   
 331  l0(v0) /
 332  UnSkil
 333  Skill
 334  /
 335   
 336     ul0(l0) Unskilled labor /
 337  UnSkil
 338     /
 339   
 340     sl0(l0) Skilled labor /
 341  Skill
 342     /
 343   
 344     lt0(v0) Land types
 345     /
 346        LandR     Land remuneration
 347     /
 348   
 349     kt0(v0) Capital types /
 350        Captl      Capital remuneration
 351     /
 352     nr0(v0) Natural resources      /
 353      natrs
 354                  /
 355   
 356     e0(s0)  Enterprises /
 357  ENT
 358     /
 359   
 360     fd0(s0) Final demand accounts /
 361  hhsld
 362  gov
 363  inv
 364  depry
 365  trdmg
 366  indtx
 367  prdtx
 368  imptx
 369  exptx
 370  dirtx
 371     /
 372   
 373     h0(fd0) Households /
 374  hhsld/
 375   
 376     f0(fd0) Other final demand accounts /
 377  gov
 378  inv
 379  *depry
 380  trdmg
 381  indtx
 382  prdtx
 383  imptx
 384  exptx
 385  dirtx
 386     /
 387   
 388     r0(s0) Regions /
 389  row
 390     /
 391   
 392  ;
 393   
 394  Alias(i0,j0), (i0,k0) ;
 395   
 396  set food0(k0) Food Commodities /
 397  pdr
 398  wht
 399  gro
 400  v_f
 401  osd
 402  c_b
 403  pfb
 404  ocr
 405  ctl
 406  oap
 407  rmk
 408  wol
 409  frs
 410  fsh
 411  / ;
 412   
 413  set manufac0(k0) Manufactured Commodities /
 414  coa
 415  oil
 416  gas
 417  omn
 418  cmt
 419  omt
 420  vol
 421  mil
 422  pcr
 423  sgr
 424  ofd
 425  b_t
 426  tex
 427  wap
 428  lea
 429  lum
 430  ppp
 431  p_c
 432  crp
 433  nmm
 434  i_s
 435  nfm
 436  fmp
 437  mvh
 438  otn
 439  ele
 440  ome
 441  omf
 442  / ;
 443   
 444  set services0(k0) Service Commodities /
 445  ely
 446  gdt
 447  wtr
 448  cns
 449  trd
 450  otp
 451  wtp
 452  atp
 453  cmn
 454  ofi
 455  isr
 456  obs
 457  ros
 458  osg
 459  dwe
 460  / ;
 461   
 462   
 463  set hs0(fd0) Subsistence Consumption for Households /
 464  hhsld/ ;
 465   
 466   
 467          alias (s0,ss0), (s,ss), (v0,vv0), (j0,jj0), (r0,rr0), (k0,kk0), (fd0,ffd0) ;
 468   
 469   
 470   
 471   
 472  *## Define the aggregation mapping sets and subsets
 473   
 474  set map(s0,s)  Aggregation mapping /
 475  pdr     .       Primary
 476  wht     .       Primary
 477  gro     .       Primary
 478  v_f     .       Primary
 479  osd     .       Primary
 480  c_b     .       Primary
 481  pfb     .       Primary
 482  ocr     .       Primary
 483  ctl     .       Primary
 484  oap     .       Primary
 485  rmk     .       Primary
 486  wol     .       Primary
 487  frs     .       Primary
 488  fsh     .       Primary
 489  coa     .       Primary
 490  oil     .       Primary
 491  gas     .       Primary
 492  omn     .       Primary
 493  cmt     .       Primary
 494  omt     .       Primary
 495  vol     .       Primary
 496  mil     .       Primary
 497  pcr     .       Primary
 498  sgr     .       Primary
 499  ofd     .       Primary
 500  b_t     .       Primary
 501  tex     .       Manufact
 502  wap     .       Manufact
 503  lea     .       Manufact
 504  lum     .       Manufact
 505  ppp     .       Manufact
 506  p_c     .       Manufact
 507  crp     .       Manufact
 508  nmm     .       Manufact
 509  i_s     .       Manufact
 510  nfm     .       Manufact
 511  fmp     .       Manufact
 512  mvh     .       Manufact
 513  otn     .       Manufact
 514  ele     .       Manufact
 515  ome     .       Manufact
 516  omf     .       Manufact
 517  ely     .       Tertiary
 518  gdt     .       Tertiary
 519  wtr     .       Tertiary
 520  cns     .       Tertiary
 521  trd     .       Tertiary
 522  otp     .       Tertiary
 523  wtp     .       Tertiary
 524  atp     .       Tertiary
 525  cmn     .       Tertiary
 526  ofi     .       Tertiary
 527  isr     .       Tertiary
 528  obs     .       Tertiary
 529  ros     .       Tertiary
 530  osg     .       Tertiary
 531  dwe     .       Tertiary
 532   
 533  UnSkil  .       UnSkil
 534  Skill   .       Skill
 535  Captl   .       Captl
 536  LandR   .       LandR
 537  natrs   .       natrs
 538  hhsld   .       hhsld
 539  gov     .       gov
 540  inv     .       inv
 541  depry   .       depry
 542  trdmg   .       trdmg
 543  indtx   .       indtx
 544  prdtx   .       prdtx
 545  imptx   .       imptx
 546  exptx   .       exptx
 547  dirtx   .       dirtx
 548  row     .       row
 549  Total   .       Total
 550  / ;
 551   
 552  set mapi(i0,i)  Aggregation mapping for sectors ;
 553  mapi(i0,i)$map(i0,i) = yes ;
 554  set mapk(k0,k)  Aggregation mapping for sectors
 555  ;
 556  mapk(k0,k)$map(k0,k) = yes ;
 557   
 558  set mapv(v0,v)  Aggregation mapping for value added ;
 559  mapv(v0,v)$map(v0,v) = yes ;
 560   
 561  set mape(e0,e)  Aggregation mapping for enterprises /
 562  ENT         .           ENT
 563  / ;
 564   
 565  set maph(h0,h)  Aggregation mapping for households /
 566  HHsld        .         HHsld
 567  / ;
 568   
 569  set mapf(f0,f)  Aggregation mapping for other final demand accounts ;
 570  mapf(f0,f)$map(f0,f) = yes ;
 571   
 572  set mapr(r0,r)  Aggregation mapping for regions ;
 573  mapr(r0,r)$map(r0,r) = yes ;
 574   
 575  set ittt0(i0)/
 576  wtr
 577  cns
 578  trd
 579  otp
 580  wtp
 581  atp
 582  cmn
 583  / ;
 584   
 585  set ittt(i) /
 586  Tertiary
 587  / ;
 588   
 589  set kttt0(k0)/
 590  wtr
 591  cns
 592  trd
 593  otp
 594  wtp
 595  atp
 596  cmn
 597  / ;
 598   
 599  set kttt(k) /
 600  Tertiary
 601  / ;
 602   
 603  set mapittt(i0,i) ;
 604   
 605  set mapkttt(k0,k) ;
 606   
 607   
 608  *## Define and load the Original SAM
 609   
 610   parameter chk, chk1 ;
 611   parameter nsam(s,ss) ;
 612   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_SAM.dat
 615  table sam0(s0,ss0) Billions of Current USD
 616                pdr           wht           gro           v_f           osd           c_b           pfb           ocr           ctl           oap 
                rmk           wol           frs           fsh           coa           oil           gas           omn           cmt           omt     
            vol           mil           pcr           sgr           ofd           b_t           tex           wap           lea           lum         
        ppp           p_c           crp           nmm           i_s           nfm           fmp           mvh           otn           ele           om
      e           omf           ely           gdt           wtr           cns           trd           otp           wtp           atp           cmn   
              ofi           isr           obs           ros           osg           dwe           UnSkil        Skill         Captl         LandR     
          natrs         hhsld         gov           inv           depry         trdmg         indtx         prdtx         imptx         exptx         
      dirtx         row
 617  pdr           1.198E-01     1.032E-02     4.957E-05     5.627E-03     1.379E-05     1.501E-05     2.259E-03     4.923E-04     7.979E-02     1.23
      2E-01     4.235E-02     6.405E-03     4.411E-03     6.038E-03     7.052E-11     1.000E-09     1.000E-09     1.040E-05     1.929E-02     9.510E-0
      3     3.606E-04     1.158E-02     1.468E+00     7.350E-03     5.132E-02     7.733E-03     1.977E-04     3.242E-05     3.098E-06     3.800E-07   
        3.424E-06     6.432E-04     3.618E-04     9.650E-07     3.300E-08     1.276E-06     2.310E-07     6.968E-10     4.600E-08     2.700E-08     9.
      100E-07     3.360E-03     3.630E-07     3.326E-10     1.710E-07     9.953E-06     2.297E-04     1.037E-06     3.100E-08     2.020E-07     4.100E
      -08     3.800E-08     6.700E-08     1.228E-04     6.602E-05     1.666E-04     3.300E-08     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.536E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 618  wht           6.890E-06     6.116E+01     6.758E-04     1.312E-02     1.619E-04     4.079E-04     1.267E+01     6.816E-02     2.489E+01     4.90
      3E+01     2.407E+01     1.397E+01     3.087E-04     9.007E-02     1.302E-10     3.000E-09     1.000E-09     3.600E+00     2.639E+01     1.301E+0
      1     7.881E+00     1.580E+01     5.995E-02     2.993E+02     1.060E+03     2.167E+01     1.683E+01     6.390E+00     4.542E-03     3.313E+00   
        1.135E-01     1.624E-03     6.981E+00     6.917E-01     1.740E-07     8.051E-06     4.650E-07     7.000E-09     1.190E-07     7.640E-07     6.
      603E-06     1.053E+01     3.870E-07     8.276E-10     2.700E-07     2.900E-06     2.887E-01     1.818E-02     9.413E-04     2.236E-03     7.200E
      -08     5.900E-08     4.700E-08     2.724E-04     1.755E-05     1.519E+02     8.000E-09     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     3.448E+03     5.354E-01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     3.599E+01
 619  gro           5.207E-06     1.322E-02     8.520E+00     2.011E-02     2.122E-04     2.544E-04     5.213E+00     2.521E-02     1.227E+01     2.55
      2E+01     1.885E+01     5.832E+00     6.510E-04     4.306E-02     1.767E-10     9.107E-10     1.270E-07     1.483E+00     3.323E+00     1.636E+0
      0     2.621E+01     1.990E+00     6.736E-01     1.235E+02     4.386E+02     8.948E+00     6.893E+00     2.653E+00     3.555E-05     9.825E-01   
        3.722E-02     1.743E-03     2.849E+00     2.185E-01     4.400E-08     9.300E-08     3.690E-07     9.000E-09     1.500E-07     3.400E-07     6.
      859E-06     4.821E+00     2.636E-05     2.900E-08     1.830E-07     6.539E-03     1.553E-01     3.050E-03     2.289E-04     5.671E-03     8.300E
      -08     1.760E-06     2.980E-07     1.254E-03     3.703E-04     6.267E+01     5.300E-08     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.421E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.585E+01
 620  v_f           3.820E-07     2.624E-02     1.359E-02     7.105E+01     3.123E-05     5.092E-01     4.127E+00     6.168E+00     2.241E+01     3.62
      7E+01     1.211E+01     4.599E+00     3.256E-04     4.338E-02     2.000E-09     1.210E-07     2.000E-09     1.167E+00     2.182E-01     1.083E-0
      1     2.031E+01     1.309E-01     4.106E-02     9.855E+01     3.503E+02     7.098E+00     5.407E+00     2.107E+00     1.548E-04     2.171E+00   
        3.053E-02     1.299E-03     2.339E+00     2.192E-01     3.266E-03     5.387E-06     1.688E-04     1.591E-06     1.456E-06     2.260E-07     9.
      329E-06     2.226E+00     2.217E-06     7.061E-10     1.080E-07     5.973E-05     1.265E-01     1.129E-02     7.054E-03     2.964E-03     4.370E
      -07     1.259E-06     1.323E-05     3.468E-03     1.183E-02     5.018E+01     1.640E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.389E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.610E+03
 621  osd           2.450E-07     3.818E-04     3.875E-04     7.623E-03     1.349E+01     3.072E-04     1.043E+00     7.497E-05     7.420E+00     1.22
      8E+01     8.710E+00     1.147E+00     1.448E-05     7.674E-06     1.182E-10     8.000E-09     3.935E-06     2.973E-01     1.862E+00     9.152E-0
      1     6.311E+01     1.112E+00     2.412E-01     2.433E+01     8.622E+01     1.778E+00     1.392E+00     5.223E-01     7.169E-05     1.206E-01   
        9.951E-03     1.266E-03     5.549E-01     4.243E-02     3.420E-07     1.100E-07     6.260E-07     6.000E-09     1.760E-07     6.000E-08     5.
      944E-06     1.053E+00     7.201E-05     1.230E-07     1.278E-06     2.840E-07     1.844E-02     3.508E-04     8.876E-03     3.781E-04     1.350E
      -07     2.080E-07     1.270E-07     3.073E-04     3.764E-05     1.233E+01     2.840E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.660E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.326E+00
 622  c_b           5.000E-08     3.929E-02     1.629E-02     5.096E-02     1.774E-02     1.103E+01     1.784E+00     4.170E-03     9.064E+00     1.17
      5E+01     1.277E+01     1.985E+00     6.842E-02     2.070E-07     7.906E-11     1.342E-11     7.670E-10     5.056E-01     1.462E+01     7.205E+0
      0     8.104E+00     8.757E+00     1.846E-02     3.999E+01     1.399E+02     2.978E+00     2.236E+00     8.602E-01     5.074E-02     4.445E-01   
        1.501E-02     1.025E-01     9.813E-01     9.711E-02     5.446E-02     5.286E-03     2.339E-02     3.880E-07     4.600E-08     3.246E-02     1.
      085E-02     1.492E+00     2.896E-02     4.000E-09     5.382E-03     2.790E-07     1.038E-02     2.213E-02     3.807E-03     2.045E-03     2.106E
      -02     5.280E-02     1.446E-02     8.527E-03     1.712E-06     1.980E+01     3.000E-09     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     2.511E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 623  pfb           6.720E-07     1.852E-02     1.057E-03     4.642E-03     6.139E-05     3.311E-03     2.046E+01     5.852E-04     3.298E-01     3.96
      9E-01     1.649E-01     4.597E-01     3.493E-03     1.122E-02     8.056E-11     4.342E-06     3.690E-07     9.130E-02     1.140E+00     5.620E-0
      1     1.617E+00     6.825E-01     1.818E-03     7.800E+00     3.577E+01     2.950E+01     5.815E-01     1.708E-01     4.975E-04     2.212E-02   
        1.189E-05     6.790E-07     1.932E-01     2.171E-02     7.020E-07     3.250E-07     3.311E-06     4.280E-07     7.540E-07     8.270E-07     1.
      892E-05     3.410E-01     1.001E-04     1.470E-07     7.310E-07     2.350E-05     1.710E+00     2.296E+00     3.478E-01     1.301E+00     6.300E
      -08     5.850E-07     2.590E-07     4.369E-05     2.902E-06     5.013E+02     3.000E-09     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.021E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.396E+01
 624  ocr           3.924E-03     7.296E+00     3.235E+00     1.728E+01     7.062E-03     3.149E-01     1.343E-01     2.047E+00     1.575E+00     4.59
      0E+00     4.710E+00     1.886E-01     1.492E-01     6.090E-03     7.000E-09     7.300E-08     1.100E-08     3.212E-02     5.482E-01     2.702E-0
      1     6.086E-01     3.282E-01     7.539E-05     2.762E+00     9.887E+00     2.671E-01     1.553E-01     6.115E-02     3.191E-03     3.375E-02   
        4.643E-04     1.094E-03     9.143E-02     3.968E-03     5.090E-04     2.778E-05     3.340E-05     5.311E-06     5.769E-06     4.479E-06     2.
      358E-05     9.266E-02     1.547E-05     6.900E-08     1.062E-06     1.657E-02     1.637E-02     5.390E-04     3.501E-04     3.963E-04     4.203E
      -06     2.502E-05     3.423E-05     8.980E-03     1.480E-03     1.469E+00     2.043E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.824E+02     0.000E+00     2.214E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     4.920E+01
 625  ctl           5.046E-03     2.133E+01     6.635E+00     1.129E+01     1.368E-01     1.193E-01     6.106E-01     8.798E-01     2.808E+01     1.26
      4E-02     5.129E-03     3.815E+00     4.057E-01     1.780E-01     6.000E-09     3.000E-09     3.000E-09     9.363E-01     2.275E+02     8.193E-0
      2     1.723E+01     2.221E-02     7.650E-03     8.045E+01     3.296E+00     6.584E+00     4.380E+00     1.728E+00     1.544E-01     2.476E-01   
        2.832E-02     1.905E-03     2.386E+00     1.764E-01     4.939E-04     4.120E-07     2.279E-03     2.190E-07     5.150E-07     3.110E-07     2.
      064E-03     3.513E+00     1.461E-03     8.328E-10     2.900E-07     2.006E-04     1.686E-01     4.665E-03     2.384E-02     5.543E-03     1.760E
      -07     4.523E-06     7.600E-07     2.130E-03     2.289E-03     5.406E+01     7.960E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     5.313E+02     0.000E+00     4.486E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     6.847E+00
 626  oap           6.052E-04     1.406E+01     1.219E+01     1.081E+01     6.029E-01     1.700E-01     2.101E+00     4.442E-01     3.424E-03     2.36
      9E+00     2.797E-03     1.631E+00     1.698E-01     7.374E-02     2.000E-09     3.000E-09     2.000E-09     3.950E-01     1.919E-01     1.717E+0
      2     7.265E+00     7.883E-03     3.216E-03     3.393E+01     1.393E+00     2.775E+00     1.858E+00     7.303E-01     9.021E-02     8.315E-02   
        1.195E-02     8.042E-04     1.006E+00     7.441E-02     8.113E-05     5.330E-07     1.081E-03     2.590E-07     5.980E-07     8.108E-06     8.
      796E-04     1.505E+00     6.175E-04     8.174E-10     2.730E-07     1.926E-04     7.611E-02     1.220E-02     1.827E-03     3.842E-03     4.040E
      -07     3.551E-06     1.307E-05     2.115E-03     1.681E-03     2.277E+01     3.290E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     8.606E+02     0.000E+00     7.108E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     5.771E+01
 627  rmk           8.185E-03     4.058E+01     2.092E+01     2.100E+01     2.287E+00     1.125E+00     1.043E+01     2.656E+00     1.334E-02     5.03
      8E-03     7.049E+00     2.241E+00     2.340E-01     1.026E-01     2.163E-10     1.000E-09     1.000E-09     5.473E-01     1.975E-02     6.787E-0
      3     1.007E+01     2.769E+02     4.452E-03     4.702E+01     1.891E+00     3.847E+00     2.559E+00     1.010E+00     6.292E-02     3.659E-01   
        1.657E-02     1.113E-03     1.394E+00     1.031E-01     1.483E-04     1.720E-07     1.455E-03     4.000E-09     2.060E-06     1.310E-07     1.
      205E-03     1.805E+00     8.570E-04     8.329E-10     5.100E-08     5.844E-06     9.760E-02     1.072E-03     1.525E-02     3.066E-03     6.600E
      -08     1.210E-07     8.900E-08     8.060E-04     1.192E-03     3.155E+01     2.970E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.037E+02     0.000E+00     9.244E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     8.363E-01
 628  wol           2.620E-07     5.361E-03     3.478E-04     3.104E-03     5.573E-06     3.163E-04     3.999E-03     1.056E-04     8.911E-03     9.06
      2E-03     4.215E-03     1.113E+03     5.453E-05     1.800E-08     6.029E-11     4.088E-12     2.375E-10     5.533E-02     2.663E-02     1.267E-0
      2     3.766E-02     1.525E-02     4.363E-03     3.284E+00     5.937E+00     1.043E+01     4.317E+02     6.128E+02     7.911E-01     1.579E+01   
        3.746E+00     1.496E-02     6.163E+01     1.134E+00     8.424E-01     3.500E-08     1.829E+00     2.513E-01     2.825E-01     4.919E+00     2.
      131E+00     3.432E+01     1.400E-07     2.961E-10     1.000E-08     1.100E-08     2.545E+00     4.543E+00     1.221E+01     3.221E+00     1.900E
      -08     1.030E-07     2.000E-08     4.488E-05     7.941E-06     1.071E+02     2.000E-09     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     9.520E+01     1.259E+00     5.013E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     6.678E+00
 629  frs           4.187E-06     1.271E+00     5.961E-01     1.864E+00     1.912E-02     8.924E-02     1.660E-02     1.549E-01     2.072E-02     2.02
      6E-02     9.981E-03     3.528E-02     7.025E+00     2.501E-01     3.030E-07     1.780E-07     2.200E-08     4.436E-03     1.758E-01     3.345E-0
      2     6.767E-02     5.626E-02     5.595E-05     3.280E-01     1.174E+00     1.805E-02     1.970E-02     1.858E-02     2.872E-03     3.962E-01   
        4.655E-02     3.649E-06     2.689E-02     1.948E-02     1.351E-04     2.861E-03     8.084E-05     8.165E-06     5.734E-06     1.271E-04     3.
      478E-05     6.357E-03     5.275E-06     7.434E-10     1.572E-06     1.792E-02     1.574E-02     4.654E-03     1.017E-03     7.107E-04     5.877E
      -06     2.421E-06     8.059E-06     4.630E-04     1.154E-04     1.656E-01     5.741E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.268E+02     0.000E+00     4.068E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     7.608E+00
 630  fsh           5.800E-08     3.762E-05     6.453E-05     1.033E-05     1.544E-05     3.575E-03     8.774E-02     3.004E-05     5.234E-02     5.34
      7E-02     2.473E-02     1.047E-01     5.604E-02     1.290E+01     1.990E-10     3.665E-10     1.127E-11     2.564E-02     4.785E-01     9.172E-0
      2     4.178E-01     1.501E-01     7.239E-03     1.995E+00     7.543E+00     1.428E-01     1.075E-01     3.930E-02     4.149E-05     1.072E-03   
        7.244E-06     4.300E-08     5.121E-02     4.130E-03     6.921E-06     2.040E-07     2.483E-06     3.500E-08     5.530E-07     1.900E-08     3.
      212E-06     7.915E-02     9.900E-08     2.241E-10     4.600E-08     2.460E-07     3.947E-02     1.087E-05     2.915E-05     6.628E-06     1.640E
      -07     1.566E-05     2.229E-06     2.564E-04     4.825E-03     1.026E+00     3.321E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.378E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.089E+02
 631  coa           1.172E-12     1.189E-05     5.426E-06     1.642E-05     1.000E-09     2.000E-09     1.970E-10     2.000E-09     2.000E-09     6.00
      0E-09     2.000E-09     2.000E-09     4.000E-09     3.607E-10     2.243E-05     1.400E-07     1.390E-10     1.512E+00     1.865E-04     6.806E-0
      5     2.895E-03     2.147E-04     1.773E-06     1.220E+00     2.094E+00     2.116E-04     1.767E-01     5.872E-02     1.243E-01     7.038E-02   
        6.232E-01     1.201E-03     2.208E+00     6.097E+00     1.749E+00     2.467E-01     2.729E-02     1.532E-02     7.497E-02     2.503E-01     8.
      520E-01     7.420E-01     3.387E+02     1.970E-07     1.274E-03     1.747E-01     2.001E-04     3.836E-06     4.458E-06     5.000E-09     5.050E
      -07     9.997E-06     5.240E-06     1.178E-04     1.933E-05     9.554E-01     1.200E-08     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.306E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 632  oil           1.000E-08     7.120E-05     1.062E-05     1.199E-04     7.240E-07     4.344E-06     2.702E-06     1.109E-05     1.178E-06     6.89
      0E-07     4.420E-07     3.127E-06     2.702E-06     2.295E-06     9.790E-07     4.012E-05     3.399E-05     1.537E-02     6.140E-07     1.350E-0
      7     3.630E-07     4.380E-07     5.400E-08     4.066E-04     3.734E-04     1.864E-06     6.153E-05     2.180E-05     3.056E-05     1.095E-06   
        2.140E-06     3.512E+03     2.634E-04     1.099E-05     3.418E-05     1.746E-05     4.370E-05     1.183E-05     9.738E-06     2.603E-05     9.
      231E-05     5.260E-06     2.128E-04     1.495E-05     4.500E-08     2.504E-05     5.730E-07     1.323E-04     1.858E-06     2.030E-06     3.900E
      -08     9.000E-09     3.000E-09     6.365E-06     3.800E-08     2.633E-04     2.032E-10     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 633  gas           5.591E-12     3.776E-05     2.226E-05     4.142E-05     6.840E-07     1.620E-07     1.520E-07     1.106E-05     5.600E-07     8.24
      0E-07     2.980E-07     1.120E-05     5.370E-07     1.990E-06     3.430E-07     3.456E-05     6.749E-06     7.763E-01     6.195E-04     3.241E-0
      4     1.164E-04     1.098E-03     2.433E-05     4.227E-02     2.692E-01     2.408E-04     2.540E-03     2.109E-03     5.017E-03     5.671E-03   
        1.712E-01     8.338E-01     2.487E+00     3.847E-01     4.591E-01     1.405E-01     1.314E-01     1.442E-02     7.992E-02     1.846E-01     2.
      317E-01     1.253E-01     1.352E+02     3.630E-05     4.301E-05     4.209E-02     1.110E-03     1.300E-04     1.580E-07     1.150E-07     4.109E
      -05     1.591E-06     1.500E-07     2.750E-03     7.519E-04     3.267E-01     1.200E-08     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 634  omn           1.962E-06     4.004E-01     1.898E-01     2.006E-01     7.174E-03     7.430E-02     4.200E-03     2.288E-02     5.762E-03     5.90
      4E-03     2.936E-03     1.026E-02     1.066E-04     2.281E-05     1.597E-05     3.106E-05     3.479E-06     2.829E+01     4.978E-02     9.553E-0
      3     2.666E-02     1.580E-02     1.005E-06     2.184E-01     6.259E-01     2.871E-04     3.648E-04     3.107E-05     9.770E-04     2.440E+00   
        2.654E-01     1.701E-03     1.899E+03     1.092E+02     3.412E+01     6.016E+01     1.848E+00     1.575E-02     5.754E-03     2.489E-04     2.
      890E-02     1.824E+02     1.329E-04     4.360E-07     5.379E-05     1.437E+02     1.388E-01     2.677E-01     1.347E-01     1.050E-01     1.309E
      -05     3.916E-06     8.420E-07     3.307E-04     1.329E-04     7.300E-01     6.777E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.343E+03
 635  cmt           1.196E-04     1.326E+01     4.219E+00     5.111E+00     1.106E-01     3.567E-02     6.410E-01     2.101E-01     4.786E-03     1.10
      4E-02     2.700E-03     2.440E+00     8.591E-01     2.083E-01     3.000E-09     1.400E-08     1.000E-09     5.783E-01     4.411E+01     1.290E-0
      1     1.143E+01     1.607E-02     7.198E-03     4.988E+01     9.413E+01     4.646E+00     2.725E+00     1.069E+00     5.194E-01     9.063E-02   
        1.747E-02     1.238E-03     1.850E+00     1.118E-01     8.831E-05     5.910E-07     1.585E-03     6.600E-08     9.924E-06     5.730E-07     1.
      492E-03     2.279E+00     8.642E-04     4.246E-10     1.440E-07     2.667E-05     2.561E-01     6.940E-03     1.324E-02     1.502E-03     4.331E
      -06     4.734E-06     1.769E-04     1.191E-03     1.336E-02     4.188E+01     1.810E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.752E+03     0.000E+00     1.495E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.725E+01
 636  omt           4.487E-06     6.368E+00     1.913E+00     2.390E+00     1.762E-02     1.355E-02     6.960E-02     8.215E-02     1.819E-03     3.92
      7E-03     1.066E-03     1.169E+00     1.247E-01     5.385E-02     2.951E-10     1.000E-08     9.677E-10     2.884E-01     1.135E-02     1.332E+0
      1     5.306E+00     3.295E-03     2.352E-03     2.478E+01     3.033E+02     2.026E+00     1.348E+00     5.338E-01     8.834E-02     6.151E-03   
        8.745E-03     5.881E-04     7.362E-01     5.440E-02     3.515E-05     3.680E-07     8.179E-04     2.026E-06     4.235E-06     7.740E-07     6.
      624E-04     1.162E+00     4.503E-04     1.000E-09     1.920E-07     7.178E-06     6.589E-02     2.667E-03     7.354E-03     5.739E-04     3.178E
      -06     8.358E-06     5.348E-05     9.008E-04     1.100E-02     1.665E+01     3.566E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.760E+02     0.000E+00     4.125E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     3.132E+01
 637  vol           2.647E-06     5.247E-03     9.244E-04     4.551E-03     1.596E-03     6.919E-04     8.006E-02     4.292E-04     5.718E+00     6.87
      7E+00     2.859E+00     2.189E-02     5.799E-01     8.095E-02     2.859E-10     6.800E-08     1.000E-09     1.958E-04     1.979E+01     9.754E+0
      0     1.169E+01     1.186E+01     6.415E-05     2.547E-01     2.594E+00     1.015E-01     8.942E-04     6.078E-05     4.869E-03     2.400E-03   
        4.564E-03     7.662E-04     1.142E-01     2.698E-03     5.449E-06     6.901E-06     1.558E-05     1.567E-06     3.508E-06     8.398E-06     8.
      272E-05     5.524E-03     5.443E-06     1.000E-09     2.200E-07     1.999E-05     2.322E-02     2.754E-03     8.819E-04     1.392E-03     3.610E
      -07     1.296E-06     5.622E-05     3.648E-03     3.025E-03     3.186E+00     2.443E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     7.908E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     4.414E+01
 638  mil           4.897E-06     6.400E+00     1.923E+00     2.404E+00     1.797E-02     1.364E-02     8.066E-02     8.252E-02     1.933E-03     2.81
      0E-03     1.106E-03     1.168E+00     1.256E-01     5.440E-02     3.000E-09     4.200E-08     4.000E-09     2.899E-01     7.237E-03     2.985E-0
      3     5.334E+00     1.998E+01     2.371E-03     2.490E+01     5.355E+02     2.042E+00     1.356E+00     5.348E-01     3.322E-02     2.248E-01   
        9.066E-03     5.952E-04     7.484E-01     5.464E-02     1.770E-04     3.051E-06     7.033E-04     5.316E-06     1.318E-05     6.962E-06     6.
      874E-04     9.218E-01     4.583E-04     3.000E-09     2.792E-06     2.189E-05     6.493E-02     4.205E-03     5.616E-03     1.734E-03     2.941E
      -05     1.656E-05     9.907E-05     1.284E-03     1.644E-02     1.679E+01     2.240E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     6.666E+02     0.000E+00     3.324E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.120E+02
 639  pcr           1.370E-07     7.790E-05     2.433E-05     3.748E-04     5.812E-06     1.060E-05     4.980E-01     3.677E-05     2.106E-02     2.72
      5E-02     1.048E-02     7.011E-01     2.177E-02     1.558E-01     2.189E-10     7.000E-09     6.971E-10     1.796E-06     6.879E-02     3.390E-0
      2     1.176E-02     4.121E-02     1.695E-02     7.884E-01     1.772E+00     3.092E+01     6.135E-03     2.272E-03     5.909E-03     8.211E-04   
        5.322E-05     5.600E-08     1.115E-01     1.316E-05     3.560E-07     3.280E-07     4.140E-07     6.800E-08     4.280E-07     1.132E-02     7.
      799E-03     9.957E-03     1.970E-07     4.993E-10     2.900E-08     2.079E-06     8.501E-02     4.205E-05     2.259E-06     1.446E-06     2.100E
      -07     5.090E-07     3.100E-05     1.733E-04     1.506E-02     1.548E+01     1.090E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.119E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 640  sgr           7.900E-08     5.178E-05     1.806E-05     2.323E-02     8.407E-06     3.244E-03     5.479E+00     6.297E-03     4.439E+00     5.32
      7E+00     2.220E+00     1.706E-02     2.847E-01     1.643E+00     4.528E-10     1.600E-08     9.061E-10     1.906E-05     1.538E+01     7.580E+0
      0     4.326E-01     9.215E+00     3.199E-03     1.172E+02     2.074E+02     8.012E+00     5.918E-05     2.857E-05     1.407E-05     7.430E-05   
        3.985E-05     2.068E-05     5.452E-02     7.039E-06     1.998E-06     4.590E-07     3.660E-06     1.700E-08     1.364E-06     2.571E-01     2.
      426E-01     6.914E-03     2.579E-05     3.000E-09     9.020E-07     2.820E-07     1.950E-02     3.158E-05     6.659E-06     1.485E-05     1.256E
      -02     9.476E-03     2.403E-02     3.551E-02     3.511E-02     2.338E+02     2.092E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.591E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.444E+01
 641  ofd           4.729E-05     1.076E-02     4.338E-03     3.097E-02     4.038E-03     8.782E-03     1.901E+01     2.110E-02     1.896E+01     9.71
      8E+01     1.636E+01     4.286E-01     8.223E-01     5.923E+00     9.400E-08     5.600E-07     2.200E-08     1.047E-03     2.724E+00     2.670E+0
      0     2.790E+00     1.513E+01     4.378E-03     1.650E+02     3.670E+02     1.176E+02     2.117E-01     8.671E-02     2.225E-01     9.809E-02   
        7.253E-03     6.446E-06     4.429E+00     2.788E-03     1.393E-04     9.439E-05     1.554E-04     1.358E-05     3.359E-05     3.627E-01     3.
      117E-01     3.231E-01     1.222E-05     6.000E-09     1.642E-06     6.005E-05     2.844E+00     9.549E-03     5.562E-03     6.919E-03     1.959E
      -05     4.847E-03     1.299E-02     2.464E-02     1.542E-01     5.923E+02     1.253E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.504E+03     2.023E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.737E+03
 642  b_t           9.200E-08     9.055E-03     4.172E-03     9.931E-03     1.318E-06     6.291E-03     1.695E+01     1.870E-05     2.388E-02     2.86
      3E-02     1.198E-02     8.887E+01     7.060E-03     2.985E-02     5.970E-07     1.605E-06     1.230E-07     1.614E-02     8.049E-02     3.960E-0
      2     1.410E-02     4.984E-02     7.610E-02     8.021E-01     8.663E+00     2.524E+02     1.060E+02     1.484E+02     1.901E-01     2.644E+00   
        9.087E-01     3.750E-03     1.504E+01     2.813E-01     1.403E-01     6.763E-06     5.062E-01     3.462E-02     1.076E-01     4.701E-01     1.
      100E+00     9.721E+00     9.604E-06     8.000E-09     6.110E-06     1.019E-04     1.013E+01     2.117E-01     1.118E-01     1.042E+00     3.597E
      -05     2.295E-03     8.835E-04     1.518E-02     6.117E-02     4.489E+02     4.659E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.052E+02     0.000E+00     1.121E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.641E+01
 643  tex           2.201E-02     4.786E+00     2.206E+00     3.870E+01     1.178E-01     6.296E-01     9.041E-03     3.556E+00     5.980E-02     4.66
      8E-02     2.916E-02     2.191E+02     1.947E+00     2.283E+01     3.353E-06     6.180E-07     2.700E-08     1.987E-01     4.756E-01     8.992E-0
      2     1.473E-01     1.645E-01     1.494E-02     1.124E+01     2.055E+01     3.379E+01     1.586E+03     2.070E+03     3.107E+00     1.067E+02   
        1.299E+01     4.282E-02     2.150E+02     4.016E+00     1.544E+00     4.411E-04     7.666E+00     1.439E+00     3.693E-01     8.998E+00     1.
      629E+01     6.392E+01     1.578E-04     3.400E-08     1.874E-05     4.099E-02     6.275E+01     1.634E+01     9.592E+00     3.163E+00     7.686E
      -05     1.796E-04     2.590E-04     8.517E-03     1.162E-02     3.657E+02     4.778E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     5.196E+02     7.987E+00     1.055E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     7.380E+02
 644  wap           5.333E-03     5.382E+00     2.478E+00     2.021E+01     1.152E-01     7.105E-01     1.327E-02     1.460E+00     6.348E-02     6.29
      7E-02     3.015E-02     2.212E+02     1.605E+00     6.825E+00     1.256E-04     9.948E-04     8.491E-05     5.363E-01     5.729E-01     1.092E-0
      1     4.558E-02     1.822E-01     2.914E-03     2.019E+00     3.775E+00     5.138E+01     2.664E+02     3.691E+02     5.257E-01     3.197E+00   
        2.283E+00     7.572E-03     3.743E+01     6.832E-01     3.860E-01     2.731E-04     1.221E+00     1.432E-01     1.513E-01     2.791E+00     1.
      664E+00     2.805E+01     3.714E-03     5.890E-07     2.145E-05     8.355E-03     1.157E+01     3.311E+00     1.278E+00     7.089E-01     1.224E
      -01     1.202E-01     9.207E-02     5.670E-01     7.446E-01     6.557E+01     6.377E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.220E+03     3.614E+00     8.745E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     3.004E+03
 645  lea           4.840E-07     8.946E+00     4.173E+00     6.693E-01     2.773E-05     2.264E-02     9.009E-03     5.224E-02     2.217E+00     2.21
      4E+00     1.052E+00     6.263E+00     3.289E-01     1.181E-01     1.290E-07     2.710E-07     2.900E-08     1.104E-03     2.010E+01     3.829E+0
      0     7.350E-06     6.362E+00     5.170E-07     1.029E-04     2.723E-03     1.460E+00     7.509E+00     9.210E+01     1.330E+03     6.587E+01   
        2.739E-03     1.173E-05     1.399E+02     3.802E-03     3.928E-04     1.448E-05     2.352E-03     1.434E-04     5.491E-05     2.432E-04     7.
      536E-03     2.509E+02     9.837E-05     4.041E-06     1.951E-06     4.056E-04     5.186E+01     1.296E+01     1.543E+00     2.220E+00     3.878E
      -04     3.833E-05     2.483E-05     3.562E-03     8.403E-03     4.145E-02     4.850E-07     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     8.082E+02     1.534E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     4.247E+02
 646  lum           6.920E-07     3.314E-01     1.093E-01     2.007E+01     1.275E-01     4.998E-02     3.453E-01     2.505E-01     3.171E-01     1.74
      8E-01     1.644E-01     5.157E+00     5.188E-01     6.206E-01     5.697E-02     9.275E-02     8.382E-03     1.231E+01     5.680E-01     3.410E-0
      1     4.446E-01     4.968E-01     2.905E-03     3.838E-01     1.282E+01     8.210E-01     4.724E+00     1.315E-01     7.312E-02     2.446E+02   
        9.205E+01     4.741E-03     1.192E+02     1.111E+01     1.133E+00     2.725E-02     4.217E+00     4.229E+00     2.396E+00     2.021E+01     2.
      745E+01     4.930E+01     4.271E-03     2.220E-07     2.204E-04     5.238E+02     7.172E+01     7.214E+01     4.603E+00     6.993E+00     4.511E
      -01     4.008E-01     2.033E-01     2.900E+00     7.668E+00     1.501E+02     4.012E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     3.337E+02     5.927E+00     2.602E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.300E+02
 647  ppp           3.044E-06     6.405E+00     2.983E+00     7.487E+01     8.297E-01     7.375E-01     2.026E+01     5.187E+00     1.156E+00     1.12
      1E+00     5.489E-01     3.462E+00     1.681E+00     4.392E-01     2.419E-03     2.392E-02     1.130E-03     4.611E+00     1.032E+01     1.981E+0
      0     1.162E+00     3.338E+00     3.960E-02     1.319E+01     4.147E+01     3.034E+01     4.218E+00     7.458E+00     5.399E-01     3.541E+00   
        1.003E+03     1.115E-02     1.123E+02     5.288E+00     4.137E+00     1.396E+00     2.942E+01     3.273E+00     2.265E+00     4.744E+01     4.
      951E+01     9.623E+00     6.213E-01     1.270E-05     2.507E-04     1.321E+01     1.387E+02     2.797E+01     2.356E+00     6.909E+00     2.499E
      +01     7.616E+01     4.390E+01     4.597E+02     1.181E+02     5.084E+02     4.882E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.131E+02     1.755E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.564E+02
 648  p_c           7.821E-02     2.464E+02     1.137E+02     2.888E+02     2.061E+01     1.909E+01     4.128E+01     2.153E+01     6.391E+00     5.33
      7E+00     3.062E+00     2.950E+01     4.774E+01     1.217E+02     9.069E-06     5.111E-06     2.470E-07     1.854E+02     9.022E+00     1.708E+0
      0     6.166E-01     3.038E+00     1.783E-02     7.289E+00     1.808E+01     1.869E+00     1.222E+01     4.984E+00     2.299E-01     3.439E+00   
        3.666E+01     1.822E+02     1.858E+02     5.243E+02     3.347E+01     1.940E+01     1.832E+01     2.107E+00     1.253E+00     9.800E+00     2.
      053E+01     3.271E+01     5.535E+02     4.058E-06     8.104E-04     1.875E+01     3.771E+00     1.244E+03     2.396E+02     5.360E+02     1.032E
      +00     5.741E-01     4.579E-01     5.154E+00     2.397E+00     5.986E+01     5.409E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.622E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     4.627E+02
 649  crp           5.663E-02     9.034E+01     4.196E+01     9.339E+01     4.734E+00     4.652E+00     1.050E+01     9.514E+00     7.021E+00     6.20
      5E+00     3.354E+00     4.068E+01     1.546E+00     3.357E+00     8.932E-02     9.690E-01     4.149E-02     1.059E+02     6.013E+01     1.141E+0
      1     3.815E+01     1.987E+01     3.226E-01     1.825E+01     3.517E+02     2.401E+01     5.047E+01     2.090E+01     2.249E+00     7.597E+01   
        2.292E+02     5.023E-01     2.284E+03     6.170E+01     1.524E+01     1.582E+00     5.540E+01     7.870E+01     3.048E+01     2.263E+02     3.
      523E+02     2.181E+02     3.664E+00     1.508E-05     9.107E-03     2.463E+02     1.469E+02     1.116E+02     4.802E+00     6.763E+00     2.632E
      +00     2.230E+00     1.887E+00     6.576E+01     1.931E+01     2.770E+03     1.105E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.287E+03     2.540E+01     5.583E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.003E+03
 650  nmm           5.510E-06     3.426E+00     1.591E+00     3.125E+00     2.655E-01     3.356E-01     2.010E+01     2.829E-01     8.578E-02     8.79
      6E-02     4.226E-02     3.717E-01     2.841E-01     1.680E-01     5.245E-03     4.693E-02     2.613E-03     2.725E+01     7.783E-01     1.487E-0
      1     3.534E-01     2.468E-01     1.618E-02     2.754E+00     1.640E+01     2.936E+01     4.078E-01     1.621E-01     6.593E-02     7.343E+00   
        1.168E+00     8.845E-03     8.328E+01     9.243E+02     4.352E+01     2.842E+01     2.268E+01     1.170E+01     5.649E+00     3.259E+01     7.
      815E+01     1.031E+01     3.039E+00     4.655E-06     5.919E-04     2.730E+03     1.186E+01     5.584E+00     3.825E-01     2.330E-01     2.077E
      -01     8.647E-02     1.433E-01     2.557E+00     4.754E+00     3.494E+02     1.143E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.107E+02     1.775E+01     6.054E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     9.119E+01
 651  i_s           7.800E-08     5.384E-01     1.005E-01     1.039E+00     4.774E-02     1.098E-03     6.351E-01     1.159E-01     2.926E-01     1.95
      9E-01     1.409E-01     2.186E-02     9.285E-02     4.022E-02     3.115E-02     4.821E-01     7.252E-02     1.855E+01     1.123E+00     1.061E-0
      1     3.164E-01     4.354E-01     2.059E-02     8.343E-04     4.512E+00     2.025E-01     3.528E-01     2.682E-01     9.717E-03     2.252E+01   
        2.808E+00     2.946E-01     1.156E+01     5.156E+01     6.809E+02     2.278E+02     4.692E+02     2.091E+01     2.254E+01     6.353E+01     8.
      754E+02     4.988E+01     1.717E-01     5.596E-06     8.656E-05     2.008E+02     8.126E+00     2.844E+01     7.285E-01     1.046E+00     4.529E
      -02     4.706E-02     1.918E-02     6.241E+00     2.565E+00     1.980E+01     5.278E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     9.476E+01     1.736E+00     1.074E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.185E+02
 652  nfm           9.700E-08     1.477E-04     1.955E-05     9.429E-05     1.559E-06     8.904E-06     8.002E-03     3.265E-02     3.462E-02     2.67
      7E-02     1.666E-02     2.854E-01     7.952E-02     5.499E-02     3.901E-02     3.948E-01     2.840E-02     3.374E+00     2.815E-01     5.321E-0
      2     1.297E-01     9.725E-02     2.028E-06     6.806E-04     1.037E+00     7.265E-02     3.433E-01     1.551E-01     1.509E-02     3.180E+00   
        2.440E-01     1.689E-03     1.560E+00     3.018E+01     5.161E+01     9.175E+01     2.733E+02     6.012E+00     4.146E+00     1.647E+02     3.
      848E+02     3.984E+01     5.209E-02     1.217E-06     1.293E-05     1.507E+02     1.392E-01     5.081E-01     3.880E-01     2.175E-01     1.936E
      +00     1.329E+00     1.627E+00     2.132E+01     1.178E+00     1.585E+01     5.164E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     1.868E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     4.657E+02
 653  fmp           6.335E-06     7.508E+00     3.646E+00     7.225E+00     8.040E-01     1.317E-01     7.569E+00     5.703E-01     2.182E+00     2.09
      4E+00     1.046E+00     2.037E+00     1.086E+00     4.393E-01     4.945E-02     1.985E-01     2.618E-02     1.622E+01     2.036E+01     3.972E+0
      0     1.344E+01     6.621E+00     9.839E-02     1.509E-02     1.157E+02     1.235E+01     2.175E+00     5.464E+00     1.577E-01     5.034E+01   
        7.440E+00     1.375E-01     4.242E+01     4.323E+01     2.200E+01     1.475E+02     1.600E+02     2.443E+01     1.722E+01     2.311E+02     5.
      164E+02     4.147E+01     7.349E-01     8.551E-06     4.884E-04     6.267E+02     7.738E+01     8.995E+01     2.548E+01     1.828E+01     4.410E
      +00     1.280E+00     6.350E-01     4.479E+01     4.271E+01     2.145E+02     1.759E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.722E+02     2.325E+01     3.533E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     7.507E+01
 654  mvh           3.750E-06     8.123E-01     4.953E-01     4.561E-01     8.228E-02     7.490E-02     2.549E+00     5.605E-02     3.239E-01     1.78
      7E-01     1.421E-01     4.626E-01     5.963E-02     3.193E-01     4.964E-02     1.687E-01     7.879E-02     1.359E+01     2.242E+00     4.378E-0
      1     1.696E+00     8.612E-01     1.532E-02     1.296E+00     2.256E+01     5.268E+00     2.015E-01     1.828E-01     5.175E-03     1.247E+00   
        2.001E+00     4.488E-02     1.511E+01     7.209E+00     3.177E+00     8.232E+00     1.622E+01     9.209E+02     8.430E+01     9.327E+00     3.
      421E+01     5.749E-01     2.808E-01     1.524E-05     1.761E-03     2.184E+01     1.046E+02     3.374E+01     8.649E-01     2.427E+00     1.102E
      -01     2.499E-02     3.955E-03     8.537E-01     1.984E-01     4.264E+02     4.674E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.818E+02     1.197E+01     1.903E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.931E+02
 655  otn           7.180E-07     2.080E-01     2.194E-02     4.621E-01     8.727E-03     2.199E-02     8.217E-01     3.649E-02     1.931E-02     4.03
      2E-02     1.819E-02     3.243E-02     1.527E-02     1.391E+00     3.033E-02     2.903E-01     3.452E-02     2.014E+00     3.019E-01     4.887E-0
      2     3.392E-01     7.457E-02     3.044E-03     1.078E+00     1.107E+00     2.597E-01     3.027E-01     1.401E-02     4.933E-04     1.668E-02   
        1.873E-01     4.871E-03     6.437E-01     5.584E-01     1.774E+00     3.269E+00     3.918E+00     4.312E+01     3.823E+02     6.976E+00     8.
      200E+00     1.056E+00     1.538E-01     4.018E-06     3.100E-05     4.060E+00     2.244E+00     2.952E+01     1.597E+01     4.292E+01     2.940E
      -02     1.627E-04     2.994E-03     6.091E-02     7.809E-03     7.791E+02     5.460E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.916E+01     9.165E+00     3.932E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     7.317E+01
 656  ele           3.257E-03     1.111E+00     5.721E-01     6.671E-01     5.348E-01     4.626E-01     1.311E+00     2.059E-01     2.354E-01     1.89
      9E-01     1.130E-01     3.321E-01     4.898E+00     4.524E-01     3.684E-03     2.915E-02     3.195E-03     1.230E+01     1.946E+00     3.679E-0
      1     1.886E+00     6.618E-01     2.593E-02     2.817E+00     8.989E+00     1.123E+00     1.194E-01     1.850E-01     9.648E-03     4.264E-02   
        2.084E+00     1.020E-01     4.094E+00     7.313E+00     9.404E+00     1.560E+01     2.974E+01     5.296E+00     7.130E+00     5.189E+02     8.
      272E+01     6.016E+00     1.004E+00     7.375E-06     7.067E-05     5.764E+01     1.196E+01     1.477E+01     1.424E+00     1.593E+01     1.848E
      +01     7.583E+00     1.564E+00     7.914E+01     2.338E+01     1.728E+02     2.552E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     6.656E+02     7.923E+01     2.101E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.042E+03
 657  ome           1.513E-02     4.015E+01     1.838E+01     3.295E+01     3.744E+00     3.276E+00     3.777E+00     3.171E+00     2.344E+00     1.63
      3E+00     1.130E+00     5.987E-01     6.112E+00     2.662E+00     1.709E-02     1.388E-01     1.957E-02     3.895E+01     1.826E+01     3.431E+0
      0     6.299E+00     6.485E+00     4.806E-02     4.579E+00     6.844E+01     6.057E+00     1.034E+00     3.017E+00     8.211E-02     1.528E+01   
        5.661E+00     1.967E-01     2.595E+01     1.752E+01     1.013E+02     6.493E+01     1.148E+02     2.266E+01     3.118E+01     2.270E+02     5.
      627E+02     2.006E+01     1.174E+00     3.898E-05     5.941E-03     5.166E+02     4.799E+01     5.887E+01     1.434E+01     8.282E+00     7.623E
      +00     2.935E+00     7.639E-01     6.398E+01     3.110E+01     6.853E+02     7.794E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     3.037E+02     4.312E+01     5.549E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.607E+03
 658  omf           4.261E-06     2.806E-01     1.548E-01     1.407E+00     1.844E-01     8.590E-02     5.860E-01     2.562E-01     9.685E-02     1.76
      7E-01     4.093E-02     6.400E-01     1.356E-01     5.103E-01     1.874E-02     3.376E-01     4.667E-02     1.117E+01     2.536E+00     3.027E-0
      1     1.199E+00     7.964E-01     1.439E-02     1.488E+00     1.011E+01     1.813E+00     8.016E-01     2.418E+00     1.833E-01     2.679E+00   
        5.310E+00     5.054E-02     1.611E+02     1.661E+01     1.051E+01     1.421E-01     1.536E+00     1.435E+00     3.794E+00     1.153E+01     3.
      843E+01     4.292E+01     3.652E-01     1.115E-05     6.518E-05     5.250E+01     7.762E+01     2.822E+01     7.758E+00     5.492E+00     2.709E
      +00     2.651E+00     1.401E+00     1.914E+01     1.750E+01     9.020E+02     2.311E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.190E+02     6.346E+00     1.108E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.136E+02
 659  ely           8.048E-02     5.334E+01     2.491E+01     8.348E+01     3.782E+00     1.647E+01     2.303E+01     1.205E+01     9.227E+00     9.69
      7E+00     4.390E+00     5.882E+01     9.768E+00     7.237E+00     6.910E-06     1.858E+00     4.445E+00     2.330E+02     1.774E+01     3.392E+0
      0     1.758E+00     5.525E+00     6.049E-02     2.377E+01     5.748E+01     5.926E+00     2.963E+01     2.758E+01     5.101E-01     6.387E-01   
        2.556E+01     7.741E+01     1.437E+02     3.766E+02     4.847E+00     3.907E+00     9.716E+01     4.768E-01     5.564E-01     3.261E+01     8.
      595E+01     2.475E+00     1.159E+02     3.787E+00     6.566E-02     4.344E+01     1.088E+01     5.527E+01     4.077E+00     6.466E+00     6.581E
      +00     5.865E+00     1.846E+00     2.636E+01     5.586E+01     3.141E+02     2.891E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     9.615E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 660  gdt           2.987E-10     3.669E-06     1.756E-06     1.852E-06     2.770E-07     9.200E-08     9.150E-07     1.390E-07     2.490E-07     1.10
      0E-07     6.500E-08     1.750E-07     5.000E-08     8.200E-08     3.020E-07     5.300E-08     8.000E-09     1.043E+01     1.039E-03     4.622E-0
      4     4.624E-04     6.228E-04     7.182E-06     4.460E-03     5.651E-03     8.119E-04     2.291E-02     2.485E-02     7.889E-03     1.939E-02   
        5.323E-02     2.305E-06     9.726E-02     7.320E-02     1.931E-02     5.384E-03     9.211E-03     2.336E-03     1.948E-03     6.763E-03     1.
      058E-02     2.047E-01     1.973E+01     1.117E-06     2.879E-04     6.428E-03     4.653E-03     2.082E-06     3.610E-07     3.140E-07     1.188E
      -04     1.406E-04     2.813E-05     5.922E-04     4.614E-03     5.399E-02     3.480E-06     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 661  wtr           3.684E-06     2.683E-02     1.492E-02     2.368E-02     5.422E-03     2.608E-03     2.028E-02     3.722E-03     3.790E-03     4.33
      1E-03     2.107E-03     2.229E-02     8.072E-04     2.419E-04     4.440E-07     1.248E-05     1.233E-06     1.816E-02     2.450E-02     5.903E-0
      3     4.086E-03     8.194E-03     1.821E-05     1.408E-02     4.037E-02     1.140E-02     4.548E-02     6.973E-02     3.216E-02     1.993E-02   
        2.709E-02     3.006E-03     1.019E-01     5.374E-02     2.038E-02     7.117E-03     2.258E-02     6.735E-03     7.359E-03     3.365E-02     7.
      172E-02     1.627E-02     1.651E-01     1.117E-05     2.812E-02     4.242E-02     9.818E-02     7.108E-02     2.960E-03     5.883E-03     7.391E
      -03     1.035E-02     3.477E-03     2.863E-02     4.034E-01     6.756E-01     1.200E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.143E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     8.178E+00
 662  cns           3.173E-03     1.196E+01     5.603E+00     1.396E+01     2.440E+00     1.102E+00     9.163E-01     9.291E-01     3.761E-01     4.05
      6E-01     1.778E-01     8.219E-01     5.687E+00     1.054E+00     5.828E-06     1.991E-04     2.753E-05     7.153E-01     3.442E+00     6.605E-0
      1     4.159E-01     1.055E+00     8.254E-03     2.002E+00     7.446E+00     1.353E+00     9.480E-01     6.010E-01     3.193E-02     8.391E-01   
        4.030E+00     2.983E-02     1.524E+01     5.331E+00     1.069E+00     1.267E+00     1.682E+00     4.154E-01     6.369E-01     4.007E+00     4.
      152E+00     8.493E-01     7.646E-01     5.745E-04     1.534E-02     2.404E+02     3.702E+01     1.489E+01     2.419E+00     2.124E+00     8.295E
      +00     6.763E+00     1.530E+00     3.614E+01     2.553E+01     3.340E+02     2.230E-01     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.739E+02     2.185E+01     1.086E+04     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.301E+01
 663  trd           5.423E-02     4.892E+01     2.065E+01     6.779E+01     3.486E+00     5.876E+00     1.864E+01     5.759E+00     1.194E+01     1.30
      5E+01     5.643E+00     7.593E+01     7.234E+00     1.079E+01     5.643E-02     6.584E-01     4.111E-02     1.097E+02     1.125E+02     2.153E+0
      1     2.920E+01     3.453E+01     4.215E-01     1.278E+02     5.118E+02     6.752E+01     1.210E+02     1.803E+02     9.663E+00     5.158E+01   
        3.118E+02     8.233E-01     5.379E+02     7.550E+01     7.454E+01     1.021E+02     1.252E+02     1.005E+02     5.080E+01     1.829E+02     2.
      454E+02     6.240E+01     1.399E+00     6.715E-05     6.176E-03     3.304E+02     1.676E+02     1.845E+02     1.504E+01     2.584E+01     2.028E
      +01     1.799E+01     8.588E+00     1.290E+02     1.810E+02     1.098E+03     2.384E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.535E+03     3.127E+00     1.429E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.244E+02
 664  otp           5.471E-02     4.099E+01     2.025E+01     4.899E+01     3.226E+00     5.205E+00     2.034E+01     2.359E+00     7.152E+00     7.60
      0E+00     3.417E+00     6.893E+01     4.962E+00     4.767E+00     5.277E-02     1.724E-01     2.449E-02     1.130E+02     6.221E+01     1.138E+0
      1     1.253E+01     1.810E+01     2.792E-01     4.753E+01     1.677E+02     2.138E+01     4.685E+01     4.079E+01     3.118E+00     2.907E+01   
        5.868E+01     4.824E-01     2.240E+02     1.143E+02     4.918E+01     1.748E+01     5.152E+01     2.475E+01     1.525E+01     5.013E+01     6.
      838E+01     3.690E+01     3.955E+00     1.597E-04     8.578E-03     3.591E+02     3.789E+02     2.205E+02     2.178E+01     7.137E+01     3.455E
      +01     3.504E+01     1.582E+01     1.429E+02     2.695E+01     1.117E+03     2.076E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.873E+03     6.167E+01     7.183E+01     0.000E+00     8.604E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.499E+03
 665  wtp           1.255E-02     6.095E+00     2.653E+00     4.895E+00     3.089E-01     5.950E-01     2.874E+00     3.376E-01     3.654E-01     5.69
      0E-01     1.403E-01     6.126E+00     5.772E-01     1.739E+00     7.511E-03     3.068E-02     3.031E-03     6.782E+00     5.298E+00     4.128E-0
      1     1.339E+00     8.742E-01     5.566E-02     3.106E+00     1.371E+01     1.123E+00     3.170E+00     2.779E+00     3.433E-01     2.047E+00   
        2.758E+00     7.269E-02     1.934E+01     1.141E+01     9.048E+00     2.253E+00     4.288E+00     2.346E+00     1.468E+00     6.744E+00     5.
      042E+00     6.109E+00     5.880E-01     1.229E-05     3.744E-04     1.924E+01     1.959E+01     6.164E+00     3.372E+01     2.056E+00     1.374E
      +00     6.816E-01     2.305E-01     9.204E+00     5.860E+00     7.572E+01     5.377E-04     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     9.191E+01     1.961E+01     1.105E+01     0.000E+00     6.600E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     9.970E+01
 666  atp           2.821E-03     5.538E+00     1.757E+00     3.158E+00     3.310E-01     9.202E-01     2.856E+00     1.574E+00     5.362E-01     4.01
      7E-01     2.541E-01     1.259E+01     6.456E-01     3.343E-01     1.059E-02     5.215E-02     7.452E-03     1.530E+01     7.310E+00     2.511E+0
      0     1.559E+00     4.181E+00     1.133E-02     5.132E+00     2.229E+01     3.613E+00     1.042E+01     1.083E+01     5.010E-01     3.938E+00   
        1.095E+01     1.998E-02     2.954E+01     6.747E+00     4.268E+00     2.081E+00     9.688E+00     5.898E+00     6.129E+00     2.672E+01     2.
      024E+01     3.830E+00     3.821E-01     1.271E-05     2.865E-04     2.517E+01     1.020E+02     5.957E+00     1.673E+00     3.233E+01     1.965E
      +01     1.287E+01     5.241E+00     6.429E+01     6.498E+01     4.022E+02     2.005E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     4.207E+02     1.478E+01     2.194E+01     0.000E+00     8.882E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     9.359E+02
 667  cmn           2.604E-06     3.059E+01     1.301E+01     1.787E+01     8.853E-01     1.320E+00     2.046E+00     1.565E+00     5.081E-01     5.33
      9E-01     2.403E-01     7.019E+00     1.175E+00     3.842E-01     3.239E-03     4.144E-02     4.330E-03     4.526E+00     4.698E+00     8.983E-0
      1     1.293E+00     1.461E+00     2.227E-02     4.113E+00     1.474E+01     1.774E+00     3.925E+00     2.023E+00     9.939E-02     1.799E+00   
        3.170E+01     1.039E-01     1.849E+01     4.592E+01     4.462E+00     5.805E+00     1.284E+01     3.704E+00     4.362E+00     2.866E+01     3.
      113E+01     3.840E+00     1.688E-01     1.430E-05     1.277E-03     1.622E+01     5.842E+01     1.483E+01     1.654E+00     5.980E+00     7.652E
      +01     1.671E+01     4.693E+00     6.376E+01     1.326E+01     1.402E+02     5.577E-03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.217E+02     8.423E+01     6.223E-01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     4.067E+02
 668  ofi           1.687E-02     2.555E+01     1.447E+01     3.156E+01     1.315E+00     1.703E+00     2.990E+00     2.535E+00     8.606E-01     9.36
      5E-01     4.093E-01     9.056E+00     1.441E+00     1.765E+00     4.035E-03     7.568E-02     6.998E-03     2.037E+01     7.998E+00     1.535E+0
      0     3.924E+00     2.466E+00     9.729E-02     1.360E+01     4.854E+01     5.508E+00     1.797E+01     6.517E+00     2.297E-01     3.900E+00   
        5.123E+01     3.680E-01     5.759E+01     1.054E+02     2.892E+01     1.780E+01     3.849E+01     8.058E+00     9.178E+00     5.834E+01     9.
      406E+01     5.157E+00     5.996E-01     1.803E-04     4.800E-03     4.968E+01     9.912E+01     2.838E+01     7.314E+00     8.172E+00     9.664E
      +00     8.343E+01     8.456E+00     5.918E+01     8.589E+00     5.053E+01     1.693E-01     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     3.883E+01     5.354E-01     9.325E-01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     2.200E+01
 669  isr           4.755E-03     1.534E+01     8.220E+00     5.622E+00     8.411E-01     1.275E+00     2.970E+00     6.649E-01     2.170E-01     2.10
      8E-01     1.041E-01     1.148E+01     3.260E-01     3.563E-01     1.629E-03     2.121E-02     2.333E-03     5.395E+00     1.909E+00     3.643E-0
      1     1.501E+00     6.099E-01     2.090E-02     2.859E+00     9.503E+00     1.190E+00     4.167E+00     2.156E+00     5.755E-02     9.591E-01   
        6.627E+00     1.248E-01     1.142E+01     2.615E+01     3.571E+00     2.430E+00     4.678E+00     1.152E+00     1.083E+00     2.181E+01     4.
      142E+01     7.835E-01     1.311E-01     1.242E-05     7.020E-04     1.477E+01     7.946E+00     2.473E+01     1.682E+00     2.349E+00     1.314E
      +00     8.282E+00     5.248E+00     1.078E+01     1.012E+00     1.584E+01     1.936E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     9.915E+01     0.000E+00     5.106E-01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.265E+02
 670  obs           3.500E-02     8.867E+01     3.887E+01     6.983E+01     2.295E+00     3.442E+00     3.842E+00     5.420E+00     2.395E+00     2.36
      2E+00     1.148E+00     1.353E+01     2.506E+00     3.771E+00     3.043E-02     1.664E-01     1.023E-02     7.891E+01     2.112E+01     4.042E+0
      0     8.635E+00     6.776E+00     7.980E-02     3.325E+01     1.521E+02     1.652E+01     1.478E+01     1.346E+01     4.133E-01     5.048E+00   
        1.319E+02     5.789E-01     1.356E+02     1.881E+02     5.717E+01     6.138E+01     9.770E+01     1.537E+01     1.692E+01     3.698E+02     3.
      118E+02     1.192E+01     1.612E+00     2.041E-04     7.292E-03     2.313E+02     3.113E+02     1.416E+02     4.302E+01     4.782E+01     3.176E
      +01     5.592E+01     1.859E+01     4.040E+02     3.251E+01     3.751E+02     7.412E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     6.132E+01     6.127E+02     5.367E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.109E+03
 671  ros           6.255E-05     3.218E+00     1.534E+00     5.026E+00     2.188E-01     1.005E-01     3.664E-02     5.514E-01     2.746E-01     3.00
      5E-01     1.306E-01     1.470E+00     3.830E-01     9.159E-01     1.089E-03     4.940E-03     7.776E-04     6.912E+00     2.563E+00     4.923E-0
      1     5.857E-01     7.954E-01     2.618E-02     2.310E+00     1.437E+01     1.566E+00     9.134E+00     4.202E+00     1.110E-01     1.370E+00   
        2.680E+01     1.058E-01     2.420E+01     3.680E+01     1.221E+01     4.525E+00     1.427E+01     2.517E+00     2.567E+00     1.625E+01     6.
      277E+01     1.621E+00     7.513E-02     9.219E-06     3.441E-04     3.941E+01     4.346E+01     4.164E+00     6.036E-01     5.149E+00     1.115E
      +01     1.433E+01     6.756E+00     3.012E+01     2.653E+01     5.916E+02     1.735E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     3.555E+02     3.474E+02     3.891E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     8.637E+01
 672  osg           5.207E-02     1.738E+02     8.139E+01     2.441E+02     1.916E+01     2.104E+01     4.890E+01     1.658E+01     7.741E+00     8.46
      1E+00     3.650E+00     4.454E+01     3.563E+01     1.019E+01     3.334E-02     1.989E-01     2.675E-02     2.132E+02     7.312E+01     1.399E+0
      1     1.857E+01     2.242E+01     3.468E-01     9.129E+01     3.373E+02     6.706E+01     5.268E+01     3.028E+01     1.118E+00     2.035E+01   
        1.495E+02     2.718E-01     5.370E+02     3.178E+02     6.681E+01     5.104E+01     7.675E+01     2.391E+01     8.288E+00     3.033E+02     1.
      390E+02     6.194E+01     4.939E+00     3.600E-05     1.393E-03     4.739E+02     1.492E+03     4.336E+02     7.444E+01     8.494E+01     2.384E
      +02     2.230E+02     6.726E+01     8.363E+02     2.354E+02     8.730E+03     1.382E-04     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     7.118E+03     1.292E+04     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.707E+03
 673  dwe           2.000E-09     2.454E-05     7.161E-06     4.500E-05     1.600E-07     1.789E-06     3.788E-06     3.354E-06     1.735E-04     2.23
      2E-04     1.235E-05     1.237E-06     2.570E-07     5.843E-05     3.000E-09     1.610E-07     3.000E-09     1.984E-04     4.646E-05     2.147E-0
      5     7.842E-06     2.181E-05     1.651E-06     7.618E-05     1.426E-04     3.642E-05     2.836E-04     2.336E-03     3.361E-04     1.068E-04   
        1.031E-04     1.488E-05     3.845E-04     5.311E-05     4.711E-05     2.383E-05     2.006E-05     1.198E-05     2.403E-05     5.561E-06     4.
      313E-05     6.178E-05     6.108E-05     5.900E-08     1.459E-06     3.569E-03     1.124E-02     3.503E-04     7.057E-05     3.707E-05     9.680E
      -05     1.740E-05     4.247E-06     3.465E-03     1.175E-03     1.926E-02     8.621E-05     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     2.375E+03     1.624E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 674  UnSkil        2.326E+00     1.476E+03     6.636E+02     1.807E+03     1.148E+02     1.105E+02     2.448E+02     1.432E+02     4.696E+02     5.04
      5E+02     2.603E+02     2.579E+02     1.934E+02     1.031E+02     2.745E-01     4.331E-01     2.310E-02     7.993E+02     5.099E+02     3.159E+0
      2     2.139E+01     3.161E+02     1.344E+01     1.370E+02     5.893E+02     1.372E+02     3.181E+02     1.139E+03     9.296E+02     3.719E+02   
        3.217E+02     1.046E+02     8.658E+02     5.522E+02     1.466E+02     5.501E+01     4.035E+02     1.310E+02     2.035E+02     3.688E+02     6.
      066E+02     2.962E+02     3.063E+02     6.691E-01     3.670E+01     2.602E+03     3.521E+03     2.453E+03     3.094E+02     5.656E+02     2.173E
      +02     2.152E+02     1.213E+02     5.890E+02     2.670E+02     4.357E+03     4.826E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 675  Skill         2.349E-02     1.491E+01     6.703E+00     1.826E+01     1.159E+00     1.116E+00     2.472E+00     1.446E+00     4.744E+00     5.09
      6E+00     2.630E+00     2.605E+00     1.954E+00     1.041E+00     3.152E-02     8.558E-02     3.330E-03     1.184E+02     9.425E+01     5.839E+0
      1     4.696E+00     5.492E+01     2.598E+00     3.006E+01     1.294E+02     1.960E+01     5.135E+01     1.627E+02     1.451E+02     4.833E+01   
        6.173E+01     2.220E+01     1.875E+02     9.592E+01     2.547E+01     1.040E+01     7.288E+01     2.495E+01     3.875E+01     8.262E+01     1.
      359E+02     3.811E+01     1.557E+02     3.401E-01     1.865E+01     4.737E+02     7.728E+02     5.386E+02     6.792E+01     1.241E+02     1.574E
      +02     1.558E+02     8.780E+01     4.265E+02     1.933E+02     6.674E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 676  Captl         1.319E+00     8.368E+02     3.763E+02     1.025E+03     6.508E+01     6.267E+01     1.388E+02     8.118E+01     2.663E+02     2.86
      1E+02     1.476E+02     1.462E+02     1.198E+02     2.534E+02     1.064E-01     1.572E+00     7.422E-02     1.184E+03     6.489E+02     2.248E+0
      2     2.199E+01     2.221E+02     2.845E+01     1.949E+02     5.565E+02     1.541E+02     1.749E+02     5.966E+02     4.415E+02     1.666E+02   
        2.125E+02     2.785E+02     9.889E+02     4.603E+02     1.667E+02     5.869E+01     2.236E+02     8.125E+01     6.780E+01     2.772E+02     5.
      096E+02     1.816E+02     1.252E+03     4.700E+00     6.776E+01     1.648E+03     1.916E+03     1.395E+03     2.316E+02     3.807E+02     3.607E
      +02     1.979E+02     3.343E+01     1.436E+03     3.385E+02     3.238E+03     2.054E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 677  LandR         4.533E-01     2.877E+02     1.294E+02     3.523E+02     2.237E+01     2.154E+01     4.771E+01     2.791E+01     9.154E+01     9.83
      4E+01     5.074E+01     5.027E+01     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 678  natrs         0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     3.021E-01     2.118E+00     4.215E-01     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 679  hhsld         0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     3.205E+04     1.163E+04     2.649E+04     1.180E+03 
          2.842E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 680  gov           0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     4.406E+00     3.291E+02     3.544E+03     -1.230E-01    
      1.080E+04     0.000E+00
 681  inv           0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     5.500E+03     0.000E+00     0.000E+00     8.064E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     1.163E+04
 682  depry         0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     8.064E+03     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 683  trdmg         0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     8.348E+02
 684  indtx         0.000E+00     5.783E-06     -1.378E-06    1.558E-06     1.000E-10     1.017E-06     1.608E-06     -2.290E-07    5.700E-08     -2.1
      90E-07    1.928E-06     -1.790E-07    2.013E-06     -2.100E-08    -5.000E-09    -3.516E-03    8.868E-03     5.113E-03     -3.000E-07    1.900E-0
      8     -1.892E-06    -1.213E-06    5.000E-09     -7.154E-04    6.749E-03     -5.280E-07    1.430E-06     -3.774E-06    9.950E-07     3.620E-01   
        -2.745E-03    2.055E-04     5.270E-06     -1.619E-03    -4.800E-01    -5.926E-04    1.029E+00     7.823E-04     8.019E-04     -2.792E-03    -5
      .635E-05    -9.330E-01    2.107E-02     0.000E+00     0.000E+00     1.002E-05     -3.210E-06    2.520E+01     -4.582E+00    -1.944E+01    6.940E
      -07     -2.807E-06    4.900E-08     -3.108E-05    -4.312E-06    9.441E-05     1.500E-08     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     -4.456E-02    0.000E+00     3.264E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 685  prdtx         5.507E-03     3.163E+00     1.484E+00     4.697E+00     2.352E-01     8.688E-01     1.224E+00     6.163E-01     1.050E+00     1.23
      1E+00     6.133E-01     2.431E+00     5.828E-01     6.950E-01     -1.073E-06    9.540E-07     0.000E+00     3.173E+01     2.118E+00     9.352E-0
      1     3.984E-01     1.125E+00     1.338E-02     5.216E+00     1.275E+01     1.200E+00     1.018E+01     9.950E+00     1.995E-01     8.195E+00   
        1.552E+01     4.883E-04     1.671E+01     2.572E+01     1.061E+01     1.283E+01     1.553E+01     3.958E+00     2.567E+00     2.751E+00     8.
      253E+00     1.120E+01     0.000E+00     9.540E-07     0.000E+00     9.722E+00     1.030E+00     6.480E+00     1.022E+00     1.777E+00     1.681E
      +00     2.422E+00     9.717E-02     5.294E+00     8.629E+00     6.240E+01     4.883E-04     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 686  imptx         8.305E-01     4.650E+02     6.505E+01     2.862E+01     2.087E+01     0.000E+00     0.000E+00     1.842E+01     9.160E-01     3.94
      4E+00     0.000E+00     0.000E+00     6.495E+00     2.824E+01     1.056E+01     1.773E+02     0.000E+00     4.403E+00     8.192E+01     4.122E+0
      0     2.391E+01     9.316E+01     0.000E+00     7.896E+01     1.356E+02     1.355E+01     2.947E+02     1.873E+02     9.721E+01     1.404E+02   
        8.222E+01     2.793E+02     2.586E+02     6.787E+01     5.366E+01     1.209E+01     1.243E+02     3.712E+02     1.274E+01     1.526E+01     2.
      757E+02     1.007E+01     6.729E-04     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 687  exptx         0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     -3.870E-05    -2.334E-02  
        0.000E+00     0.000E+00     -1.772E-04    0.000E+00     -1.979E-01    0.000E+00     7.725E-02     1.453E-02     -8.789E-03    0.000E+00     0.
      000E+00     1.545E-02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 688  dirtx         0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.00
      0E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+0
      0     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00   
        0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.
      000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E
      +00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     1.080E+04     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     0.000E+00
 689  row           8.882E-01     1.141E+03     4.728E+02     1.402E+02     1.958E+02     0.000E+00     4.904E+01     2.306E+02     2.683E+01     6.50
      3E+01     0.000E+00     0.000E+00     8.422E+01     5.930E+01     3.483E+02     3.324E+03     1.343E+02     3.576E+02     4.834E+01     8.078E+0
      0     4.899E+02     2.351E+02     4.346E+00     2.179E+02     5.510E+02     1.131E+02     2.600E+03     5.788E+02     4.289E+02     7.154E+02   
        6.022E+02     2.567E+03     3.388E+03     4.098E+02     1.386E+03     6.448E+02     7.210E+02     2.190E+03     8.014E+02     1.587E+03     4.
      728E+03     2.426E+02     2.885E+02     2.011E+01     1.875E+00     8.235E+00     1.275E+02     2.041E+02     3.847E+01     4.529E+02     7.300E
      +01     3.086E+01     7.945E+01     9.642E+02     1.071E+02     5.808E+02     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00 
          0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     0.000E+00     
      0.000E+00     3.487E+04
 690  ;
 692  scalar tolerance for negligible entries / .001/ ;
 693  sam0(s0,ss0)$(sam0(s0,ss0) lt tolerance) = 0 ;
 694  sam0(s0,ss0) = .001*sam0(s0,ss0) ;
 695   
 696  sam0("total",s0) = 0 ;
 697  sam0(s0,"total") = 0 ;
 698  sam0("total",s0) = sum(ss0,sam0(ss0,s0)) ;
 699  sam0(s0,"total") = sum(ss0,sam0(s0,ss0)) ;
 700   
 701  sam0("ent","ent") = 0 ;
 702   
 703  parameter beta ;
 704  beta = .5 ;
 705   
 706  nsam(s,ss)= sum(s0$map(s0,s),sum(ss0$map(ss0,ss),sam0(s0,ss0))) ;
 707   
 708  nsam("total",s) = 0 ;
 709  nsam(s,"total") = 0 ;
 710  nsam("total",s) = sum(ss,nsam(ss,s)) ;
 711  nsam(s,"total") = sum(ss,nsam(s,ss)) ;
 712  display nsam ;
 713   
 714  if(1,
 715   
 716  * ------------------------------------------------------------------------------
 717  *
 718  * Write out the SAM in CSV format
 719  *
 720  * ------------------------------------------------------------------------------
 721   
 722  put samfile ;
 723  samfile.pc   = 5 ;
 724  samfile.pw = 10000 ;
 725  samfile.nj =   1 ;
 726  samfile.nw =  15 ;
 727  samfile.nd =   9 ;
 728  samfile.nz =   0 ;
 729  samfile.nr =   0 ;
 730   
 731   
 732  *loop(s,loop(ss$(sam(s,ss) ne 0),
 733  *   put system.title,t.tl,s.tl,ss.tl,(sam(s,ss)/scale) / ;
 734  *)) ;
 735   
 736  put ' '; loop (s, put s.tl ) ; put / ;
 737  loop(s,
 738  put  s.tl, loop(ss, put nsAM(s,ss)) ; put / ;
 739   
 740   ) ;
 741   
 742  ) ;
 743   
 744  *## Correct for diagonal household to nonmarket consumption transfers
 745  *sam0(hs0,hr0) = 0 ;
 746   
 747  * Initialize Margins
 748  parameter marg00(i0) ;
 749  marg00(i0) = 0 ;
 750   
 751  parameter marg0(i) ;
 752   
 753  parameter marg(i) ;
 754  marg00(i0) = 4*marg00(i0)/(100 - marg00(i0)) ;
 755  marg0(i) = sum(i0$mapi(i0,i),marg00(i0)*sam0("Total",i0)/sum(j0,sam0("Total",j0))) ;
 756   
 757   
 758  *## Initialize border price trade valuations
 759   
 760  Parameter wtf_pe0(r0,k0) Base trade flows at pre FOB export price
 761  */
 762  */
 763  ;
 764  wtf_pe0(r0,k0)$(sum(rr0,sam0(k0,rr0)) ne 0) = sam0(k0,r0) ;
 765  *wtf_pe0(r0,k0)$(sum(rr0,sam0(k0,rr0)) ne 0) = sam0(k0,r0) - sam0("t06etax",k0)*sam0(k0,r0)/sum(rr0,sam0(k0,rr0)) ;
 766   
 767  Parameter wtf_wpe0(r0,k0) Base trade flows at FOB export price
 768  */
 769  */
 770  ;
 771   
 772  wtf_wpe0(r0,k0) = sam0(k0,r0) ;
 773   
 774  Parameter wtf_wpm0(r0,k0) Base trade flows at CIF import price
 775  */
 776  */
 777  ;
 778  wtf_wpm0(r0,k0) = sam0(r0,k0);
 779   
 780  Parameter wtf_pm0(r0,k0) Base trade flows at post CIF import price
 781  */
 782  */
 783  ;
 784  wtf_pm0(r0,k0)$(sum(rr0,sam0(rr0,k0)) ne 0) = sam0(r0,k0) + sam0("imptx",k0)*sam0(r0,k0)/sum(rr0,sam0(rr0,k0)) ;
 785   
 786   
 787  *## Initialize a variety of tax instruments
 788   
 789  Parameter patax0(k0,j0) Base taxes on intermediate consumption
 790  */
 791  */
 792  ;
 793  *patax0(k0,j0)$sam0(k0,j0) = sam0("govt",j0)*sam0(k0,j0)/sum(kk0,sam0(kk0,j0)) ;
 794  patax0(k0,j0) = 0 ;
 795   
 796  Parameter vatax0(v0,j0) Base taxes on factors of production
 797  */
 798  */
 799  ;
 800   
 801   
 802  vatax0(l0,j0) = sam0("gov",l0)*sam0(l0,j0)/sum(jj0,sam0(l0,jj0)) ;
 803   
 804  Parameter fdtax0(k0,fd0) Base taxes on final demand consumption
 805  */
 806  */
 807  ;
 808   
 809  *fdtax0(k0,fd0)$sum(ffd0,sam0(k0,ffd0)) = sam0("itax",k0)*sam0(k0,fd0)/sum(ffd0,sam0(k0,ffd0)) ;
 810  fdtax0(k0,fd0) =0 ;
 811   
 812  *## Initialized miscellaneous exogenous data
 813   
 814  Parameter tk0 Base capital stock /
 815          1.00E+3
 816  / ;
 817   
 818  tk0 = sum(i0,sum(k0,sam0(k0,i0))) ;
 819   
 820  Parameter tpop0 Base population in millions /
 821          7.7
 822  / ;
 823   
 824  Parameter popsh0(h0) Base population shares
 825  */
 826  */
 827  ;
 828          popsh0(h0) = 100 ;
 829   
 830   
 831  Parameter labvol0(i0,l0) Initial labor demand volumes
 832  *//
 833  ;
 834   
 835  labvol0(i0,l0) = sam0(l0,i0) ;
 836   
 837   
 838  Parameter ppp0 Base PPP exchange rate /
 839      1.00
 840  / ;
 841   
 842  Parameter eta0(k0,h0) Base income elasticities
 843  */
 844  */
 845  ;
 846   
 847          eta0(food0,h0) = .7 ;
 848          eta0(manufac0,h0) = 1.0 ;
 849          eta0(services0,h0) = 1.5 ;
 850   
 851  scalar scale Scaling factor for initial data   / 1 / ;
 852  scalar pscale Scaling factor for labor volumes / .001 / ;
 853   
 854  sam0(s0,ss0)    = scale*sam0(s0,ss0) ;
 855  patax0(k0,j0)   = scale*patax0(k0,j0) ;
 856  vatax0(v0,j0)   = scale*vatax0(v0,j0) ;
 857  fdtax0(k0,fd0)  = scale*fdtax0(k0,fd0) ;
 858  tk0             = scale*tk0 ;
 859  wtf_pe0(r0,k0)  = scale*wtf_pe0(r0,k0) ;
 860  wtf_wpe0(r0,k0) = scale*wtf_wpe0(r0,k0) ;
 861  wtf_wpm0(r0,k0) = scale*wtf_wpm0(r0,k0) ;
 862  wtf_pm0(r0,k0)  = scale*wtf_pm0(r0,k0) ;
 863  labvol0(i0,l0)  = pscale*labvol0(i0,l0) ;
 864   
 865  *## Structural parameters for the new aggregation
 866  set ipar / sigmap,    sigmav,   sigmakl,   sigmaks,    sigmau,    sigmas,    sigmak,    sigmat / ;
 867  set kpar / sigmac,    sigmam,    sigmaw,    sigmax,    sigmaz,      etae / ;
 868   
 869  parameter KeySect(i,ipar) Key sectoral parameters ;
 870  keysect(i,ipar) = .5 ;
 871  keysect(i,"sigmav") = .3 ;
 872  *keysect(i,ipar) = .8 ;
 873  keysect(i,"sigmap") = .0 ;
 874  *keysect(i,"sigmav") = .85 ;
 875  *keysect("ATAir",ipar) = .7 ;
 876  *keysect(i,"sigmap") = 0 ;
 877   
 878  parameter KeyComm(k,kpar) Key commodity parameters ;
 879  keycomm(k,kpar) = 4 ;
 880  *keycomm(k,"etae") = 5 ;
 881  *keycomm(k,"etae") = 1.1 ;
 882  keycomm(k,"etae") = 4 ;
 883  keycomm(k,"sigmam") = 2 ;
 884   
 885  parameter Frisch(h) ;
 886  Frisch(h) = -1 ;
 887   
 888  parameter sigmaf(f) Final demand expenditure elasticities /
 889          gov            0
 890          inv        0
 891     / ;
 892   
 893  scalar omegakt Capital mobility across types                 / 0.0 / ;
 894  omegakt = inf ;
 895   
 896  parameter omegak(kt) Capital mobility across sectors ;
 897  omegak(kt) = inf ;
 898   
 899  scalar omegatl Land mobility across type of land             / 0.0 / ;
 900  parameter omegat(lt) Land mobility across sectors ;
 901  omegat(lt) = 0 ;
 902   
 903  set gz Geographic zone / Rur, Urb, Tot / ;
 904  set gz2(gz) / Rur, Urb / ;
 905   
 906  set mapg(i,gz2) ;
 907   
 908  set
 909  ag(i) /
 910  Primary
 911  /
 912   
 913  manu(i) /
 914  Manufact
 915  /
 916   
 917  srv(i) /
 918  Tertiary
 919  /
 920  ;
 921   
 922  mapg(ag,"rur") = yes ;
 923   
 924  parameter migr0(l) Base year migration ;
 925   
 926  migr0(l) = 0 ;
 927  migr0(l) = pscale*migr0(l) ;
 928   
 929  parameter glab0(l,gz) Base year labor supply growth rates ;
 930  glab0(l,gz) = 1 ;
 931   
 932  parameter omegal(l,gz)  Labor supply elasticities ;
 933  omegal(l,gz) = 1 ;
 934   
 935  parameter omegar(i) Sector specific factor supply elasticity ;
 936  omegar(i) = inf ;
 937   
 938  parameter omegam(l) Migration elasticity ;
 939  omegam(l) = inf ;
 940  *omegam("unskl") = 1 ;
 941   
 942   
 944   
 945  * ----- Declare some additional subsets
 946   
 947  set ip(i) Sectors with endogenous labor productivity ;
 948  set np(i) Sectors with exogenous labor productivity ;
 949   
 950  set mg different types of margins / d, m, x / ;
 951   
 952  *np(i) = i(i) ;
 953  np(i) = yes$(ag(i)) ;
 954  ip(i) = not np(i) ;
 955  display ip, np ;
 956   
 957  * ----- Create set aliases
 958   
 959  alias(s,ss) ;
 960  alias(i0,j0) ;
 961  alias(h0,hh0) ;
 962  alias(i,j) ;
 963  alias(h,hh) ;
 964   
 965  alias(k0,kk0) ;
 966  alias(k,kk) ;
 967   
 968  alias (ag, iag) ;
 969   
 970  * ----- Calibrate, initialize and define the model
 971   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/decl.gms
 973  * --------------------------------------------------------------------------------------------------
 974  *
 975  *  Initialize output files
 976  *
 977  * --------------------------------------------------------------------------------------------------
 978   
 979  put reportfile ;
 980  if (Header eq 1, put 'Scenario,year,variable,sector,qualifier,type,value' / ; ) ;
 981   
 982  reportfile.pc   = 5 ;
 983  reportfile.pw = 255 ;
 984  reportfile.nj =   1 ;
 985  reportfile.nw =  15 ;
 986  reportfile.nd =   9 ;
 987  reportfile.nz =   0 ;
 988  reportfile.nr =   0 ;
 989   
 990  file screen / 'con' / ;
 991   
 992  * ------------------------------------------------------------------------------
 993  *
 994  * Declare initial variables
 995  *
 996  * ------------------------------------------------------------------------------
 997   
 998  parameters
 999   
1000  * ----- Production block
1001   
1002     nd0(i)         Initial demand for aggregate intermediates
1003     va0(i)         Initial demand for aggregate value added
1004     px0(i)         Initial unit cost
1005     pp0(i)         Initial producer price
1006   
1007     xap0(k,j)      Initial demand for intermediate goods
1008     pnd0(i)        Initial price of aggregate intermediate demand
1009     geg0(k,j)      Growth rate of electrity and gas use
1010   
1011     kl0(i)         Initial demand for aggregate capital labor bundle
1012     ttd0(i)        Initial demand for aggregate land
1013     rd0(i)         Initial demand for sector specific resource
1014     pva0(i)        Initial price of aggregate value added
1015   
1016     usk0(i)        Initial demand for aggregate unskilled labor bundle
1017     ksk0(i)        Initial demand for capital skilled bundle
1018     pkl0(i)        Initial price of capital labour bundle
1019   
1020     skl0(i)        Initial demand for skilled labor bundle
1021     ktd0(i)        Initial demand for aggregate capital
1022     pksk0(i)       Initial price of capital skilled labor bundle
1023   
1024     ld0(i,l)       Initial demand for labor by skill
1025     pusk0(i)       Initial price of aggregate unskilled labor bundle
1026     pskl0(i)       Initial price of skilled labor bundle
1027   
1028     kd0(i,kt)      Initial demand for capital
1029     pktd0(i)       Initial price of aggregate capital
1030   
1031     td0(i,lt)      Initial demand for land
1032     pttd0(i)       Aggregate land price
1033   
1034     xp0(i)         Initial production level
1035     p0(k)          Initial average commodity price
1036   
1037  * ----- Income distribution
1038   
1039     ly0(l)         Initial aggregate labor income
1040     ky0(kt)        Initial aggregate capital income
1041     ty0(lt)        Initial land income
1042     ry0            Initial income from sector specific resource
1043   
1044     ktre0(kt)      Initial aggregate corporate income
1045     ktrh0(kt)      Initial aggregate capital transfers to households
1046     ktrw0(kt)      Initial aggregate transfers to ROW
1047   
1048     cy0(e)         Initial corporate income
1049     savc0(e)       Initial corporate retained earnings
1050     ctrh0(e)       Initial aggregate corporate transfers to households
1051     ctrw0(e)       Initial corporate transfers to rest of world
1052   
1053  * ----- Income block
1054   
1055     yh0(h)         Initial total household income
1056     yd0(h)         Initial disposable income
1057     htr0(h)        Initial total household transfers
1058     htrh0(h,hh)    Initial intra household transfers
1059     htrw0(h)       Initial transfers to rest of world
1060   
1061  * ----- Demand block
1062   
1063     xac0(k,h)      Initial household demand for goods and services
1064     savh0(h)       Initial household saving
1065     cpi0(h)        Initial household price index
1066     gce0(k,h)      Growth rate of electricity and gas demand
1067   
1068     xaf0(k,f)      Initial sectoral expenditures for other final demand accounts
1069     pf0(f)         Initial expenditure deflator for other final demand accounts
1070     yf0(f)         Initial aggregate value of expenditures
1071   
1072  * ----- Trade block
1073   
1074     xa0(k)         Initial Armington demand
1075     xdd0(k)        Initial local demand for domestic production
1076     xmt0(k)        Initial aggregate level of imports
1077     pa0(k)         Initial Armington price inclusive of margins
1078   
1079     pm0(k,r)       Initial import price by region inclusive of tariffs
1080     xm0(k,r)       Initial volume of imports by region of origin
1081     pmt0(k)        Initial aggregate import price
1082   
1083     pe0(k,r)       Initial export price by region
1084     xds0(k)        Initial supply for domestic sales
1085     xet0(k)        Initial aggregate volume of exports
1086     x0(k)          Initial supply of commodities
1087   
1088     xe0(k,r)       Initial supply of exports by region of destination
1089     pet0(k)        Initial aggregate export price
1090   
1091     ed0(k,r)       Initial demand for exports by region of destination
1092   
1093  * ----- Domestic trade and transport margins
1094   
1095     ytmg0(k,mg)    Initial aggregate margin values
1096     xtmg0(k,mg)    Initial aggregate margin volumes
1097     xamg0(k,kk,mg) Initial margins
1098     ptmg0(k,mg)    Initial aggregate margin price index
1099   
1100  * ----- Goods market equilibrium
1101   
1102     pd0(k)         Initial price of domestic sales
1103     wpe0(k,r)      Initial world export price in international currency terms
1104   
1105  * ----- Government accounts
1106   
1107     tary0          Initial level of tariff revenue
1108     rtary0         Initial real level of tariff revenue
1109     gy0            Initial government income
1110     gexp0          Initial aggregate government expenditures
1111     savg0          Initial government savings
1112     taxadjh0       Initial household tax adjustment
1113     taxadjc0       Initial household tax adjustment
1114   
1115  * ----- Investment and macro closure
1116   
1117     xf0(f)         Initial aggregate volume of expenditures
1118     plev0          Initial price level
1119     walras0        Initial level of walras law
1120   
1121  * ----- Factor block
1122   
1123     ls0(l,gz)      Initial labor supply by skill
1124     ewage0(l,gz)   Initial equilibrium wage
1125     wage0(i,l)     Initial sectoral wage by skill level
1126   
1127     migr0(l)       Initial migration level
1128     awage0(l,gz)   Initial average wage
1129   
1130     tlabs0         Initial total labor supply
1131     twage0         Initial aggregate wage
1132   
1133     tks0(kt)       Initial aggregate capital supply normalized
1134     PK0            Initial price of capital
1135   
1136     ks0(i,kt)      Initial sectoral capital supply
1137     ptks0(kt)      Initial aggregate price of capital
1138     rent0(i,kt)    Initial rate of return for capital
1139   
1140     tts0(lt)       Initial total land supply
1141     PLand0         Initial aggregate price of land
1142   
1143     ts0(i,lt)      Initial sectoral land supply
1144     ptts0(lt)      Initial average price of land
1145     pt0(i,lt)      Initial sectoral price of land
1146   
1147     rs0(i)         Initial sectoral sector specific resource
1148     pr0(i)         Initial price of sector specific resource
1149   
1150  * ----- Macro identities
1151   
1152     gdpmp0         Initial GDP at market price
1153     rgdpmp0        Initial real GDP at market price
1154     pgdpmp0        Initial GDP deflator at market price
1155     gdpfc0         Initial GDP at factor cost
1156     rgdpfc0        Initial real GDP at factor
1157     pgdpfc0        Initial real GDP at factor cost deflator
1158   
1159  * ----- Growth variables
1160   
1161     ggdp0          Initial GDP growth rate
1162     lambdal0(i,l)  Initial labor productivity
1163   
1164  * ----- Growth factors
1165   
1166     gl0            Initial labor productivity growth rate
1167     lambdak0(i,kt) Initial capital productivity
1168     lambdat0(i,lt) Initial land productivity
1169     lambdar0(i)    Initial resource productivity
1170     KSup0          Initial aggregate capital supply normalized
1171     tk0            Initial non normalized aggregate capital stock
1172     Land0          Initial aggregate supply of land
1173   
1174  * ----- Trade prices
1175   
1176     wpm0(k,r)      Initial world import price in international currency terms
1177     wpendx0(k,r)   Initial world export price index
1178     er0            Initial exchange rate
1179   
1180  * ----- Policy variables
1181   
1182     rsg0           Initial real government savings
1183     tp0(j)         Initial production tax
1184     tcp0(k,j)      Initial sales tax in intermediate demand
1185     tcc0(k,h)      Initial sales tax in household demand
1186     tcf0(k,fd)     Initial sales tax in other final demand
1187     kappah0(h)     Initial income rate
1188     gtrh0(h)       Initial government transfers to households
1189     kappac0(e)     Initial corporate tax rate
1190     tmadj0         Initial tariff adjustment factor
1191     tm0(k,r)       Initial tariff rates
1192     te0(k,r)       Initial export tax and or subsidy
1193     tfl0(j,l)      Initial tax on labor
1194     tfk0(j,kt)     Initial tax on capital
1195     tft0(j,lt)     Initial tax on land
1196     tfr0(j)        Initial tax on sector specific resource
1197   
1198  * ----- Miscellaneous variables
1199   
1200     wtrh0(h)       Initial remittances from row
1201     wtrg0          Initial transfers to government from rest of the world
1202     gtrw0          Initial transfers to the rest of the world from the government
1203     savf0          Initial foreign investment inflows
1204     csavrate0(e)   Initial corporate saving rate
1205     tmg0(k,mg)     Initial domestic margins
1206   
1207  * ----- Dynamic variables
1208   
1209     pop0(h)        Initial population level
1210     glab0(l,gz)    Initial growth rate of labor
1211   
1212  * ----- Lagged variables
1213   
1214     rgdpmpLag       Lagged GDP
1215     lambdalLag(i,l) Lagged labor productivity factor
1216     lambdakLag(i,kt) Lagged capital productivity factor
1217     lambdatLag(i,lt) Lagged land productivity factor
1218     lslag(l,gz)     Lagged labor supply
1219     xaplag(k,j)     lagged intermediate use
1220     xaclag(k,h)      lagged consumption
1221  ;
1222   
1223  * ------------------------------------------------------------------------------
1224  *
1225  * Declare key model parameters
1226  *
1227  * ------------------------------------------------------------------------------
1228   
1229  parameters
1230   
1231  * ----- Production block
1232   
1233     sigmac(k)     CES substitution of produced goods into commodities
1234   
1235     sigmap(i)     CES elasticity between ND and VA bundles
1236     sigmav(i)     CES elasticity between KL and T bundles
1237     sigmakl(i)    CES elasticity between USK and KS
1238     sigmaks(i)    CES elasticity between K and SKL
1239     sigmau(i)     CES elasticity across unskilled labor
1240     sigmas(i)     CES elasticity across skilled labor
1241     sigmat(i)     CES elasticity across different types of land
1242     sigmak(i)     CES elasticity across different types of capital
1243   
1244  * ----- Demand block
1245   
1246     eta(k,h)      Household income elasticities
1247   
1248  * ----- Trade block
1249   
1250     sigmam(k)     First level Armington elasticity
1251     sigmaw(k)     Second level Armington elasticity
1252     sigmax(k)     First level CET elasticity
1253     sigmaz(k)     Second level CET elasticity
1254     etae(k,r)     Export demand elasticity
1255   
1256   
1257   
1258  ;
1259   
1260  * ------------------------------------------------------------------------------
1261  *
1262  * Declare calibrated model parameters
1263  *
1264  * ------------------------------------------------------------------------------
1265   
1266  parameters
1267   
1268  * ----- Production block
1269   
1270     ac(i,k)       CES share parameters for transforming produced goods into commodities
1271   
1272     ava(i)        VA share parameter
1273     and(i)        ND share parameter
1274   
1275     a(k,j)        Input output coefficients
1276   
1277     akl(i)        KL share parameter
1278     au(i)         USK share parameter
1279     aksk(i)       KSK share parameter
1280     as(i)         SKL share parameter
1281   
1282     akt(i)        Aggregate capital share parameter
1283     ak(i,kt)      Capital share parameter
1284     att(i)        Aggregate land share parameter
1285     ar(i)         Natural resource share parameter
1286     at(i,lt)      Land share parameter
1287     al(i,l)       Labor by skill share parameters
1288   
1289  * ----- Income distribution parameters
1290   
1291     xkht(kt)      Aggregate household share of capital earnings
1292     xket(kt)      Aggregate enterprise share of capital earnings
1293     xkwt(kt)      Aggregate ROW share of capital earnings
1294   
1295     xkh(kt,h)     Household shares of capital earnings
1296     xke(kt,e)     ROW shares of capital earnings
1297     xkw(kt)       ROW shares of capital earnings
1298   
1299     xcht(e)       Aggregate household share of corporate income
1300     xcwt(e)       Aggregate ROW share of corporate income
1301   
1302     xch(e,h)      Household shares of corporate earnings
1303     xcw(e)        ROW shares of corporate earnings
1304   
1305     xth(lt,h)     Household shares of land income
1306   
1307     xlh(h,l)      Household shares of labor earnings
1308   
1309     xrh(h)        Household share of sector specific factor earnings
1310   
1311  * ----- Demand block
1312   
1313     mu(k,h)       Marginal propensity to consume
1314     theta(k,h)    Subsistence minima
1315     asav(h)       Saving rate
1316     etas(h)       Income elasticity of saving
1317     mus(h)        Marginal propensity to save
1318   
1319     ahtr(h)       Share of household after tax income going to transfers
1320     ahtrh(h,hh)   Share of household transfers going to other households
1321     ahtrw(h)      Share of household transfers going to rest of the world
1322   
1323     af(k,f)       Final demand expenditure share parameters
1324   
1325  * ----- Trade block
1326   
1327     ad(k)          Domestic share parameter
1328     am(k)          Import share parameter
1329   
1330     aw(k,r)        Second level share parameters
1331   
1332     gd(k)          Domestic CET share parameter
1333     ge(k)          Export CET share parameter
1334   
1335     gx(k,r)        Second level CET share parameters
1336   
1337     ae(k,r)        Export demand elasticity shifter
1338     ae0(k,r)       Baseline Export demand elasticity shifter
1339   
1340     amg(k,kk,mg)   Domestic trade margin shares
1341   
1342  * ----- Factor block
1343   
1344     als(l,gz)      Labor supply share parameter by category
1345   
1346     atks(kt)       Capital supply share parameters by type
1347     aks(i,kt)      Capital supply share parameters
1348     akst(kt)       Top level capital supply share parameters
1349   
1350     atts(lt)       Aggregate land supply share parameters
1351     ats(i,lt)      Land supply share parameters
1352   
1353     ars(i)         Sector specific supply shift parameter
1354   
1355     chil(i,v)      Sector and skill specific shift parameters
1356     phil(i,l)      Inter sectoral wage differential parameter
1357     chim(l)        Shift parameter for migration function
1358  ;
1359   
1360  * ------------------------------------------------------------------------------
1361  *
1362  * Declare diagnostic variables for post-processing
1363  *
1364  * ------------------------------------------------------------------------------
1365   
1366  parameters
1367     sam(s,ss)     Post proc social accounting matrix
1368     vatax(v,j)    Value added tax matrix
1369     walras        Evaluation of walras law
1370     rscale        Scale variable for output
1371     work          A working scalar
1372     index         A temporary index
1373     delta         Discrepancy
1374   
1375     voc(k,j)     Vehicle operating cost incidence
1376     chk1
1377     chkk(k)
1378     chki(i)
1379     chkh(h)
1380     chkl(l)
1381   
1382     ntcip        Expenditure for the NTCIP infrastructure investments
1383   
1384  ;
1385   
1386  * ------------------------------------------------------------------------------
1387  *
1388  * Declare model variables
1389  *
1390  * ------------------------------------------------------------------------------
1391   
1392  variables
1393   
1394  * ----- Production block
1395   
1396     nd(i)        Demand for aggregate intermediates
1397     va(i)        Demand for aggregate value added
1398     px(i)        Unit cost
1399     pp(i)        Producer price
1400   
1401     xap(k,j)     Demand for intermediate goods
1402     pnd(i)       Price of aggregate intermediate demand
1403     geg(k,j)     Growth rate of electricity and gas use
1404   
1405     kl(i)        Demand for KL bundle
1406     ttd(i)       Aggregate sectoral demand for land
1407     rd(i)        Demand for the natural resource
1408     pva(i)       Price of aggregate value added
1409   
1410     usk(i)       Demand for aggregate unskilled labor
1411     ksk(i)       Demand for capital skilled labor bundle
1412     pkl(i)       Price of KL bundle
1413   
1414     skl(i)       Demand for aggregate skilled labor
1415     ktd(i)       Aggregate sectoral capital demand
1416     pksk(i)      Price of KS bundle
1417   
1418     ld(i,l)      Demand for labor by skill
1419     pusk(i)      Price of aggregate unskilled labor bundle
1420     pskl(i)      Price of skilled labor bundle
1421   
1422     kd(i,kt)     Demand for capital
1423     pktd(i)      Sectoral price of aggregate capital
1424     td(i,lt)     Demand for land
1425     pttd(i)      Sectoral price of aggregate land
1426   
1427     xp(i)        Production level
1428     p(k)         Aggregate commodity price
1429   
1430  * ----- Income block
1431   
1432     ly(l)        Aggregate labor income
1433     ky(kt)       Aggregate capital income
1434     ty(lt)       Land income
1435     ry           Aggregate income from sector specific factor
1436   
1437     ktre(kt)     Capital income transferred to enterprises
1438     ktrh(kt)     Capital income transferred to households
1439     ktrw(kt)     Capital income transferred to ROW
1440   
1441     cy(e)        Aggregate corporate income
1442     savc(e)      Corporate savings
1443     ctrh(e)      Corporate income transferred to households
1444     ctrw(e)      Corporate income transferred to ROW
1445   
1446     yh(h)        Total income
1447     yd(h)        Disposable income
1448     htr(h)       Total household transfers
1449     htrh(h,hh)   Intra household transfers
1450     htrw(h)      Household transfers to rest of world
1451   
1452  * ----- Demand block
1453   
1454     gce(k,h)     Growth rate of electricity and gas consumption
1455     xac(k,h)     Household demand for goods and services
1456     savh(h)      Household savings
1457     cpi(h)       Consumer price deflator
1458   
1459     xaf(k,f)     Other final demand accounts
1460     pf(f)        Final demand expenditure deflator
1461     yf(f)        Final demand aggregate value
1462   
1463  * ----- Trade block
1464   
1465     xa(k)        Aggregate Armington demand
1466     xdd(k)       Domestic demand for domestic output
1467     xmt(k)       Aggregate sectoral import demand
1468     pa(k)        Armington price inclusive of margins
1469   
1470     pm(k,r)      Import price by region inclusive of tariffs
1471     xm(k,r)      Import demand by region of origin
1472     pmt(k)       Aggregate import price
1473   
1474     pe(k,r)      Export producer price by region
1475     xds(k)       Export supply
1476     xet(k)       Aggregate CET volume
1477     x(k)         Aggregate commodity supply
1478   
1479     xe(k,r)      Export volumes by region of destination
1480     pet(k)       Aggregate export price
1481   
1482     ed(k,r)      Export demand
1483   
1484  * ----- Domestic trade and transport margins
1485   
1486     ytmg(kk,mg)        Aggregate value of trade and transport services
1487     xtmg(kk,mg)        Aggregate demand for trade and transport services
1488     xamg(k,kk,mg)      Demand for trade and transport services
1489     ptmg(kk,mg)        Aggregate price of trade and transport services
1490   
1491  * ----- Goods market equilibrium
1492   
1493     pd(k)        Domestic price of domestic output
1494     wpe(k,r)     World export price in international currency terms
1495   
1496  * ----- Government accounts
1497   
1498     tary               Tariff revenues
1499     rtary              Real tariff revenues
1500     gy                 Government revenues
1501     gexp               Government expenditures
1502     savg               Government savings
1503     taxadjh            Tax adjustment factor
1504     taxadjc            Tax adjustment factor
1505   
1506  * ----- Closure
1507   
1508     xf(f)        Final demand aggregate volume
1509     plev         Domestic price level
1510   
1511  * ----- Factor block
1512   
1513     ls(l,gz)           Aggregate labor supply by category
1514     ewage(l,gz)        Equilibrium wage rate
1515     wage(i,l)          Sectoral wage by skill level
1516   
1517  * ----- Migration variables
1518   
1519     migr(l)            Rural to urban migration
1520     awage(l,gz)        Average wage by zone
1521   
1522     tks(kt)            Aggregate capital stock
1523     pk                 Aggregate rate of return to capital
1524   
1525     ptks(kt)           Aggregate rate of return to capital
1526     ks(i,kt)           Sectoral capital supply
1527     rent(i,kt)         Rate of return for capital
1528   
1529     tts(lt)            Land supply by type
1530     pland              Aggregate price of land
1531   
1532     ts(i,lt)           Land supply by type and sector
1533     ptts(lt)           Price of land by type
1534     pt(i,lt)           Price of land
1535   
1536     rs(i)              Supply of sector specific resource
1537     pr(i)              Price of natural resource
1538   
1539  * ----- Macro variables
1540   
1541     gdpmp        GDP at market price
1542     rgdpmp       Real GDP at market price
1543     pgdpmp       GDP at market price deflator
1544   
1545     gdpfc        GDP at factor cost
1546     rgdpfc       Real GDP at factor cost
1547     pgdpfc       GDP at factor cost deflator
1548   
1549  * ----- Growth variables
1550   
1551     ggdp          GDP growth rate
1552     lambdal(i,l)  Labor productivity
1553   
1554  * ----- Growth factors
1555   
1556     gl            Labor productivity growth rate
1557     lambdak(i,kt) Capital productivity
1558     lambdat(i,lt) Land productivity
1559     lambdar(i)    Natural resource productivity
1560     ksup          Aggregate normalized capital supply
1561     tk            Aggregate non normalized capital supply
1562     land          Aggregate land supply
1563     pop(h)        Population
1564     glab(l,gz)    Labor force growth rate by zone
1565   
1566  * ----- Trade prices
1567   
1568     wpm(k,r)     World import price in international currency terms
1569     wpendx(k,r)  Export price index
1570     er           Exchange rate
1571   
1572  * ----- Policy variables
1573   
1574     rsg          Real government savings
1575     tp(i)        Production tax
1576     tcp(k,j)     Indirect taxes on intermediate consumption
1577     tcc(k,h)     Indirect taxes on household consumption
1578     tcf(k,f)     Indirect taxes on other final demand
1579     kappah(h)    Income tax rate
1580     gtrh(h)      Government transfers to households
1581     kappac       Corporate tax rate
1582   
1583     tmadj        Tariff uniform adjustment factor
1584     tm(k,r)      Tariff rates
1585     te(k,r)      Export tax rates
1586   
1587     tfl(j,l)     Labor tax
1588     tfk(j,kt)    Capital tax
1589     tft(j,lt)    Land tax
1590     tfr(j)       Tax on sector specific resource
1591   
1592  * ----- Miscellaneous variables
1593   
1594     wtrh(h)      Remittances to households from abroad
1595     wtrg         Transfers to government from rest of the world
1596     gtrw         Government transfers to rest of the world
1597     savf         Foreign investment inflows
1598     csavrate(e)  Corporate savings rate
1599     tmg(k,mg)    Domestic trading margins
1600   
1601  ;
1602   
1603  * -- Definitions for ELES Calibration
1604  parameters
1605     share0(k,h)    Initial budget shares
1606  ;
1607   
1608  variables
1609     thetav(k,h)    Calibrated theta parameters
1610  ;
1611   
1612  equations
1613     thetaeq(k,h)   Consumer demand calibration equation
1614  ;
1615   
1616  thetaeq(k,h)$(savh0(h) ne 0)..
1617     xac0(k,h)*(1+tcc0(k,h))*pa0(k) =e= (1+tcc0(k,h))*pa0(k)*thetav(k,h) + mu(k,h)*(yd0(h)
1618                                     -   sum(kk,(1+tcc0(k,h))*pa0(kk)*thetav(kk,h))) ;
1619   
1620  model eles / thetaeq / ;
1621   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/cal.gms
1623  * ------------------------------------------------------------------------------
1624  *
1625  * Initialize the variables
1626  *
1627  * ------------------------------------------------------------------------------
1628   
1629  * ----- Basic prices
1630   
1631  p0(k)       = 1 ;
1632  pa0(k)      = 1 ;
1633  pp0(i)      = 1 ;
1634  pd0(k)      = 1 ;
1635  pmt0(k)     = 1 ;
1636  wpm0(k,r)   = 1 ;
1637  pet0(k)     = 1 ;
1638  wpe0(k,r)   = 1 ;
1639   
1640  *wage0(i,l)  = 1 ;
1641  rent0(i,kt) = 1 ;
1642  pt0(i,lt)   = 1 ;
1643  pr0(i)      = 1 ;
1644   
1645  plev0       = 1 ;
1646  er0         = 1 ;
1647   
1648  * ------------------------------------------------------------------------------
1649  *
1650  * Initialize the trade block
1651  *
1652  * This must be the first step due to the possibility of the law of one price
1653  *
1654  * ------------------------------------------------------------------------------
1655  *
1656  * ----- Second level Armington
1657   
1658  tm0(k,r) = sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),wtf_pm0(r0,k0)-sam0(r0,k0))) ;
1659  xm0(k,r) = sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),sam0(r0,k0))/(wpm0(k,r)*er0)) ;
1660   
1661  tm0(k,r)$(xm0(k,r) ne 0) = tm0(k,r)/(er0*wpm0(k,r)*xm0(k,r)) ;
1662  pm0(k,r) = er0*wpm0(k,r)*(1+tm0(k,r)) ;
1663   
1664  * ----- Calculate pre-FOB price of exports
1665   
1666  xe0(k,r) = (sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),sam0(k0,r0))))/(er0*wpe0(k,r)) ;
1667  te0(k,r) = er0*wpe0(k,r)*xe0(k,r) - (sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),wtf_pe0(r0,k0)))) ;
1668  te0(k,r)$(xe0(k,r) ne 0) = te0(k,r)/(er0*wpe0(k,r)*xe0(k,r) - te0(k,r)) ;
1669  pe0(k,r) = (er0*wpe0(k,r))/(1+te0(k,r)) ;
1670   
1671  * ----- Calculate the Armington aggregate
1672   
1673  xap0(k,j) = (sum(k0$(mapk(k0,k)),sum(j0$(mapi(j0,j)),sam0(k0,j0))))/pa0(k) ;
1674  xac0(k,h) = sum(h0$maph(h0,h),sum(i$mapik(i,k),sum(i0$mapi(i0,i),sam0(i0,h0)))) ;
1675  *display xac0 ;
1676  xac0(k,h) = (xac0(k,h)+sum(h0$maph(h0,h),sum(k0$mapk(k0,k),sam0(k0,h0))))/pa0(k) ;
1677  *display xac0 ;
1678  *xac0(k,h) = (sum(h0$(maph(h0,h)),sum(k0$(mapk(k0,k)),sam0(k0,h0))))/pa0(k) ;
1679  xaf0(k,f) = sum(k0$mapk(k0,k),sum(f0$mapf(f0,f),sam0(k0,f0)))/pa0(k) ;
1680  **xaf0("CEnergy","gov") = xaf0("CEnergy","gov") + .001 ;
1681  * ----- Calculate the indirect taxes on production and final demand
1682   
1683  tcp0(k,j) = sum(k0$(mapk(k0,k)),sum(j0$(mapi(j0,j)),patax0(k0,j0))) ;
1684  tcp0(k,j)$(xap0(k,j) ne 0) = tcp0(k,j)/(pa0(k)*xap0(k,j)) ;
1685   
1686  tcc0(k,h) = sum(h0$(maph(h0,h)),sum(k0$(mapk(k0,k)),fdtax0(k0,h0))) ;
1687  tcc0(k,h)$(xac0(k,h) ne 0) = tcc0(k,h)/(pa0(k)*xac0(k,h)) ;
1688   
1689  tcf0(k,f) = sum(f0$(mapf(f0,f)),sum(k0$(mapk(k0,k)),fdtax0(k0,f0))) ;
1690  tcf0(k,f)$(xaf0(k,f) ne 0) = tcf0(k,f)/(pa0(k)*xaf0(k,f)) ;
1691   
1692   
1693  * ----- Initialize the demand for domestic trade and transport services
1694  * !!!!! Assume it is only for one sector for the moment
1695   
1696  xamg0(k,kk,"d") = (sum(k0$mapk(k0,k),sum(kk0$mapk(kk0,kk),sam0(k0,kk0))))/pa0(k) ;
1697  ptmg0(kk,"d")   = 1 ;
1698  ytmg0(kk,"d")   = sum(k,pa0(k)*xamg0(k,kk,"d")) ;
1699  xtmg0(kk,"d")   = ytmg0(kk,"d")/ptmg0(kk,"d") ;
1700   
1701  xa0(k)  = sum(j,xap0(k,j)) + sum(h,xac0(k,h)) + sum(f,xaf0(k,f)) + sum(kk, xamg0(k,kk,"d")) ;
1702   
1703  * ----- Initialize production
1704   
1705  * ----- First, aggregate value added
1706   
1707  sam(s,ss)  = 0 ;
1708  sam(v,j)   = sum(v0$(mapv(v0,v)),sum(j0$(mapi(j0,j)),sam0(v0,j0))) ;
1709  vatax(v,j) = sum(v0$(mapv(v0,v)),sum(j0$(mapi(j0,j)),vatax0(v0,j0))) ;
1710   
1711  * ----- Production will be divided by the relevant price below,
1712  *       after figuring whether the law of one price holds
1713   
1714  ld0(j,l)  = sum(l0$(mapv(l0,l)),sum(j0$(mapi(j0,j)),labvol0(j0,l0))) ;
1715  wage0(j,l) = 1 ;
1716  wage0(j,l)$(ld0(j,l) ne 0) = sam(l,j)/ld0(j,l) ;
1717  *display wage0 ;
1718  *ld0(j,l)  = sam(l,j)/wage0(j,l) ;
1719  tfl0(j,l)$(ld0(j,l) gt 0) = vatax(l,j)/(wage0(j,l)*ld0(j,l) - vatax(l,j)) ;
1720   
1721  kd0(j,kt) = sam(kt,j)/rent0(j,kt) ;
1722  tfk0(j,kt)$(kd0(j,kt) gt 0) = vatax(kt,j)/(rent0(j,kt)*kd0(j,kt) - vatax(kt,j)) ;
1723   
1724  td0(j,lt) = sam(lt,j)/pt0(j,lt) ;
1725  tft0(j,lt)$(td0(j,lt) gt 0) = vatax(lt,j)/(pt0(j,lt)*td0(j,lt) - vatax(lt,j)) ;
1726   
1727  rd0(j) = sum(nr,sam(nr,j))/pr0(j) ;
1728  tfr0(j)$(rd0(j) gt 0) = sum(nr,vatax(nr,j)/(pr0(j)*rd0(j) - vatax(nr,j))) ;
1729   
1730  *display tfk0, tft0, tfr0 ;
1731   
1732  *tp0(j)    = sum(j0$(mapi(j0,j)),sam0("prdtx",j0)) ;
1733  tp0(j) = 0 ;
1734   
1735  xp0(j)    = sum(k,(1+tcp0(k,j))*pa0(k)*xap0(k,j)) + sum(l,wage0(j,l)*ld0(j,l))
1736            + sum(kt,rent0(j,kt)*kd0(j,kt)) + sum(lt,pt0(j,lt)*td0(j,lt)) + pr0(j)*rd0(j) + tp0(j) ;
1737   
1738  tp0(j)    = tp0(j)/(xp0(j) - tp0(j)) ;
1739   
1740  * ----- Initialize aggregate commodity supply and calibrate
1741   
1742  x0(k)     = sum(i$mapik(i,k),xp0(i)) ;
1743   
1744  *display xp0, x0 ;
1745   
1746  * ----- Calculate the commodity-specific trade margin
1747   
1748  tmg0(kk,"d") = ytmg0(kk,"d")/(x0(kk) + sum(r,pm0(kk,r)*xm0(kk,r))) ;
1749  tmg0(kk,mg)  = tmg0(kk,"d") ;
1750   
1751  * ----- Calculate aggregate imports
1752   
1753  xmt0(k) = sum(r,pm0(k,r)*(1+tmg0(k,"m"))*xm0(k,r))/pmt0(k) ;
1754   
1755  * ----- The export price should now reflect the producer price, i.e. net of the margin
1756   
1757  pe0(k,r) = pe0(k,r)/(1+tmg0(k,"x")) ;
1758   
1759  sigmax(k) = KeyComm(k,"sigmax") ;
1760  sigmaz(k) = KeyComm(k,"sigmaz") ;
1761  sigmac(k) = KeyComm(k,"sigmac") ;
1762  sigmac(k)$(sigmac(k) eq 1) = 1.01 ;
1763   
1764  * !!!! Re-base pet0 if the law of one price holds
1765  * !!!! This would pose a problem if there are multiple trading partners with destination
1766  *      specific export tariffs. In such a case, it would be better to use a finite
1767  *      transformation elasticity, even if high.
1768   
1769  loop(k$(sigmaz(k) eq inf), loop(r$(ord(r) eq 1), pet0(k) = pe0(k,r) ; ) ; ) ;
1770   
1771  * Re-base pd0 if the law of one-price-holds
1772   
1773  pd0(k)$(sigmax(k) eq inf) = pet0(k) ;
1774  p0(k)$(sigmax(k) eq inf)  = pet0(k) ;
1775  loop(k$(sigmac(k) eq inf),
1776     loop(i$mapik(i,k),
1777        pp0(i) = p0(k) ;
1778     ) ;
1779  ) ;
1780   
1781  * Re-base output
1782   
1783  xp0(i) = xp0(i)/pp0(i) ;
1784  x0(k)  = x0(k)/p0(k) ;
1785   
1786  * ------------------------------------------------------------------------------
1787  *
1788  * Initialize and calibrate the production block
1789  *
1790  * ------------------------------------------------------------------------------
1791   
1792  * ----- Initialize prices and productivity parameters
1793   
1794  lambdal0(i,l)  = 1 ;
1795  lambdak0(i,kt) = 1 ;
1796  lambdat0(i,lt) = 1 ;
1797  lambdar0(i)    = 1 ;
1798   
1799  ac(i,k)   = 0 ;
1800   
1801  loop(k,
1802     if (sigmac(k) ne inf,
1803        loop(i$mapik(i,k),
1804           ac(i,k) = (xp0(i)/x0(k))*(pp0(i)/p0(k))**sigmac(k) ;
1805        ) ;
1806     ) ;
1807  ) ;
1808   
1809  * ----- Calibrate the unskilled labor bundle
1810   
1811  pusk0(j)  = 1 ;
1812  usk0(j)   = sum(ul,wage0(j,ul)*ld0(j,ul))/pusk0(j) ;
1813  sigmau(j) = KeySect(j,"sigmau") ;
1814  sigmau(j)$(sigmau(j) eq 1) = 1.01 ;
1815  al(j,ul)$(ld0(j,ul) ne 0) = (ld0(j,ul)/usk0(j))*((wage0(j,ul)/pusk0(j))**sigmau(j))*(lambdal0(j,ul)**(1-sigmau(j))) ;
1816   
1817  * ----- Calibrate the skilled labor bundle
1818   
1819  pskl0(j)  = 1 ;
1820  skl0(j)   = sum(sl,wage0(j,sl)*ld0(j,sl))/pskl0(j) ;
1821  sigmas(j) = KeySect(j,"sigmas") ;
1822  sigmas(j)$(sigmas(j) eq 1) = 1.01 ;
1823  al(j,sl)$(ld0(j,sl) ne 0) = (ld0(j,sl)/skl0(j))*((wage0(j,sl)/pskl0(j))**sigmas(j))*(lambdal0(j,sl)**(1-sigmas(j))) ;
1824   
1825  * ----- Calibrate the aggregate capital bundle
1826   
1827  pktd0(j) = 1 ;
1828  ktd0(j)  = sum(kt, rent0(j,kt)*kd0(j,kt))/pktd0(j) ;
1829  sigmak(j) = KeySect(j,"sigmak") ;
1830  sigmak(j)$(sigmak(j) eq 1) = 1.01 ;
1831  ak(j,kt)$(kd0(j,kt) ne 0) = (kd0(j,kt)/ktd0(j))*((rent0(j,kt)/pktd0(j))**sigmak(j))*(lambdak0(j,kt)**(1-sigmak(j))) ;
1832   
1833  * ----- Calibrate the aggregate land bundle
1834   
1835  pttd0(j) = 1 ;
1836  ttd0(j)  = sum(lt, pt0(j,lt)*td0(j,lt))/pttd0(j) ;
1837  sigmat(j) = KeySect(j,"sigmat") ;
1838  sigmat(j)$(sigmat(j) eq 1) = 1.01 ;
1839  at(j,lt)$(td0(j,lt) ne 0) = (td0(j,lt)/ttd0(j))*((pt0(j,lt)/pttd0(j))**sigmat(j))*(lambdat0(j,lt)**(1-sigmat(j))) ;
1840   
1841  * ----- Calibrate the KSK bundle
1842   
1843  pksk0(j)  = 1 ;
1844  ksk0(j)   = (pktd0(j)*ktd0(j) + pskl0(j)*skl0(j))/pksk0(j) ;
1845  sigmaks(j) = KeySect(j,"sigmaks") ;
1846  sigmaks(j)$(sigmaks(j) eq 1) = 1.01 ;
1847  as(j)$(skl0(j) ne 0)  = (skl0(j)/ksk0(j))*((pskl0(j)/pksk0(j))**sigmaks(j)) ;
1848  akt(j)$(ktd0(j) ne 0) = (ktd0(j)/ksk0(j))*((pktd0(j)/pksk0(j))**sigmaks(j)) ;
1849   
1850  * ----- Calibrate the KL bundle
1851   
1852  pkl0(j)  = 1 ;
1853  kl0(j)   = (pusk0(j)*usk0(j) + pksk0(j)*ksk0(j))/pkl0(j) ;
1854  sigmakl(j) = KeySect(j,"sigmakl") ;
1855  sigmakl(j)$(sigmakl(j) eq 1) = 1.01 ;
1856  au(j)$(usk0(j) ne 0)  = (usk0(j)/kl0(j))*((pusk0(j)/pkl0(j))**sigmakl(j)) ;
1857  aksk(j)$(kl0(j) ne 0) = (ksk0(j)/kl0(j))*((pksk0(j)/pkl0(j))**sigmakl(j)) ;
1858   
1859  * ----- Calibrate the value added bundle
1860   
1861  pva0(j)   = 1 ;
1862  va0(j)    = (pkl0(j)*kl0(j) + pr0(j)*rd0(j) + pttd0(j)*ttd0(j))/pva0(j) ;
1863  sigmav(j) = KeySect(j,"sigmav") ;
1864  sigmav(j)$(sigmav(j) eq 1) = 1.01 ;
1865  akl(j)$(kl0(j) ne 0)  = (kl0(j)/va0(j))*((pkl0(j)/pva0(j))**sigmav(j)) ;
1866  att(j)$(ttd0(j) ne 0) = (ttd0(j)/va0(j))*((pttd0(j)/pva0(j))**sigmav(j)) ;
1867  ar(j)$(rd0(j) ne 0)  = (rd0(j)/va0(j))*((pr0(j)/pva0(j))**sigmav(j)) ;
1868   
1869  * ----- Calibrate the top level bundle
1870   
1871  px0(j)    = pp0(j)/(1+tp0(j)) ;
1872  pnd0(j)   = 1 ;
1873  nd0(j)    = (sum(k,(1+tcp0(k,j))*pa0(k)*xap0(k,j)))/pnd0(j) ;
1874  sigmap(j) = KeySect(j,"sigmap") ;
1875  sigmap(j)$(sigmap(j) eq 1) = 1.01 ;
1876  ava(j)    = (va0(j)/xp0(j))*((pva0(j)/px0(j))**sigmap(j)) ;
1877  and(j)    = (nd0(j)/xp0(j))*((pnd0(j)/px0(j))**sigmap(j)) ;
1878   
1879  * ----- Calibrate the IO coefficients
1880   
1881  a(k,j)$(nd0(j) ne 0) = xap0(k,j)/nd0(j) ;
1882   
1883  * ------------------------------------------------------------------------------
1884  *
1885  * Initialize and calibrate the demand block
1886  *
1887  * ------------------------------------------------------------------------------
1888   
1889  * ---- Initialize household variables
1890   
1891  htrh0(h,hh) = sum(h0$(maph(h0,h)),sum(hh0$(maph(hh0,hh)),sam0(h0,hh0))) ;
1892  kappah0(h)  = sum(h0$(maph(h0,h)),sam0("dirtx",h0)) ;
1893  taxadjh0    = 1 ;
1894  htrw0(h)    = sum(h0$(maph(h0,h)),sam0("row",h0)) ;
1895  savh0(h)    = sum(h0$(maph(h0,h)),sam0("inv",h0)) ;
1896  *savh0(h)    = sum(h0$(maph(h0,h)),sam0("inv",h0) + sam0("depry",h0)) ;
1897   
1898  htr0(h)     = sum(hh,htrh0(hh,h)) + htrw0(h) ;
1899   
1900  yh0(h)      = sum(k,(1+tcc0(k,h))*pa0(k)*xac0(k,h)) + htr0(h) + kappah0(h) + savh0(h) ;
1901  yd0(h)      = sum(k,(1+tcc0(k,h))*pa0(k)*xac0(k,h)) + savh0(h) ;
1902   
1903  kappah0(h) = kappah0(h)/yh0(h) ;
1904  asav(h)    = savh0(h)/yd0(h) ;
1905   
1906  *display yh0, kappah0, yd0 ;
1907   
1908  ahtr(h) = htr0(h)/((1-kappah0(h))*yh0(h)) ;
1909  ahtrh(h,hh)$(htr0(hh) ne 0) = htrh0(h,hh)/htr0(hh) ;
1910  ahtrw(h)$(htr0(h) ne 0)     = htrw0(h)/htr0(h) ;
1911   
1912  * ----- Calculate the maximum share in domestic transfers to guarantee
1913  *       that the shares add up to 1
1914   
1915  loop(h,
1916     delta = sum(hh, ahtrh(hh,h)) + ahtrw(h) ;
1917   
1918     work = -inf ;
1919     if (sum(hh,ahtrh(hh,h)) ne 0,
1920        loop(hh,
1921           if (ahtrh(hh,h) gt work,
1922              work = ahtrh(hh,h) ;
1923              index = ord(hh) ;
1924           ) ;
1925        ) ;
1926     ) ;
1927     loop(hh$(ord(hh) eq index), ahtrh(hh,h) = ahtrh(hh,h) + (1-delta) ; ) ;
1928  ) ;
1929   
1930  * ----- Calibrate the ELES system
1931   
1932  eta(k,h)$xac0(k,h) = sum(h0$maph(h0,h),sum(k0$mapk(k0,k),eta0(k0,h0)*(xac0(k,h)*(1+tcc0(k,h))*pa0(k))))/
1933             sum(h0$maph(h0,h),sum(k0$mapk(k0,k),(xac0(k,h)*(1+tcc0(k,h))*pa0(k))));
1934   
1935  *display eta ;
1936  if(0,
1937   
1938  *  Use the standard ELES calibration
1939   
1940     thetav.l(k,h) = 0.1*xac0(k,h) ;
1941     share0(k,h)   = (1+tcc0(k,h))*pa0(k)*xac0(k,h)/yd0(h) ;
1942     mu(k,h)       = eta(k,h)*share0(k,h) ;
1943     mus(h)  = 1 - sum(k,mu(k,h)) ;
1944     etas(h)$(savh0(h) ne 0) = mus(h)/(savh0(h)/yd0(h)) ;
1945  *   display mus, etas ;
1946   
1947     solve eles using mcp ;
1948   
1949     theta(k,h) = thetav.l(k,h) ;
1950   
1951  else
1952   
1953  *  Use the Frisch parameter technique
1954   
1955  *  Adjust the eta parameters so that the normalization conditions holds
1956   
1957     eta(k,h)$(xac0(k,h) eq 0) = 0 ;
1958   
1959     share0(k,h)   = (1+tcc0(k,h))*pa0(k)*xac0(k,h)/(yd0(h)-savh0(h)) ;
1960   
1961  *   display eta ;
1962   
1963     eta(k,h) = eta(k,h) + share0(k,h)*(1-sum(kk,share0(kk,h)*eta(kk,h)))/sum(kk,share0(kk,h)*share0(kk,h)) ;
1964   
1965  *   display eta ;
1966   
1967  *  Calibrate mu and theta
1968   
1969     mu(k,h)    = eta(k,h)*share0(k,h) ;
1970     theta(k,h) = xac0(k,h)*(1+eta(k,h)/frisch(h)) ;
1971   
1972     loop(h, work = 1000000*(sum(k,eta(k,h)*share0(k,h))) ;
1973  *  display work
1974  ) ;
1975   
1976  *   display theta ;
1977  ) ;
1978   
1979  cpi0(h)      = 1 ;
1980   
1981  * ----- Final demand expenditures
1982   
1983  pf0(f) = 1 ;
1984  xf0(f) = (sum(k,(1+tcf0(k,f))*pa0(k)*xaf0(k,f)))/pf0(f) ;
1985  yf0(f) = pf0(f)*xf0(f) ;
1986   
1987  sigmaf(f)$(sigmaf(f) eq 1) = 1.01 ;
1988  af(k,f)$(xf0(f) ne 0) = (xaf0(k,f)/xf0(f))*((1+tcf0(k,f))*pa0(k)/pf0(f))**sigmaf(f) ;
1989   
1990   
1991  * ----- Domestic demand for domestic production
1992   
1993  xdd0(k) = (pa0(k)*xa0(k) - pmt0(k)*xmt0(k))/((1+tmg0(k,"d"))*pd0(k)) ;
1994   
1995  * ----- Calibrate the second level Armington function
1996   
1997  sigmaw(k) = KeyComm(k,"sigmaw") ;
1998  sigmaw(k)$(sigmaw(k) eq 1) = 1.01 ;
1999   
2000  aw(k,r)$(xmt0(k) ne 0) = (xm0(k,r)/xmt0(k))*(pm0(k,r)*(1+tmg0(k,"m"))/pmt0(k))**sigmaw(k) ;
2001   
2002  * ----- Calibrate the first level Armington demand function
2003   
2004  sigmam(k) = KeyComm(k,"sigmam") ;
2005  sigmam(k)$(sigmam(k) eq 1) = 1.01 ;
2006   
2007  ad(k) = (xdd0(k)/xa0(k))*(pd0(k)*(1+tmg0(k,"d"))/pa0(k))**sigmam(k) ;
2008  am(k) = (xmt0(k)/xa0(k))*(pmt0(k)/pa0(k))**sigmam(k) ;
2009  *display am ;
2010   
2011  * ----- Calibrate the export system
2012   
2013  xds0(k)  = xdd0(k) ;
2014   
2015  xet0(k) = sum(r,pe0(k,r)*xe0(k,r))/pet0(k) ;
2016   
2017  * ----- Top level CET
2018   
2019  loop(k$(x0(k) ne 0),
2020     if (sigmax(k) ne inf,
2021        gd(k) = (xds0(k)/x0(k))*(p0(k)/pd0(k))**sigmax(k) ;
2022        ge(k) = (xet0(k)/x0(k))*(p0(k)/pet0(k))**sigmax(k) ;
2023     ) ;
2024  ) ;
2025   
2026  * ----- Second level CET
2027   
2028  loop(k$(xet0(k) ne 0),
2029     if (sigmaz(k) ne inf,
2030        gx(k,r) = (xe0(k,r)/xet0(k))*(pet0(k)/pe0(k,r))**sigmaz(k) ;
2031     ) ;
2032  ) ;
2033   
2034  * ----- Export demand
2035   
2036  ed0(k,r) = xe0(k,r) ;
2037  wpendx0(k,r) = wpe0(k,r) ;
2038  * !!!!! Data entry should be split by region of destination
2039  etae(k,r) = KeyComm(k,"etae") ;
2040  ae(k,r)$(etae(k,r) ne inf) = ed0(k,r)*(wpe0(k,r)/wpendx0(k,r))**etae(k,r) ;
2041  ae0(k,r) = ae(k,r) ;
2042   
2043  * ----- Finish updating margin variables
2044   
2045  *display xamg0 ;
2046   
2047  amg(k,kk,mg)$(xamg0(k,kk,"d") ne 0) = xamg0(k,kk,"d")/xtmg0(kk,"d") ;
2048   
2049  ptmg0(k,mg)  = 1 ;
2050  ytmg0(k,"d") = pd0(k)*tmg0(k,"d")*xdd0(k) ;
2051  ytmg0(k,"m") = sum(r,pm0(k,r)*tmg0(k,"m")*xm0(k,r)) ;
2052  ytmg0(k,"x") = sum(r,pe0(k,r)*tmg0(k,"x")*xe0(k,r)) ;
2053  xtmg0(k,mg)  = ytmg0(k,mg)/ptmg0(k,mg) ;
2054  xamg0(k,kk,mg) = amg(k,kk,mg)*xtmg0(kk,mg) ;
2055   
2056  *display xamg0 ;
2057   
2058  * ------------------------------------------------------------------------------
2059  *
2060  * Initialize and calibrate income distribution
2061  *
2062  * ------------------------------------------------------------------------------
2063   
2064  * ----- Capital income
2065   
2066  sam(e,v)      = sum(e0$(mape(e0,e)),sum(v0$(mapv(v0,v)),sam0(e0,v0))) ;
2067  sam(h,v)      = sum(h0$(maph(h0,h)),sum(v0$(mapv(v0,v)),sam0(h0,v0))) ;
2068  sam("row",v)  = sum(v0$(mapv(v0,v)),sam0("row",v0)) ;
2069   
2070  ky0(kt)   = sum(i,rent0(i,kt)*kd0(i,kt)/(1+tfk0(i,kt))) ;
2071   
2072  ktre0(kt) = sum(e,sam(e,kt)) ;
2073  ktrh0(kt) = sum(h,sam(h,kt)) ;
2074  ktrw0(kt) = sam("row",kt) ;
2075   
2076  chk1 = sum(kt, ktre0(kt)+ktrh0(kt)+ktrw0(kt)) ;
2077  *display chk1, ky0 ;
2078   
      sam(e,kt) = sam(e,kt)*ky0(kt)/chk1 ;
      sam(h,kt) = sam(h,kt)*ky0(kt)/chk1 ;
      sam("row",kt) = sam("row",kt)*ky0(kt)/chk1 ;
      ktre0(kt) = sum(e,sam(e,kt)) ;
      ktrh0(kt) = sum(h,sam(h,kt)) ;
      ktrw0(kt) = sam("row",kt) ;
2087   
2088  * ----- Calibrate the aggregate shares
2089   
2090  xkht(kt)  = ktrh0(kt)/ky0(kt) ;
2091  xket(kt)  = ktre0(kt)/ky0(kt) ;
2092  xkwt(kt)  = 1 - xkht(kt) - xket(kt) ;
2093   
2094  * ----- Calibrate the sub-aggregate shares
2095   
2096  xkh(kt,h)$(ktrh0(kt) ne 0) = sam(h,kt)/ktrh0(kt) ;
2097  xke(kt,e)$(ktre0(kt) ne 0) = sam(e,kt)/ktre0(kt) ;
2098  xkw(kt)$(ktrw0(kt) ne 0)   = sam("row",kt)/ktrw0(kt) ;
2099   
2100  chk1 = sum(kt,sum(h, xkh(kt,h))) ;
2101  *display chk1 ;
2102  chk1 = sum(kt,sum(e, xke(kt,e))) ;
2103  *display chk1 ;
2104  chk1 = sum(kt,xkw(kt)) ;
2105  *display chk1 ;
2106   
2107  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
2108   
2109  loop(kt,
2110     if (ktrh0(kt) ne 0,
2111        delta = sum(h, xkh(kt,h)) ;
2112   
2113        if (sum(h, xkh(kt,h)) ne 0,
2114           work = -inf ;
2115           loop(h,
2116              if (xkh(kt,h) gt work,
2117                 work = xkh(kt,h) ;
2118                 index = ord(h) ;
2119              ) ;
2120           ) ;
2121           loop(h$(ord(h) eq index), xkh(kt,h) = xkh(kt,h) + (1-delta) ; ) ;
2122        ) ;
2123     ) ;
2124   
2125     if (ktre0(kt) ne 0,
2126        delta = sum(e, xke(kt,e)) ;
2127   
2128        work = -inf ;
2129        loop(e,
2130           if (xke(kt,e) gt work,
2131              work = xke(kt,e) ;
2132              index = ord(e) ;
2133           ) ;
2134        ) ;
2135        loop(e$(ord(e) eq index), xke(kt,e) = xke(kt,e) + (1-delta) ; ) ;
2136     ) ;
2137   
2138  ) ;
2139   
2140  * ----- Land income
2141   
2142  ty0(lt)   = sum(i,pt0(i,lt)*td0(i,lt)/(1+tft0(i,lt))) ;
2143   
2144  * ----- Calibrate the sub-aggregate shares
2145   
2146  xth(lt,h)$(ty0(lt) ne 0) = sam(h,lt)/ty0(lt) ;
2147   
2148  chk1 = sum(lt,sum(h,xth(lt,h))) ;
2149   
2150  *display chk1 ;
2151   
2152  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
2153   
2154  loop(lt,
2155     if (ty0(lt) ne 0,
2156        delta = sum(h, xth(lt,h)) ;
2157   
2158        work = -inf ;
2159        loop(h,
2160           if (xth(lt,h) gt work,
2161              work = xth(lt,h) ;
2162              index = ord(h) ;
2163           ) ;
2164        ) ;
2165        loop(h$(ord(h) eq index), xth(lt,h) = xth(lt,h) + (1-delta) ; ) ;
2166     ) ;
2167  ) ;
2168   
2169  chk1 = sum(lt,sum(h,xth(lt,h))) ;
2170   
2171  *display chk1 ;
2172   
2173  * ----- Labor income
2174   
2175  ly0(l)   = sum(i,wage0(i,l)*ld0(i,l)/(1+tfl0(i,l))) ;
2176   
2177  xlh(h,l) = sam(h,l)/ly0(l) ;
2178   
2179  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
2180   
2181  loop(l,
2182     delta = sum(h, xlh(h,l)) ;
2183   
2184     work = -inf ;
2185     loop(h,
2186        if (xlh(h,l) gt work,
2187           work = xlh(h,l) ;
2188           index = ord(h) ;
2189        ) ;
2190     ) ;
2191     loop(h$(ord(h) eq index), xlh(h,l) = xlh(h,l) + (1-delta) ; ) ;
2192   
2193     delta = sum(h, xlh(h,l)) ;
2194  ) ;
2195   
2196  * ----- Income from sector specific resource
2197   
2198  ry0      = sum(i,pr0(i)*rd0(i)/(1+tfr0(i))) ;
2199   
2200  xrh(h)$(ry0 ne 0) = sam(h,"natrs")/ry0 ;
2201   
2202  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
2203   
2204  if(ry0 ne 0,
2205     delta = sum(h, xrh(h)) ;
2206   
2207     work = -inf ;
2208     loop(h,
2209        if (xrh(h) gt work,
2210           work = xrh(h) ;
2211           index = ord(h) ;
2212        ) ;
2213     ) ;
2214     loop(h$(ord(h) eq index), xrh(h) = xrh(h) + (1-delta) ; ) ;
2215   
2216  ) ;
2217   
2218  * ----- Corporate income
2219   
2220  cy0(e)     = sum(kt,xke(kt,e)*ktre0(kt)) ;
2221  taxadjc0  = 1 ;
2222  kappac0(e)$(cy0(e) ne 0) = sum(e0$mape(e0,e),sam0("dirtx",e0)-sam0(e0,"gov"))/cy0(e) ;
2223   
2224  savc0(e)                   = sum(e0$mape(e0,e),sam0("inv",e0)) ;
2225  csavrate0(e)$(cy0(e) ne 0) = savc0(e)/((1-kappac0(e))*cy0(e)) ;
2226   
2227  ctrh0(e) = sum(h0,sum(e0$mape(e0,e),sam0(h0,e0))) ;
2228  ctrw0(e) = sum(r0,sum(e0$mape(e0,e),sam0(r0,e0)-sam0(e0,r0))) ;
2229   
2230  xcht(e)$(cy0(e) ne 0) = ctrh0(e)/((1-kappac0(e))*cy0(e)) ;
2231  xcwt(e)$(cy0(e) ne 0) = 1 - csavrate0(e) - xcht(e) ;
2232   
2233  xch(e,h)$(ctrh0(e) ne 0) = sum(h0$maph(h0,h),sum(e0$mape(e0,e),sam0(h0,e0)))/ctrh0(e) ;
2234  xcw(e)$(ctrw0(e) ne 0) = sum(e0$mape(e0,e),sam0("row",e0)-sam0(e0,"row"))/ctrw0(e) ;
2235   
2236  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
2237   
2238  loop(e,
2239   
2240     delta = sum(h, xch(e,h)) ;
2241     work = -inf ;
2242     loop(h,
2243        if (xch(e,h) gt work,
2244           work = xch(e,h) ;
2245           index = ord(h) ;
2246        ) ;
2247     ) ;
2248     loop(h$(ord(h) eq index), xch(e,h) = xch(e,h) + (1-delta) ; ) ;
2249   
2250  ) ;
2251   
2252  * ----- Other sources of income
2253   
2254  gtrh0(h) = sum(h0$(maph(h0,h)),sam0(h0,"gov")) ;
2255  wtrh0(h) = sum(h0$(maph(h0,h)),sam0(h0,"row"))/er0 ;
2256   
2257  * ------------------------------------------------------------------------------
2258  *
2259  * Initialize and calibrate government accounts
2260  *
2261  * ------------------------------------------------------------------------------
2262   
2263  wtrg0 = sam0("gov","row")/er0 ;
2264   
2265  tmadj0 = 1 ;
2266  tary0  = sum(k,sum(r,tmadj0*tm0(k,r)*er0*wpm0(k,r)*xm0(k,r))) ;
2267  rtary0 = tary0 ;
2268   
2269  gy0 = sum(i,tp0(i)*px0(i)*xp0(i))
2270      + sum(k,pa0(k)*(sum(j,tcp0(k,j)*xap0(k,j))+sum(h,tcc0(k,h)*xac0(k,h))+sum(f,tcf0(k,f)*xaf0(k,f))))
2271      + tary0 + sum(k,sum(r,te0(k,r)*(1+tmg0(k,"x"))*pe0(k,r)*xe0(k,r)))
2272      + sum(lt,sum(i,tft0(i,lt)*pt0(i,lt)*td0(i,lt)/(1+tft0(i,lt))))
2273      + sum(kt,sum(i,tfk0(i,kt)*rent0(i,kt)*kd0(i,kt)/(1+tfk0(i,kt))))
2274      + sum(l,sum(i,tfl0(i,l)*wage0(i,l)*ld0(i,l)/(1+tfl0(i,l))))
2275      + sum(i,tfr0(i)*pr0(i)*rd0(i)/(1+tfr0(i)))
2276      + sum(e,kappac0(e)*cy0(e)) + sum(h,kappah0(h)*yh0(h)) + er0*wtrg0 ;
2277   
2278  gtrw0 = sam0("row","gov")/er0 ;
2279  gexp0 = yf0("gov") + sum(h,gtrh0(h)) + gtrw0 ;
2280   
2281  *display gy0, gexp0, te0 ;
2282  savg0 = gy0 - gexp0 ;
2283  rsg0  = savg0/plev0 ;
2284   
2285  * ------------------------------------------------------------------------------
2286  *
2287  * Initialize and calibrate factor markets
2288  *
2289  * ------------------------------------------------------------------------------
2290   
2291  * ----- Labor markets
2292   
2293  ls0(l,"Tot") = sum(i,ld0(i,l)) ;
2294  ewage0(l,"Tot")$(omegam(l) eq inf) = sum(i,ld0(i,l)*wage0(i,l))/ls0(l,"Tot") ;
2295  phil(i,l)$(omegam(l) eq inf) = wage0(i,l)/ewage0(l,"Tot") ;
2296   
2297  als(l,"Tot")$(omegam(l) eq inf) = ls0(l,"Tot")*(plev0/ewage0(l,"Tot"))**omegal(l,"Tot") ;
2298   
2299  loop(l$(omegam(l) ne inf),
2300     awage0(l,gz2) = sum(i$mapg(i,gz2),wage0(i,l)*ld0(i,l)/(1+tfl0(i,l)))
2301                   / sum(i$mapg(i,gz2),ld0(i,l)) ;
2302     ewage0(l,gz2) = 1 ;
2303     loop(gz2,loop(i$mapg(i,gz2), phil(i,l) = wage0(i,l)/ewage0(l,gz2) ; )) ;
2304     ls0(l,gz2) = sum(i$mapg(i,gz2),ld0(i,l)) ;
2305     chim(l) = migr0(l)*(awage0(l,"rur")/awage0(l,"urb"))**omegam(l) ;
2306     lslag(l,"Rur") = (ls0(l,"Rur")+migr0(l))/(1+glab0(l,"Rur")) ;
2307     lslag(l,"Urb") = (ls0(l,"Urb")-migr0(l))/(1+glab0(l,"Urb")) ;
2308  ) ;
2309   
2310  * ----- Capital markets
2311   
2312  ptks0(kt)  = 1 ;
2313  pk0        = 1 ;
2314  tks0(kt)   = sum(i,rent0(i,kt)*kd0(i,kt)/(1+tfk0(i,kt)))/ptks0(kt) ;
2315  ks0(i,kt)  = kd0(i,kt) ;
2316   
2317  *display rent0, kd0, ptks0 ;
2318   
2319  ksup0      = sum(kt, ptks0(kt)*tks0(kt))/pk0 ;
2320   
2321  loop(kt$(tks0(kt) ne 0),
2322     if(omegak(kt) ne inf,
2323        aks(i,kt) = (ks0(i,kt)/tks0(kt))*((1+tfk0(i,kt))*ptks0(kt)/rent0(i,kt))**omegak(kt) ;
2324     ) ;
2325   
2326     if (omegakt ne inf,
2327        akst(kt) = (tks0(kt)/ksup0)*(pk0/ptks0(kt))**omegakt ;
2328     ) ;
2329  ) ;
2330   
2331  * ----- Land markets
2332   
2333  ts0(i,lt) = td0(i,lt) ;
2334  pland0    = 1+0*uniform(0.5,4) ;
2335  ptts0(lt) = 1 ;
2336   
2337  tts0(lt) = sum(i,pt0(i,lt)*td0(i,lt)/(1+tft0(i,lt)))/ptts0(lt) ;
2338  land0    = sum(lt,ptts0(lt)*tts0(lt))/pland0 ;
2339   
2340  if (land0 ne 0 and omegatl ne inf,
2341     atts(lt) = (tts0(lt)/land0)*(pland0/ptts0(lt))**omegatl ;
2342  ) ;
2343   
2344  loop(lt,
2345     if (tts0(lt) ne 0 and omegat(lt) ne inf,
2346        ats(i,lt) = (ts0(i,lt)/tts0(lt))*((1+tft0(i,lt))*ptts0(lt)/pt0(i,lt))**omegat(lt) ;
2347     ) ;
2348  ) ;
2349   
2350  * ----- Market for sector specific resource
2351   
2352  rs0(i) = rd0(i) ;
2353   
2354  loop(i$(rs0(i) ne 0),
2355     if (omegar(i) ne inf,
2356        ars(i) = rs0(i)*(plev0/pr0(i))**omegar(i) ;
2357     ) ;
2358  ) ;
2359   
2360  * ------------------------------------------------------------------------------
2361  *
2362  * Miscellaneous initializations
2363  *
2364  * ------------------------------------------------------------------------------
2365   
2366  savf0   = (sam0("inv","row")-sam0("row","inv"))/er0 ;
2367   
2368  gdpmp0  = sum(k,sum(h,xac0(k,h)*(1+tcc0(k,h))*pa0(k))) + sum(k,sum(f,pa0(k)*(1+tcf0(k,f))*xaf0(k,f)))
2369          + sum(k,sum(r,er0*wpe0(k,r)*xe0(k,r)))
2370          - sum(k,sum(r,er0*wpm0(k,r)*xm0(k,r))) ;
2371   
2372  rgdpmp0 = gdpmp0 ;
2373  pgdpmp0 = 1 ;
2374   
2375  gdpfc0  = sum(i,sum(l,wage0(i,l)*lambdal0(i,l)*ld0(i,l)))
2376          + sum(kt,sum(i,rent0(i,kt)*lambdak0(i,kt)*kd0(i,kt)))
2377          + sum(i,pr0(i)*lambdar0(i)*rd0(i))
2378          + sum(lt,sum(i,pt0(i,lt)*lambdat0(i,lt)*td0(i,lt))) ;
2379   
2380  rgdpfc0 = gdpfc0 ;
2381  pgdpfc0 = 1 ;
2382   
2383  pop0(h)   = 0.01*tpop0*sum(h0$(maph(h0,h)),popsh0(h0)) ;
2384  gl0       = 0 ;
2385  ggdp0     = 0 ;
2386  geg0(k,j) = 1 ;
2387  gce0(k,h) = 1 ;
2388  chil(i,l) = 0 ;
2389   
2390  * Rescale theta relative to population
2391   
2392  theta(k,h) = theta(k,h)/pop0(h) ;
2393   
2394  walras0 =  sum(r,sum(k,wpe0(k,r)*xe0(k,r))) + sum(h,wtrh0(h)) + wtrg0 + savf0
2395          -  sum(r,sum(k,wpm0(k,r)*xm0(k,r)))
2396          - (sum(h,htrw0(h)) + gtrw0 + sum(e,ctrw0(e)) + sum(kt,ktrw0(kt)))/er0;
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/init.gms
2398  * ------------------------------------------------------------------------------
2399  *
2400  * Initialize model variables
2401  *
2402  * ------------------------------------------------------------------------------
2403   
2404  * ----- Production block
2405   
2406     nd.l(i)         = nd0(i) ;
2407     va.l(i)         = va0(i) ;
2408     px.l(i)         = px0(i) ;
2409     pp.l(i)         = pp0(i) ;
2410   
2411     xap.l(k,j)      = xap0(k,j) ;
2412     pnd.l(i)        = pnd0(i) ;
2413   
2414     kl.l(i)         = kl0(i) ;
2415     ttd.l(i)        = ttd0(i) ;
2416     rd.l(i)         = rd0(i) ;
2417     pva.l(i)        = pva0(i) ;
2418   
2419     usk.l(i)        = usk0(i) ;
2420     ksk.l(i)        = ksk0(i) ;
2421     pkl.l(i)        = pkl0(i) ;
2422   
2423     skl.l(i)        = skl0(i) ;
2424     ktd.l(i)        = ktd0(i) ;
2425     pksk.l(i)       = pksk0(i) ;
2426   
2427     ld.l(i,l)       = ld0(i,l) ;
2428     pusk.l(i)       = pusk0(i) ;
2429     pskl.l(i)       = pskl0(i) ;
2430   
2431     kd.l(i,kt)      = kd0(i,kt) ;
2432     pktd.l(i)       = pktd0(i) ;
2433   
2434     td.l(i,lt)      = td0(i,lt) ;
2435     pttd.l(i)       = pttd0(i) ;
2436   
2437     xp.l(i)         = xp0(i) ;
2438     p.l(k)          = p0(k) ;
2439   
2440  * ----- Income block
2441   
2442     ly.l(l)         = ly0(l) ;
2443     ky.l(kt)        = ky0(kt) ;
2444     ty.l(lt)        = ty0(lt) ;
2445     ry.l            = ry0 ;
2446   
2447     ktre.l(kt)      = ktre0(kt) ;
2448     ktrh.l(kt)      = ktrh0(kt) ;
2449     ktrw.l(kt)      = ktrw0(kt) ;
2450   
2451     cy.l(e)         = cy0(e) ;
2452     savc.l(e)       = savc0(e) ;
2453     ctrh.l(e)       = ctrh0(e) ;
2454     ctrw.l(e)       = ctrw0(e) ;
2455   
2456     yh.l(h)         = yh0(h) ;
2457     yd.l(h)         = yd0(h) ;
2458     htr.l(h)        = htr0(h) ;
2459     htrh.l(h,hh)    = htrh0(h,hh) ;
2460     htrw.l(h)       = htrw0(h) ;
2461   
2462  * ----- Demand block
2463   
2464     xac.l(k,h)      = xac0(k,h) ;
2465     savh.l(h)       = savh0(h) ;
2466     cpi.l(h)        = cpi0(h) ;
2467   
2468     xaf.l(k,f)      = xaf0(k,f) ;
2469     pf.l(f)         = pf0(f) ;
2470     yf.l(f)         = yf0(f) ;
2471   
2472  * ----- Trade block
2473   
2474     xa.l(k)         = xa0(k) ;
2475     xdd.l(k)        = xdd0(k) ;
2476     xmt.l(k)        = xmt0(k) ;
2477     pa.l(k)         = pa0(k) ;
2478   
2479     pm.l(k,r)       = pm0(k,r) ;
2480     xm.l(k,r)       = xm0(k,r) ;
2481     pmt.l(k)        = pmt0(k) ;
2482   
2483     pe.l(k,r)       = pe0(k,r) ;
2484     xds.l(k)        = xds0(k) ;
2485     xet.l(k)        = xet0(k) ;
2486     x.l(k)          = x0(k) ;
2487   
2488     xe.l(k,r)       = xe0(k,r) ;
2489     pet.l(k)        = pet0(k) ;
2490   
2491     ed.l(k,r)       = ed0(k,r) ;
2492   
2493  * ----- Domestic trade and transport margins
2494   
2495     ytmg.l(k,mg)    = ytmg0(k,mg) ;
2496     xtmg.l(k,mg)    = xtmg0(k,mg) ;
2497     xamg.l(k,kk,mg) = xamg0(k,kk,mg) ;
2498     ptmg.l(k,mg)    = ptmg0(k,mg) ;
2499   
2500  * ----- Goods market equilibrium
2501   
2502     pd.l(k)         = pd0(k) ;
2503     wpe.l(k,r)      = wpe0(k,r) ;
2504   
2505  * ----- Government accounts
2506   
2507     tary.l          = tary0 ;
2508     rtary.l         = rtary0 ;
2509     gy.l            = gy0 ;
2510     gexp.l          = gexp0 ;
2511     savg.l          = savg0 ;
2512     taxadjh.l       = taxadjh0 ;
2513     taxadjc.l       = taxadjc0 ;
2514   
2515  * ----- Closure
2516   
2517     xf.l(f)         = xf0(f) ;
2518     plev.l          = plev0 ;
2519     walras          = walras0 ;
2520   
2521  * ----- Factor block
2522   
2523     ls.l(l,gz)      = ls0(l,gz) ;
2524     ewage.l(l,gz)   = ewage0(l,gz) ;
2525     wage.l(i,l)     = wage0(i,l) ;
2526   
2527     migr.l(l)       = migr0(l) ;
2528     awage.l(l,gz)   = awage0(l,gz) ;
2529   
2530     tks.l(kt)       = tks0(kt) ;
2531     pk.l            = pk0 ;
2532   
2533     ks.l(i,kt)      = ks0(i,kt) ;
2534     ptks.l(kt)      = ptks0(kt) ;
2535     rent.l(i,kt)    = rent0(i,kt) ;
2536   
2537     tts.l(lt)       = tts0(lt) ;
2538     pland.l         = pland0 ;
2539   
2540     ts.l(i,lt)      = ts0(i,lt) ;
2541     ptts.l(lt)      = ptts0(lt) ;
2542     pt.l(i,lt)      = pt0(i,lt) ;
2543   
2544     rs.l(i)         = rs0(i) ;
2545     pr.l(i)         = pr0(i) ;
2546   
2547  * ----- Macro variables
2548   
2549     gdpmp.l         = gdpmp0 ;
2550     rgdpmp.l        = rgdpmp0 ;
2551     pgdpmp.l        = pgdpmp0 ;
2552     gdpfc.l         = gdpfc0 ;
2553     rgdpfc.l        = rgdpfc0 ;
2554     pgdpfc.l        = pgdpfc0 ;
2555   
2556  * ----- Growth variables
2557   
2558     ggdp.l          = ggdp0 ;
2559     lambdal.l(i,l)  = lambdal0(i,l) ;
2560     lambdak.l(i,kt)  = lambdak0(i,kt) ;
2561     lambdat.l(i,lt)  = lambdat0(i,lt) ;
2562     geg.l(k,j)      = geg0(k,j) ;
2563     gce.l(k,h)       =gce0(k,h) ;
2564   
2565  * ----- Growth factors
2566   
2567     gl.fx            = gl0 ;
2568  *   lambdak.fx(i,kt) = lambdak0(i,kt) ;
2569  *   lambdat.fx(i,lt) = lambdat0(i,lt) ;
2570     lambdar.fx(i)    = lambdar0(i) ;
2571     ksup.fx          = ksup0 ;
2572     tk.fx            = tk0 ;
2573     land.fx          = land0 ;
2574     pop.fx(h)        = pop0(h) ;
2575     glab.fx(l,gz)    = glab0(l,gz) ;
2576   
2577  * ----- Trade prices
2578   
2579     wpm.fx(k,r)     = wpm0(k,r) ;
2580     wpendx.fx(k,r)  = wpendx0(k,r) ;
2581     er.fx           = er0 ;
2582   
2583  * ----- Policy variables
2584   
2585     rsg.fx          = rsg0 ;
2586     tp.fx(i)        = tp0(i) ;
2587     tcp.fx(k,j)     = tcp0(k,j) ;
2588     tcc.fx(k,h)     = tcc0(k,h) ;
2589     tcf.fx(k,f)     = tcf0(k,f) ;
2590     kappah.fx(h)    = kappah0(h) ;
2591     gtrh.fx(h)      = gtrh0(h) ;
2592     kappac.fx(e)    = kappac0(e) ;
2593   
2594     tmadj.fx        = tmadj0 ;
2595     tm.fx(k,r)      = tm0(k,r) ;
2596     te.fx(k,r)      = te0(k,r) ;
2597   
2598     tfl.fx(j,l)     = tfl0(j,l) ;
2599     tfk.fx(j,kt)    = tfk0(j,kt) ;
2600     tft.fx(j,lt)    = tft0(j,lt) ;
2601     tfr.fx(j)       = tfr0(j) ;
2602   
2603  * ----- Miscellaneous variables
2604   
2605     wtrh.fx(h)      = wtrh0(h) ;
2606     wtrg.fx         = wtrg0 ;
2607     gtrw.fx         = gtrw0 ;
2608     ctrw.l(e)       = ctrw0(e) ;
2609     savf.fx         = savf0 ;
2610     csavrate.fx(e)  = csavrate0(e) ;
2611     tmg.fx(k,mg)    = tmg0(k,mg) ;
2612   
2613   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/model.gms
2615  * ------------------------------------------------------------------------------
2616  *
2617  * Declare model equations
2618  *
2619  * ------------------------------------------------------------------------------
2620   
2621  equations
2622   
2623  * ----- Production block
2624   
2625     ndeq(i)        Demand for aggregate intermediates
2626     vaeq(i)        Demand for aggregate value added
2627     pxeq(i)        Unit cost definition
2628     ppeq(i)        Producer price definition
2629   
2630     xapeq(k,j)     Demand for intermediate goods
2631     pndeq(i)       Price of aggregate intermediate demand
2632   
2633     kleq(i)        Demand for KL bundle
2634     ttdeq(i)       Demand for land bundle
2635     rdeq(i)        Demand for natural resource bundle
2636     pvaeq(i)       Price of aggregate value added
2637   
2638     uskeq(i)       Demand for USK bundle
2639     kskeq(i)       Demand for KSK bundle
2640     pkleq(i)       Price of KL bundle
2641   
2642     skleq(i)       Demand for SKL bundle
2643     ktdeq(i)       Demand for capital bundle
2644     pkskeq(i)      Price of KSK bundle
2645   
2646     ldeq1(i,l)     Demand for labor across unskilled types
2647     ldeq2(i,l)     Demand for labor across skilled types
2648     puskeq(i)      Price of USK bundle
2649     pskleq(i)      Price of SKL bundle
2650   
2651     kdeq(i,kt)     Demand for capital
2652     pktdeq(i)      Price of capital bundle
2653     tdeq(i,lt)     Demand for land
2654     pttdeq(i)      Price of land bundle
2655   
2656     xpeq1(i,k)     Demand for output from sector i finite substitution
2657     xpeq2(i,k)     Demand for output from sector i infinite substitution
2658     peq1(k)        Aggregate price of commodity k finite substitution
2659     peq2(k)        Aggregate price of commodity k infinite substitution
2660   
2661  * ----- Income distribution
2662   
2663     lyeq(l)        Aggregate labor remuneration
2664     kyeq(kt)       Aggregate capital remuneration
2665     tyeq(lt)       Land income
2666     ryeq           Aggregate sector specific factor income
2667   
2668     ktreeq(kt)     Capital transfers to enterprises
2669     ktrheq(kt)     Capital transters to households
2670     ktrweq(kt)     Capital transfers to ROW
2671   
2672     cyeq(e)        Corporate remuneration
2673     savceq(e)      Corporate savings
2674     ctrheq(e)      Corporate transfers to households
2675     ctrweq(e)      Corporate transfers to ROW
2676   
2677  * ----- Income block
2678   
2679     yheq(h)        Household income
2680     ydeq(h)        Disposable household income
2681     htreq(h)       Transfers by households
2682     htrheq(h,hh)   Intra household transfers
2683     htrweq(h)      Household transfers to rest of world
2684   
2685  * ----- Demand block
2686   
2687     xaceq(k,h)     Household demand for goods and services
2688     savheq(h)      Household savings
2689     cpieq(h)       Consumer price index
2690   
2691     xafeq(k,f)     Other final demand for goods and services
2692     pfeq(f)        Other final demand expenditure deflator
2693     yfeq(f)        Expenditure identity
2694   
2695  * ----- Trade block
2696   
2697     xaeq(k)        Aggregate Armington demand
2698     xddeq(k)       Domestic demand for domestic production
2699     xmteq(k)       Aggregate sectoral import demand
2700     paeq(k)        Aggregate Armington price
2701   
2702     pmeq(k,r)      Tariff inclusive price of imports
2703     xmeq(k,r)      Import demand by region of origin
2704     pmteq(k)       Aggregate sectoral import price
2705   
2706     peeq(k,r)      Domestic export producer price
2707     xdseq1(k)      Domestic supply of domestic production with finite elasticity
2708     xdseq2(k)      Domestic supply of domestic production with infinite elasticity
2709     xeteq1(k)      Aggregate export supply with finite elasticity
2710     xeteq2(k)      Aggregate export supply with infinite elasticity
2711     xeq1(k)        Output aggregation with finite elasticity
2712     xeq2(k)        Output aggregation with infinite elasticity
2713   
2714     xeeq1(k,r)     Export supply by region of destination with finite elasticity
2715     xeeq2(k,r)     Export supply by region of destination with infinite elasticity
2716     peteq1(k)      Aggregate export price with finite elasticity
2717     peteq2(k)      Aggregate export price with infinite elasticity
2718   
2719     edeq1(k,r)     Export demand elasticity with finite elasticity
2720     edeq2(k,r)     Export demand elasticity with infinite elasticity
2721   
2722  * ----- Trade and transport equations
2723   
2724     ytmgeq1(kk)      Aggregate value of trade and transport services for domestic goods
2725     ytmgeq2(kk)      Aggregate value of trade and transport services for imported goods
2726     ytmgeq3(kk)      Aggregate value of trade and transport services for exported goods
2727     xtmgeq(kk,mg)    Aggregate demand for trade and transport services
2728     xamgeq(k,kk,mg)  Demand for trade and transport services
2729     ptmgeq(kk,mg)    Aggregate price of trade and transport services
2730   
2731  * ----- Goods market equilibrium
2732   
2733     pdeq(k)        Domestic market equilibrium
2734     wpeeq(k,r)     Export market equilibrium
2735   
2736  * ----- Government accounts
2737   
2738     taryeq         Tariff revenues identity
2739     rtaryeq        Real tariff revenues
2740     gyeq           Government revenues
2741     gexpeq         Government expenditures
2742     savgeq         Government savings
2743     rsgeq          Real government savings
2744   
2745  * ----- Closure equations
2746   
2747     tieq           Saving investment balance
2748     pleveq         Price level
2749   
2750  * ----- Factor markets
2751   
2752     lseq1(l)       Labor supply equation with finite supply
2753     lseq2(l)       Labor supply equation with infinite supply
2754     ewageq(l)      Equilibrium wage rate
2755     wageq(i,l)     Sectoral wages
2756   
2757  * ----- Migration equations
2758   
2759     migreq(l)      Migration equation
2760     awageq(l,gz)   Average wage equations
2761   
2762     ewageq2(l,gz)  Equilibrium wage
2763     wageq2(i,l,gz) Sectoral wages
2764   
2765     rlseq(l)       Rural labor supply
2766     ulseq(l)       Urban labor supply
2767     tlseq(l)       Total labor supply
2768   
2769     tkseq1(kt)     Capital supply by type with finite transformation
2770     tkseq2(kt)     Capital supply by type with infinite transformation
2771     pkeq1          Aggregate price of capital with finite transformation
2772     pkeq2          Aggregate price of capital with infinite transformation
2773   
2774     kseq1(i,kt)    Capital supply with finite transformation
2775     kseq2(i,kt)    Capital supply with infinite transformation
2776     ptkseq1(kt)    Capital price with finite transformation
2777     ptkseq2(kt)    Capital price with infinite transformation
2778     renteq(i,kt)   Equilibrium sectoral rental rates
2779   
2780     ttseq1(lt)     Supply of land by type with finite transformation
2781     ttseq2(lt)     Supply of land by type with infinite transformation
2782     plandeq1       Aggregate land price with finite transformation
2783     plandeq2       Aggregate land price with infinte transformation
2784   
2785     tseq1(i,lt)    Land supply with finite transformation
2786     tseq2(i,lt  )  Land supply with infinite transformation
2787     pttseq1(lt)    Price of land by type with finite transformation
2788     pttseq2(lt)    Price of land by type with infinite transformation
2789     pteq(i,lt)     Equilibrium sectoral land rates
2790   
2791     rseq1(i)       Sector specific supply function with finite elasticity
2792     rseq2(i)       Sector specific supply function with infinite elasticity
2793     preq(i)        Sector specific factor market equilibrium condition
2794   
2795  * ----- Macro identities
2796   
2797     gdpmpeq        GDP at market price identity
2798     rgdpmpeq       Real GDP at market price identity
2799     pgdpmpeq       GDP at market price deflator
2800   
2801     gdpfceq        GDP at factor cost identity
2802     rgdpfceq       Real GDP at factor cost identity
2803     pgdpfceq       Real GDP at factor cost deflator
2804   
2805  * ----- Growth equations
2806   
2807     ggdpeq         Growth rate of real GDP
2808     lambdaleq(i,l) Labor productivity factor
2809     lambdakeq(i,kt) Labor productivity factor
2810     lambdateq(i,lt) Labor productivity factor
2811     gegeq(k,j)     Growth of intermediate energy use
2812     gceeq(k,h)     Growth of household energy use
2813  ;
2814   
2815  * ------------------------------------------------------------------------------
2816  *
2817  * Define model equations
2818  *
2819  * ------------------------------------------------------------------------------
2820   
2821  * ----- Production block
2822   
2823  * ----- Top level nest
2824   
2825  * ----- Equation (P-1)
2826   
2827  ndeq(i)..
2828     nd(i)*pnd(i)**sigmap(i) =e= and(i)*xp(i)*px(i)**sigmap(i) ;
2829   
2830  * ----- Equation (P-2)
2831   
2832  vaeq(i)$(va0(i) ne 0)..
2833     va(i)*pva(i)**sigmap(i) =e= ava(i)*xp(i)*px(i)**sigmap(i) ;
2834   
2835  va.fx(i)$(va0(i) eq 0) = 0 ;
2836   
2837  * ----- Equation (P-3)
2838   
2839  pxeq(i)..
2840     px(i)**(1-sigmap(i)) =e= and(i)*pnd(i)**(1-sigmap(i)) + ava(i)*pva(i)**(1-sigmap(i)) ;
2841   
2842  * ----- Equation (P-4)
2843   
2844  ppeq(i)..
2845     pp(i) =e= (1+tp(i))*px(i) ;
2846   
2847   
2848  * ----- Second level nests
2849   
2850  * ----- Equation (P-5)
2851   
2852  xapeq(k,j)$(xap0(k,j) ne 0)..
2853     xap(k,j) =e= a(k,j)*nd(j) ;
2854   
2855  xap.fx(k,j)$(xap0(k,j) eq 0) = 0 ;
2856   
2857  * ----- Equation (P-6)
2858   
2859  pndeq(j)..
2860     pnd(j) =e= sum(k,a(k,j)*(1+tcp(k,j))*pa(k)) ;
2861   
2862  * ----- Equation (P-7)
2863   
2864  kleq(i)$(kl0(i) ne 0)..
2865     kl(i)*pkl(i)**sigmav(i) =e= akl(i)*va(i)*(pva(i)**sigmav(i)) ;
2866   
2867  kl.fx(i)$(kl0(i) eq 0) = 0 ;
2868   
2869  * ----- Equation (P-8)
2870   
2871  ttdeq(i)$(att(i) ne 0)..
2872     ttd(i)*pttd(i)**sigmav(i) =e= att(i)*va(i)*(pva(i)**sigmav(i)) ;
2873   
2874  ttd.fx(i)$(att(i) eq 0) = 0 ;
2875   
2876  * ----- Equation (P-9)
2877   
2878  rdeq(i)$(rd0(i) ne 0)..
2879     lambdar(i)*rd(i)*pr(i)**sigmav(i) =e= ar(i)*va(i)*(lambdar(i)*pva(i))**sigmav(i) ;
2880   
2881  rd.fx(i)$(rd0(i) eq 0) = 0 ;
2882   
2883  * ----- Equation (P-10)
2884   
2885  pvaeq(i)$(va0(i) ne 0)..
2886     pva(i)**(1-sigmav(i)) =e= akl(i)*pkl(i)**(1-sigmav(i))
2887                            +  ar(i)*(pr(i)/lambdar(i))**(1-sigmav(i))
2888                            +  att(i)*pttd(i)**(1-sigmav(i)) ;
2889   
2890  pva.fx(i)$(va0(i) eq 0) = 1 ;
2891   
2892  * ----- Third level nest
2893   
2894  * ----- Equation (P-11)
2895   
2896  uskeq(i)$(au(i) ne 0)..
2897     usk(i)*pusk(i)**sigmakl(i) =e= au(i)*kl(i)*pkl(i)**sigmakl(i) ;
2898   
2899  usk.fx(i)$(au(i) eq 0) = 0 ;
2900   
2901  * ----- Equation (P-12)
2902   
2903  kskeq(i)$(aksk(i) ne 0)..
2904     ksk(i)*pksk(i)**sigmakl(i) =e= aksk(i)*kl(i)*pkl(i)**sigmakl(i) ;
2905   
2906  ksk.fx(i)$(aksk(i) eq 0) = 0 ;
2907   
2908  * ----- Equation (P-13)
2909   
2910  pkleq(i)$(kl0(i) ne 0)..
2911     pkl(i)**(1-sigmakl(i)) =e= au(i)*pusk(i)**(1-sigmakl(i)) + aksk(i)*pksk(i)**(1-sigmakl(i)) ;
2912   
2913  pkl.fx(i)$(kl0(i) eq 0) = 1 ;
2914   
2915  * ----- Fourth level nest
2916   
2917  * ----- Equation (P-14)
2918   
2919  skleq(i)$(as(i) ne 0)..
2920     skl(i)*pskl(i)**sigmaks(i) =e= as(i)*ksk(i)*pksk(i)**sigmaks(i) ;
2921   
2922  skl.fx(i)$(as(i) eq 0) = 0 ;
2923   
2924  * ----- Equation (P-15)
2925   
2926  ktdeq(i)$(akt(i) ne 0)..
2927     ktd(i)*pktd(i)**sigmaks(i) =e= akt(i)*ksk(i)*pksk(i)**sigmaks(i) ;
2928   
2929  ktd.fx(i)$(akt(i) eq 0) = 0 ;
2930   
2931  * ----- Equation (P-16)
2932   
2933  pkskeq(i)$(ksk0(i) ne 0)..
2934     pksk(i)**(1-sigmaks(i)) =e= as(i)*pskl(i)**(1-sigmaks(i)) + akt(i)*pktd(i)**(1-sigmaks(i)) ;
2935   
2936  pksk.fx(i)$(ksk0(i) eq 0) = 1 ;
2937   
2938  * ----- Decomposition of labor demand
2939   
2940  * ----- Equation (P-17)
2941   
2942  ldeq1(i,ul)$(al(i,ul) ne 0)..
2943     lambdal(i,ul)*ld(i,ul)*wage(i,ul)**sigmau(i) =e=
2944        al(i,ul)*usk(i)*(pusk(i)*lambdal(i,ul))**sigmau(i) ;
2945   
2946  * ----- Equation (P-18)
2947   
2948  ldeq2(i,sl)$(al(i,sl) ne 0)..
2949     lambdal(i,sl)*ld(i,sl)*wage(i,sl)**sigmas(i) =e=
2950        al(i,sl)*skl(i)*(pskl(i)*lambdal(i,sl))**sigmas(i) ;
2951   
2952  ld.fx(i,l)$(al(i,l) eq 0) = 0 ;
2953   
2954  * ----- Equation (P-19)
2955   
2956  puskeq(i)$(usk0(i) ne 0)..
2957     pusk(i)**(1-sigmau(i)) =e= sum(ul, al(i,ul)*(wage(i,ul)/lambdal(i,ul))**(1-sigmau(i))) ;
2958   
2959  * ----- Equation (P-20)
2960   
2961  pskleq(i)$(skl0(i) ne 0)..
2962     pskl(i)**(1-sigmas(i)) =e= sum(sl, al(i,sl)*(wage(i,sl)/lambdal(i,sl))**(1-sigmas(i))) ;
2963   
2964  pusk.fx(i)$(usk0(i) eq 0) = 1 ;
2965  pskl.fx(i)$(skl0(i) eq 0) = 1 ;
2966   
2967  * ----- Decompose capital bundle
2968   
2969  * ----- Equation (P-21)
2970   
2971  kdeq(i,kt)$(ak(i,kt) ne 0)..
2972     lambdak(i,kt)*kd(i,kt)*rent(i,kt)**sigmak(i) =e= ak(i,kt)*ktd(i)*(pktd(i)*lambdak(i,kt))**sigmak(i) ;
2973   
2974  kd.fx(i,kt)$(ak(i,kt) eq 0) = 0 ;
2975   
2976  * ----- Equation (P-22)
2977   
2978  pktdeq(i)$(akt(i) ne 0)..
2979     pktd(i)**(1-sigmak(i)) =e= sum(kt,ak(i,kt)*(rent(i,kt)/lambdak(i,kt))**(1-sigmak(i))) ;
2980   
2981  pktd.fx(i)$(akt(i) eq 0) = 1 ;
2982   
2983  * Decompose the land bundle
2984   
2985  * ----- Equation (P-23)
2986   
2987  tdeq(i,lt)$(at(i,lt) ne 0)..
2988     lambdat(i,lt)*td(i,lt)*pt(i,lt)**sigmat(i) =e= at(i,lt)*ttd(i)*(lambdat(i,lt)*pttd(i))**sigmat(i) ;
2989   
2990  td.fx(i,lt)$(at(i,lt) eq 0) = 0 ;
2991   
2992  * ----- Equation (P-24)
2993   
2994  pttdeq(i)$(att(i) ne 0)..
2995     pttd(i)**(1-sigmat(i)) =e= sum(lt,at(i,lt)*(pt(i,lt)/lambdat(i,lt))**(1-sigmat(i))) ;
2996   
2997  pttd.fx(i)$(att(i) eq 0) = 0 ;
2998   
2999  * ----- Aggregation into commodities
3000   
3001  * ----- Equation (P-25)
3002   
3003  xpeq1(i,k)$(mapik(i,k) and sigmac(k) ne inf)..
3004   
3005     xp(i)*pp(i)**sigmac(k) =e= ac(i,k)*x(k)*p(k)**sigmac(k) ;
3006   
3007  xpeq2(i,k)$(mapik(i,k) and sigmac(k) eq inf)..
3008     pp(i) =e= p(k) ;
3009   
3010  * ----- Equation (P-26)
3011   
3012  peq1(k)$(sigmac(k) ne inf and x0(k) ne 0)..
3013     p(k)**(1-sigmac(k)) =e= sum(i$mapik(i,k),ac(i,k)*pp(i)**(1-sigmac(k))) ;
3014   
3015  peq2(k)$(sigmac(k) eq inf and x0(k) ne 0)..
3016     x(k) =e= sum(i$mapik(i,k),xp(i)) ;
3017   
3018  p.fx(k)$(x0(k) eq 0) = 1 ;
3019   
3020  * ----- Income distribution
3021   
3022  * ----- Aggregate factor incomes net of factor taxes
3023   
3024  * ----- Equation (Y-1)
3025   
3026  lyeq(l)..
3027     ly(l) =e= sum(i,wage(i,l)*ld(i,l)/(1+tfl(i,l))) ;
3028   
3029  * ----- Equation (Y-2)
3030   
3031  kyeq(kt)..
3032     ky(kt) =e= sum(i,rent(i,kt)*kd(i,kt)/(1+tfk(i,kt))) ;
3033   
3034  * ----- Equation (Y-3)
3035   
3036  tyeq(lt)$(ty0(lt) ne 0)..
3037     ty(lt) =e= sum(i,pt(i,lt)*td(i,lt)/(1+tft(i,lt))) ;
3038   
3039  ty.fx(lt)$(ty0(lt) eq 0) = 0 ;
3040   
3041  * ----- Equation (Y-4)
3042   
3043  ryeq$(ry0 ne 0)..
3044     ry =e= sum(i,pr(i)*rd(i)/(1+tfr(i))) ;
3045   
3046  ry.fx$(ry0 eq 0) = 0 ;
3047   
3048  * ----- Distribution of capital income
3049   
3050  * ----- Equation (Y-5)
3051   
3052  ktreeq(kt)$(ktre0(kt) ne 0)..
3053     ktre(kt) =e= xket(kt)*ky(kt) ;
3054   
3055  ktre.fx(kt)$(ktre0(kt) eq 0) = 0 ;
3056   
3057  * ----- Equation (Y-6)
3058   
3059  ktrheq(kt)$(ktrh0(kt) ne 0)..
3060     ktrh(kt) =e= xkht(kt)*ky(kt) ;
3061   
3062  ktrh.fx(kt)$(ktrh0(kt) eq 0) = 0 ;
3063   
3064  * ----- Equation (Y-7)
3065   
3066  ktrweq(kt)$(ktrw0(kt) ne 0)..
3067     ktrw(kt) =e= xkwt(kt)*ky(kt) ;
3068   
3069  ktrw.fx(kt)$(ktrw0(kt) eq 0) = 0 ;
3070   
3071  * ----- Distribution of corporate income
3072   
3073  * ----- Equation (Y-8)
3074   
3075  cyeq(e)$(cy0(e) ne 0)..
3076     cy(e) =e= sum(kt,xke(kt,e)*ktre(kt)) ;
3077   
3078  cy.fx(e)$(cy0(e) eq 0) = 0 ;
3079   
3080  * ----- Equation (Y-9)
3081   
3082  savceq(e)$(savc0(e) ne 0)..
3083     savc(e) =e= csavrate(e)*((1-kappac(e))*cy(e)) ;
3084   
3085  savc.fx(e)$(savc0(e) eq 0) = 0 ;
3086   
3087  * ----- Equation (Y-10)
3088   
3089  ctrheq(e)$(ctrh0(e) ne 0)..
3090     ctrh(e) =e= xcht(e)*((1-kappac(e))*cy(e)) ;
3091   
3092  ctrh.fx(e)$(ctrh0(e) eq 0) = 0 ;
3093   
3094  * ----- Equation (Y-11)
3095   
3096  ctrweq(e)$(ctrw0(e) ne 0)..
3097     ctrw(e) =e= xcwt(e)*((1-kappac(e))*cy(e)) ;
3098   
3099  ctrw.fx(e)$(ctrw0(e) eq 0) = 0 ;
3100   
3101  * ----- Household income
3102   
3103  * ----- Equation (Y-12)
3104   
3105  yheq(h)..
3106     yh(h) =e= sum(l,xlh(h,l)*ly(l)) + xrh(h)*ry + sum(kt,xkh(kt,h)*ktrh(kt)) + sum(e,xch(e,h)*ctrh(e))
3107            +  sum(lt,xth(lt,h)*ty(lt)) + plev*gtrh(h) + sum(hh,htrh(h,hh)) + er*wtrh(h) ;
3108   
3109  * ----- Equation (Y-13)
3110   
3111  ydeq(h)..
3112     yd(h) =e= (1-taxadjh*kappah(h))*yh(h) - htr(h) ;
3113   
3114  * ----- Equation (Y-14)
3115   
3116  htreq(h)$(ahtr(h) ne 0)..
3117     htr(h) =e= ahtr(h)*(1-taxadjh*kappah(h))*yh(h) ;
3118   
3119  htr.fx(h)$(ahtr(h) eq 0) = 0 ;
3120   
3121  * ----- Equation (Y-15)
3122   
3123  htrheq(h,hh)$(ahtrh(h,hh) ne 0)..
3124     htrh(h,hh) =e= ahtrh(h,hh)*htr(hh) ;
3125   
3126  htrh.fx(h,hh)$(ahtrh(h,hh) eq 0) = 0 ;
3127   
3128  * ----- Equation (Y-16)
3129   
3130  htrweq(h)$(ahtrw(h) ne 0)..
3131     htrw(h) =e= ahtrw(h)*htr(h) ;
3132   
3133  htrw.fx(h)$(ahtrw(h) eq 0) = 0 ;
3134   
3135  * ----- Demand block
3136   
3137  * ----- Household demand
3138   
3139  * ----- Equation (D-1)
3140   
3141  xaceq(k,h)$(mu(k,h) ne 0)..
3142     xac(k,h)*(1+tcc(k,h))*pa(k) =e= (1+tcc(k,h))*pa(k)*theta(k,h)*pop(h) + mu(k,h)*(yd(h)*(1-asav(h))
3143                                  -   pop(h)*sum(kk,(1+tcc(kk,h))*pa(kk)*theta(kk,h))) ;
3144   
3145  xac.fx(k,h)$(mu(k,h) eq 0) = 0 ;
3146   
3147  * ----- Equation (D-2)
3148   
3149  savheq(h)..
3150     savh(h) =e= yd(h) - sum(k,(1+tcc(k,h))*pa(k)*xac(k,h)) ;
3151   
3152  * ----- Equation (D-3)
3153   
3154  cpieq(h)..
3155     cpi(h)*sum(k,(1+tcc0(k,h))*pa0(k)*xac0(k,h)) =e= sum(k,(1+tcc(k,h))*pa(k)*xac0(k,h)) ;
3156   
3157  * ----- Other final demand
3158   
3159  * ----- Equation (D-4)
3160   
3161  xafeq(k,f)$(xaf0(k,f) ne 0)..
3162     xaf(k,f)*((1+tcf(k,f))*pa(k))**sigmaf(f) =e= af(k,f)*xf(f)*pf(f)**sigmaf(f) ;
3163   
3164  xaf.fx(k,f)$(xaf0(k,f) eq 0) = 0 ;
3165   
3166  * ----- Equation (D-5)
3167   
3168  pfeq(f)$(xf0(f) ne 0)..
3169     pf(f)**(1-sigmaf(f)) =e= sum(k,af(k,f)*((1+tcf(k,f))*pa(k))**(1-sigmaf(f))) ;
3170   
3171  pf.fx(f)$(xf0(f) eq 0) = 1 ;
3172   
3173  * ----- Equation (D-6)
3174   
3175  yfeq(f)$(xf0(f) ne 0)..
3176     yf(f) =e= pf(f)*xf(f) ;
3177   
3178  yf.fx(f)$(xf0(f) eq 0) = 0 ;
3179   
3180  * ----- Trade block
3181   
3182  * ----- Armington system
3183   
3184  * ----- Equation (T-1)
3185   
3186  xaeq(k)..
3187     xa(k) =e= sum(j,xap(k,j)) + sum(h,xac(k,h)) + sum(f,xaf(k,f)) + sum(kk, sum(mg, xamg(k,kk,mg))) ;
3188   
3189  * ----- Equation (T-2)
3190   
3191  xddeq(k)$(xdd0(k) ne 0)..
3192     xdd(k)*(pd(k)*(1+tmg(k,"d")))**sigmam(k) =e= ad(k)*xa(k)*pa(k)**sigmam(k) ;
3193   
3194  xdd.fx(k)$(xdd0(k) eq 0) = 0 ;
3195   
3196  * ----- Equation (T-3)
3197   
3198  xmteq(k)$(xmt0(k) ne 0)..
3199     xmt(k)*pmt(k)**sigmam(k) =e= am(k)*xa(k)*pa(k)**sigmam(k) ;
3200   
3201  xmt.fx(k)$(xmt0(k) eq 0) = 0 ;
3202   
3203  * ----- Equation (T-4)
3204   
3205  paeq(k)..
3206     pa(k)**(1-sigmam(k)) =e= ad(k)*(pd(k)*(1+tmg(k,"d")))**(1-sigmam(k))
3207                           +  am(k)*(pmt(k)**(1-sigmam(k))) ;
3208   
3209  * ----- Equation (T-5)
3210   
3211  pmeq(k,r)$(xm0(k,r) ne 0)..
3212     pm(k,r) =e= er*wpm(k,r)*(1+tmadj*tm(k,r)) ;
3213   
3214  pm.fx(k,r)$(xm0(k,r) eq 0) = 1 ;
3215   
3216  * ----- Equation (T-6)
3217   
3218  xmeq(k,r)$(xm0(k,r) ne 0)..
3219     xm(k,r)*((1+tmg(k,"m"))*pm(k,r))**sigmaw(k) =e= aw(k,r)*xmt(k)*pmt(k)**sigmaw(k) ;
3220   
3221  xm.fx(k,r)$(xm0(k,r) eq 0) = 0 ;
3222   
3223  * ----- Equation (T-7)
3224   
3225  pmteq(k)$(xmt0(k) ne 0) ..
3226     pmt(k)**(1-sigmaw(k)) =e= sum(r,aw(k,r)*((1+tmg(k,"m"))*pm(k,r))**(1-sigmaw(k))) ;
3227   
3228  pmt.fx(k)$(xmt0(k) eq 0) = 1 ;
3229   
3230  * ----- CET system
3231   
3232  * ----- Equation (T-8)
3233   
3234  peeq(k,r)$(xe0(k,r) ne 0)..
3235     pe(k,r)*(1+tmg(k,"x"))*(1+te(k,r)) =e= er*wpe(k,r) ;
3236   
3237  pe.fx(k,r)$(xe0(k,r) eq 0) = 1 ;
3238   
3239  * ----- Equation (T-9)
3240   
3241  xdseq1(k)$(sigmax(k) ne inf and xds0(k) ne 0)..
3242     xds(k)*p(k)**sigmax(k) =e= gd(k)*x(k)*pd(k)**sigmax(k) ;
3243   
3244  xdseq2(k)$(sigmax(k) eq inf and xds0(k) ne 0)..
3245     pd(k) =e= p(k) ;
3246   
3247  xds.fx(k)$(xds0(k) eq 0) = 0 ;
3248   
3249  * ----- Equation (T-10)
3250   
3251  xeteq1(k)$(sigmax(k) ne inf and xet0(k) ne 0)..
3252     xet(k)*p(k)**sigmax(k) =e= ge(k)*x(k)*pet(k)**sigmax(k) ;
3253   
3254  xeteq2(k)$(sigmax(k) eq inf and xet0(k) ne 0)..
3255     pet(k) =e= p(k) ;
3256   
3257  xet.fx(k)$(xet0(k) eq 0) = 0 ;
3258   
3259  * ----- Equation (T-11)
3260   
3261  xeq1(k)$(sigmax(k) ne inf and x0(k) ne 0)..
3262     p(k)**(1+sigmax(k)) =e= gd(k)*pd(k)**(1+sigmax(k)) + ge(k)*pet(k)**(1+sigmax(k)) ;
3263   
3264  xeq2(k)$(sigmax(k) eq inf and x0(k) ne 0)..
3265     x(k) =e= xds(k) + xet(k) ;
3266   
3267  x.fx(k)$(x0(k) eq 0) = 0 ;
3268   
3269  * ----- Equation (T-12)
3270   
3271  xeeq1(k,r)$(sigmaz(k) ne inf and xe0(k,r) ne 0)..
3272     xe(k,r)*pet(k)**sigmaz(k) =e= gx(k,r)*xet(k)*pe(k,r)**sigmaz(k) ;
3273   
3274  xeeq2(k,r)$(sigmaz(k) eq inf and xe0(k,r) ne 0)..
3275     pe(k,r) =e= pet(k) ;
3276   
3277  xe.fx(k,r)$(xe0(k,r) eq 0) = 0 ;
3278   
3279  * ----- Equation (T-13)
3280   
3281  peteq1(k)$(sigmaz(k) ne inf and xet0(k) ne 0)..
3282     pet(k)**(1+sigmaz(k)) =e= sum(r,gx(k,r)*pe(k,r)**(1+sigmaz(k))) ;
3283   
3284  peteq2(k)$(sigmaz(k) eq inf and xet0(k) ne 0)..
3285     xet(k) =e= sum(r,xe(k,r)) ;
3286   
3287  pet.fx(k)$(xet0(k) eq 0) = 1 ;
3288   
3289  * ----- Export demand
3290   
3291  * ----- Equation (T-14)
3292   
3293  edeq1(k,r)$(etae(k,r) ne inf and ed0(k,r) ne 0)..
3294     ed(k,r)*wpe(k,r)**etae(k,r) =e= ae(k,r)*wpendx(k,r)**etae(k,r) ;
3295   
3296  edeq2(k,r)$(etae(k,r) eq inf and ed0(k,r) ne 0)..
3297     wpe(k,r) =e= wpendx(k,r) ;
3298   
3299  ed.fx(k,r)$(ed0(k,r) eq 0) = 0 ;
3300   
3301  * ----- Domestic trade margins
3302   
3303  * ----- Equation (M-1)
3304   
3305  ytmgeq1(k)$(xtmg0(k,"d") ne 0)..
3306     ytmg(k,"d") =e= tmg(k,"d")*pd(k)*xdd(k)  ;
3307   
3308  * ----- Equation (M-2)
3309   
3310  ytmgeq2(k)$(xtmg0(k,"m") ne 0)..
3311     ytmg(k,"m") =e= sum(r,tmg(k,"m")*pm(k,r)*xm(k,r)) ;
3312   
3313  * ----- Equation (M-3)
3314   
3315  ytmgeq3(k)$(xtmg0(k,"x") ne 0)..
3316     ytmg(k,"x") =e= sum(r,tmg(k,"x")*pe(k,r)*xe(k,r)) ;
3317   
3318  ytmg.fx(k,mg)$(xtmg0(k,mg) eq 0) = 0 ;
3319   
3320  * ----- Equation (M-4)
3321   
3322  xtmgeq(kk,mg)$(xtmg0(kk,mg) ne 0)..
3323     ptmg(kk,mg)*xtmg(kk,mg) =e= ytmg(kk,mg) ;
3324  xtmg.fx(kk,mg)$(xtmg0(kk,mg) eq 0) = 0 ;
3325   
3326  * ----- Equation (M-5)
3327   
3328  xamgeq(k,kk,mg)$(amg(k,kk,mg) ne 0)..
3329     xamg(k,kk,mg) =e= amg(k,kk,mg)*xtmg(kk,mg) ;
3330  xamg.fx(k,kk,mg)$(amg(k,kk,mg) eq 0) = 0 ;
3331   
3332  * ----- Equation (M-6)
3333   
3334  ptmgeq(kk,mg)$(xtmg0(kk,mg) ne 0)..
3335     ptmg(kk,mg) =e= sum(k,amg(k,kk,mg)*pa(k)) ;
3336  ptmg.fx(kk,mg)$(xtmg0(kk,mg) eq 0) = 1 ;
3337   
3338  * ----- Goods market equilibrium conditions
3339   
3340  * ----- Equation (E-1)
3341   
3342  pdeq(k)$(xdd0(k) ne 0)..
3343     xds(k) =e= xdd(k) ;
3344   
3345  pd.fx(k)$(xdd0(k) eq 0) = 1 ;
3346   
3347  * ----- Equation (E-2)
3348   
3349  wpeeq(k,r)$(ed0(k,r) ne 0)..
3350     ed(k,r) =e= xe(k,r) ;
3351   
3352  wpe.fx(k,r)$(ed0(k,r) eq 0) = 1 ;
3353   
3354  * ----- Macro closure
3355   
3356  * ----- Government accounts
3357   
3358  * ----- Equation (C-1)
3359   
3360  taryeq..
3361     tary =e= er*sum(k,sum(r,tmadj*tm(k,r)*wpm(k,r)*xm(k,r))) ;
3362   
3363  * ----- Equation (C-2)
3364   
3365  rtaryeq..
3366     plev*rtary =e= tary ;
3367   
3368  * ----- Equation (C-3)
3369   
3370  gyeq..
3371     gy =e= sum(i,tp(i)*px(i)*xp(i))
3372         +  sum(k,pa(k)*(sum(j,tcp(k,j)*xap(k,j)) + sum(h,tcc(k,h)*xac(k,h)) + sum(f,tcf(k,f)*xaf(k,f))))
3373         +  tary + sum(k,sum(r,te(k,r)*(1+tmg(k,"x"))*pe(k,r)*xe(k,r)))
3374         +  sum(lt,sum(i,tft(i,lt)*pt(i,lt)*td(i,lt)/(1+tft(i,lt))))
3375         +  sum(kt,sum(i,tfk(i,kt)*rent(i,kt)*kd(i,kt)/(1+tfk(i,kt))))
3376         +  sum(l,sum(i,tfl(i,l)*wage(i,l)*ld(i,l)/(1+tfl(i,l))))
3377         +  sum(e,kappac(e)*cy(e)) + taxadjh*sum(h,kappah(h)*yh(h)) + er*wtrg ;
3378   
3379  * ----- Equation (C-4)
3380   
3381  gexpeq..
3382     gexp =e= yf("gov") + plev*sum(h,gtrh(h)) + gtrw ;
3383   
3384  * ----- Equation (C-5)
3385   
3386  savgeq..
3387     savg =e= gy - gexp ;
3388   
3389  * ----- Equation (C-6)
3390   
3391  rsgeq..
3392     plev*rsg =e= savg ;
3393   
3394  * ----- Closure equations
3395   
3396  * ----- Equation (C-7)
3397   
3398  tieq..
3399     yf("inv") =e= sum(e,savc(e)) + sum(h,savh(h)) + savg + er*savf ;
3400  *   yf("inv") + yf("ginvs") + yf("inventory") =e= sum(e,savc(e)) + sum(h,savh(h)) + savg + er*savf ;
3401   
3402  * ----- Equation (C-8)
3403   
3404  xf.fx("gov") = xf0("gov") ;
3405   
3406  * ----- Equation (C-9)
3407   
3408  *xf.fx("ginvs") = xf0("ginvs") ;
3409   
3410  * ----- Equation (C-10)
3411   
3412  *xf.fx("trdmg") = xf0("trdmg") ;
3413   
3414  * ----- Equation (C-11)
3415   
3416  *xf.fx("inventory") = xf0("inventory") ;
3417   
3418  * ----- Equation (C-12)
3419   
3420  pleveq..
3421     plev*sum(k,pa0(k)*xa0(k)) =e= sum(k,pa(k)*xa0(k)) ;
3422   
3423  * ----- Factor markets
3424   
3425  * ----- Integrated labor market
3426   
3427  * ----- Equations (F-1)-(F-3) are dropped in the case of segmented labor markets
3428  *       and replaced with equations (L-1) through (L-7). The elasticity omegam
3429  *       drives the choice of labor market specification.
3430   
3431  * ----- Equation (F-1)
3432   
3433  lseq1(l)$(omegal(l,"Tot") ne inf and ls0(l,"Tot") ne 0 and omegam(l) eq inf)..
3434     ls(l,"Tot")*plev**omegal(l,"Tot") =e=
3435           als(l,"Tot")*ewage(l,"Tot")**omegal(l,"Tot") ;
3436   
3437  lseq2(l)$(omegal(l,"Tot") eq inf and ls0(l,"Tot") ne 0 and omegam(l) eq inf)..
3438     ewage(l,"tot") =e= plev*ewage0(l,"tot") ;
3439   
3440  ls.fx(l,"Tot")$(ls0(l,"Tot") eq 0 and omegam(l) eq inf) = 0 ;
3441   
3442  * ----- Equation (F-2)
3443   
3444  ewageq(l)$(ls0(l,"Tot") ne 0 and omegam(l) eq inf)..
3445     ls(l,"Tot") =e= sum(i,ld(i,l)) ;
3446   
3447  ewage.fx(l,"Tot")$(ls0(l,"Tot") eq 0 and omegam(l) eq inf) = 1 ;
3448   
3449  * ----- Equation (F-3)
3450   
3451  wageq(i,l)$(ld0(i,l) ne 0 and omegam(l) eq inf)..
3452     wage(i,l) =e= phil(i,l)*ewage(l,"Tot") ;
3453   
3454  wage.fx(i,l)$(ld0(i,l) eq 0) = 0 ;
3455   
3456  * ----- Segmented labor market
3457   
3458  * ----- Equation (L-1)
3459   
3460  migreq(l)$(omegam(l) ne inf)..
3461     migr(l)*awage(l,"rur")**omegam(l)
3462        =e= chim(l)*awage(l,"urb")**omegam(l) ;
3463   
3464  * ----- Equation (L-2)
3465   
3466  awageq(l,gz2)$(omegam(l) ne inf and ls0(l,gz2) ne 0)..
3467     awage(l,gz2)*sum(i$(mapg(i,gz2)),ld(i,l))
3468        =e= sum(i$(mapg(i,gz2)),wage(i,l)*ld(i,l)/(1+tfl(i,l))) ;
3469   
3470  awage.fx(l,gz2)$(ls0(l,gz2) eq 0) = 1 ;
3471   
3472  * ----- Equation (L-3)
3473   
3474  ewageq2(l,gz2)$(ls0(l,gz2) ne 0 and omegam(l) ne inf)..
3475     ls(l,gz2) =e= sum(i$(mapg(i,gz2)),ld(i,l)) ;
3476   
3477  ewage.fx(l,gz2)$(ls0(l,gz2) eq 0 and omegam(l) ne inf) = 1 ;
3478   
3479  * ----- Equation (L-4)
3480   
3481  wageq2(i,l,gz2)$(mapg(i,gz2) and ld0(i,l) ne 0 and omegam(l) ne inf)..
3482     wage(i,l) =e= phil(i,l)*ewage(l,gz2) ;
3483   
3484  wage.fx(i,l)$(ld0(i,l) eq 0 and omegam(l) ne inf) = 1 ;
3485   
3486  * ----- Equation (L-5)
3487   
3488  rlseq(l)$(omegam(l) ne inf)..
3489     ls(l,"rur") =e= lslag(l,"rur")*(1+glab(l,"rur")) - migr(l) ;
3490   
3491  * ----- Equation (L-6)
3492   
3493  ulseq(l)$(omegam(l) ne inf)..
3494     ls(l,"urb") =e= lslag(l,"urb")*(1+glab(l,"urb")) + migr(l) ;
3495   
3496  * ----- Equation (L-7)
3497   
3498  tlseq(l)$(omegam(l) ne inf)..
3499     ls(l,"tot") =e= sum(gz2,ls(l,gz2)) ;
3500   
3501  * ----- Capital markets
3502   
3503  * ----- Equation (F-4)
3504   
3505  tkseq1(kt)$(omegakt ne inf and tks0(kt) ne 0)..
3506     tks(kt)*pk**omegakt =e= akst(kt)*ksup*ptks(kt)**omegakt  ;
3507   
3508  tkseq2(kt)$(omegakt eq inf and tks0(kt) ne 0)..
3509     ptks(kt) =e= pk ;
3510   
3511  tks.fx(kt)$(tks0(kt) eq 0) = 0 ;
3512   
3513  * ----- Equation (F-5)
3514   
3515  pkeq1$(omegakt ne inf)..
3516     pk**(1+omegakt) =e= sum(kt,akst(kt)*ptks(kt)**(1+omegakt)) ;
3517   
3518  pkeq2$(omegakt eq inf)..
3519     ksup =e= sum(kt,tks(kt)) ;
3520   
3521  * ----- Equation (F-6)
3522   
3523  kseq1(i,kt)$(omegak(kt) ne inf and ks0(i,kt) ne 0)..
3524     ks(i,kt)*((1+tfk(i,kt))*ptks(kt))**omegak(kt) =e= aks(i,kt)*tks(kt)*rent(i,kt)**omegak(kt) ;
3525   
3526  kseq2(i,kt)$(omegak(kt) eq inf and ks0(i,kt) ne 0)..
3527     rent(i,kt) =e= ptks(kt) ;
3528   
3529  ks.fx(i,kt)$(ks0(i,kt) eq 0) = 0 ;
3530   
3531  * ----- Equation (F-7)
3532   
3533  ptkseq1(kt)$(omegak(kt) ne inf and tks0(kt) ne 0)..
3534     ptks(kt)**(1+omegak(kt)) =e= sum(i,aks(i,kt)*(rent(i,kt)/(1+tfk(i,kt)))**(1+omegak(kt))) ;
3535   
3536  ptkseq2(kt)$(omegak(kt) eq inf and tks0(kt) ne 0)..
3537     tks(kt) =e= sum(i,ks(i,kt)) ;
3538   
3539  ptks.fx(kt)$(tks0(kt) eq 0) = 1 ;
3540   
3541  * ----- Equation (F-8)
3542   
3543  renteq(i,kt)..
3544     ks(i,kt) =e= kd(i,kt) ;
3545   
3546  * ----- Land markets
3547   
3548  * ---- Top level CET
3549   
3550  * ----- Equation (F-9)
3551   
3552  ttseq1(lt)$(tts0(lt) ne 0 and omegatl ne inf)..
3553     tts(lt)*pland**omegatl =e= atts(lt)*land*ptts(lt)**omegatl ;
3554   
3555  ttseq2(lt)$(tts0(lt) ne 0 and omegatl eq inf)..
3556     ptts(lt) =e= pland ;
3557   
3558  tts.fx(lt)$(tts0(lt) eq 0) = 0 ;
3559   
3560  * ----- Equation (F-10)
3561   
3562  plandeq1$(land0 ne 0 and omegatl ne inf)..
3563     pland**(1+omegatl) =e= sum(lt,atts(lt)*ptts(lt)**(1+omegatl)) ;
3564   
3565  plandeq2$(land0 ne 0 and omegatl eq inf)..
3566     land =e= sum(lt,tts(lt)) ;
3567   
3568  pland.fx$(land0 eq 0) = pland0 ;
3569   
3570  * ---- Second level CET
3571   
3572  * ----- Equation (F-11)
3573   
3574  tseq1(i,lt)$(ts0(i,lt) ne 0 and omegat(lt) ne inf)..
3575     ts(i,lt)*((1+tft(i,lt))*ptts(lt))**omegat(lt) =e= ats(i,lt)*tts(lt)*pt(i,lt)**omegat(lt) ;
3576   
3577  tseq2(i,lt)$(ts0(i,lt) ne 0 and omegat(lt) eq inf)..
3578     pt(i,lt) =e= ptts(lt) ;
3579   
3580  ts.fx(i,lt)$(ts0(i,lt) eq 0) = 0 ;
3581   
3582  * ----- Equation (F-12)
3583   
3584  pttseq1(lt)$(tts0(lt) ne 0 and omegat(lt) ne inf)..
3585     ptts(lt)**(1+omegat(lt)) =e= sum(i,ats(i,lt)*(pt(i,lt)/(1+tft(i,lt)))**(1+omegat(lt))) ;
3586   
3587  pttseq2(lt)$(tts0(lt) ne 0 and omegat(lt) eq inf)..
3588     tts(lt) =e= sum(i,ts(i,lt)) ;
3589   
3590  ptts.fx(lt)$(tts0(lt) eq 0) = ptts0(lt) ;
3591   
3592  * ----- Equation (F-13)
3593   
3594  pteq(i,lt)$(ts0(i,lt) ne 0)..
3595     ts(i,lt) =e= td(i,lt) ;
3596   
3597  pt.fx(i,lt)$(ts0(i,lt) eq 0) = 1 ;
3598   
3599  * ----- Sector specific factor market
3600   
3601  * ----- Equation (F-14)
3602   
3603  rseq1(i)$(rs0(i) ne 0 and omegar(i) ne inf)..
3604     rs(i)*plev**omegar(i) =e= ars(i)*pr(i)**omegar(i) ;
3605   
3606  rseq2(i)$(rs0(i) ne 0 and omegar(i) eq inf)..
3607     pr(i) =e= plev*pr0(i) ;
3608   
3609  rs.fx(i)$(rs0(i) eq 0) = 0 ;
3610   
3611  * ----- Equation (F-15)
3612   
3613  preq(i)$(rs0(i) ne 0)..
3614     rd(i) =e= rs(i) ;
3615   
3616  pr.fx(i)$(rs0(i) eq 0) = pr0(i) ;
3617   
3618  * ----- Macro identities
3619   
3620  * ----- Equation (I-1)
3621   
3622  gdpmpeq..
3623     gdpmp =e= sum(k,sum(h,(1+tcc(k,h))*pa(k)*xac(k,h)))
3624            + sum(k,sum(f,(1+tcf(k,f))*pa(k)*xaf(k,f)))
3625            +  er*sum(k,sum(r,wpe(k,r)*xe(k,r)))
3626            -  er*sum(k,sum(r,wpm(k,r)*xm(k,r))) ;
3627   
3628  * ----- Equation (I-2)
3629   
3630  rgdpmpeq..
3631     rgdpmp =e= sum(k,sum(h,(1+tcc0(k,h))*pa0(k)*xac(k,h)))
3632             + sum(k,sum(f,(1+tcf0(k,f))*pa0(k)*xaf(k,f)))
3633             +  er0*sum(k,sum(r,wpe0(k,r)*xe(k,r)))
3634             -  er0*sum(k,sum(r,wpm0(k,r)*xm(k,r))) ;
3635   
3636  * ----- Equation (I-3)
3637   
3638  pgdpmpeq..
3639     pgdpmp*rgdpmp =e= gdpmp ;
3640   
3641  * ----- Equation (I-4)
3642   
3643  gdpfceq..
3644     gdpfc =e= sum(i,sum(l,wage(i,l)*ld(i,l)))
3645            +  sum(kt,sum(i,rent(i,kt)*kd(i,kt)))
3646            +  sum(i,pr(i)*rd(i))
3647            +  sum(lt,sum(i,pt(i,lt)*td(i,lt))) ;
3648   
3649  * ----- Equation (I-5)
3650   
3651  rgdpfceq..
3652     rgdpfc =e= sum(i,sum(l,wage0(i,l)*lambdal(i,l)*ld(i,l)))
3653             +  sum(kt,sum(i,rent0(i,kt)*lambdak(i,kt)*kd(i,kt)))
3654             +  sum(i,pr0(i)*lambdar(i)*rd(i))
3655             +  sum(lt,sum(i,pt0(i,lt)*lambdat(i,lt)*td(i,lt))) ;
3656   
3657  * ----- Equation (I-6)
3658   
3659  pgdpfceq..
3660     pgdpfc*rgdpfc =e= gdpfc ;
3661   
3662  * ----- Growth equations
3663   
3664  * ----- Equation (G-1)
3665   
3666  ggdpeq..
3667     rgdpmp =e= (1+ggdp)*rgdpmpLag ;
3668   
3669  * ----- Equation (G-2)
3670   
3671  lambdaleq(ip,l)..
3672     lambdal(ip,l)  =e= (1+gl+chil(ip,l))*lambdalLag(ip,l) ;
3673   
3674  lambdakeq(ip,kt)..
3675     lambdak(ip,kt) =e= (1+gl+chil(ip,kt))*lambdakLag(ip,kt);
3676   
3677  lambdateq(ip,lt)..
3678     lambdat(ip,lt) =e= (1+gl+chil(ip,lt))*lambdatLag(ip,lt) ;
3679   
3680  * ----- Equation (G-3)
3681   
3682  gegeq(k,j)$xap0(k,j)..
3683     xap(k,j) =e= geg(k,j)*xaplag(k,j) ;
3684   
3685  * ----- Equation (G-4)
3686   
3687  gceeq(k,h)..
3688     xac(k,h) =e= gce(k,h)*xaclag(k,h) ;
3689   
3690   
3691  model Model_dynamic /
3692     ewageq, wageq, lseq2, preq, rseq2,
3693     puskeq, pskleq, pktdeq, pttdeq, pkskeq, pkleq, pvaeq, pndeq, pxeq, ppeq,
3694     peq1, xpeq2, pmeq, pmteq, paeq, peeq, peteq1, xeq1, xdseq2, xeteq2, xeeq2,
3695     cpieq,
3696     ndeq, vaeq, xapeq, ttdeq, tdeq, kleq, rdeq, uskeq, kskeq, skleq, ktdeq, kdeq, ldeq1, ldeq2,
3697     lyeq, ryeq, kyeq, ktreeq, ktrheq, ktrweq, cyeq, savceq, ctrheq, ctrweq, tyeq,
3698     yheq, ydeq, htreq, htrheq, htrweq, xaceq, savheq,
3699     xafeq, pfeq, yfeq,
3700     xaeq, xddeq, xmteq, xmeq,
3701     peteq2, xpeq1, peq2, xeq2, xdseq1, xeteq1, xeeq1, edeq1, edeq2,
3702     xtmgeq, ytmgeq1, ytmgeq2, ytmgeq3, ptmgeq, xamgeq,
3703     taryeq, rtaryeq, gyeq, gexpeq, savgeq, rsgeq, tieq, pleveq,
3704     pdeq, wpeeq,
3705     lseq1, awageq, ewageq2, wageq2, migreq,
3706     rlseq, ulseq, tlseq,
3707     kseq1, kseq2, ptkseq1, ptkseq2, renteq,
3708     pkeq1, pkeq2, tkseq1, tkseq2,
3709     plandeq1, plandeq2, ttseq1, ttseq2, pttseq1, pttseq2,
3710     tseq1, tseq2, pteq, rseq1,
3711     gdpmpeq, rgdpmpeq, pgdpmpeq, gdpfceq, rgdpfceq, pgdpfceq,
3712     ggdpeq, lambdaleq,lambdakeq,lambdateq
3713     , gegeq, gceeq
3714  / ;
3715   
3716  Model_dynamic.holdfixed = 1 ;
3717   
3718  * ----- Load the dynamic definitions
3719   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Scen_2030.dat
3721  * -- Exogenous growth rates for selected variables
3722  * -- All rates expressed in integer percent
3723   
3724  * ----- Define the time scope
3725   
3726  set   t Time / 2008*2030 / ;
3727   
3728  parameter year(t) ;
3729  year(t) = ord(t) + 2007 ;
3730   
3731  set tr(t) ;
3732   
3733  if (1,
3734  tr(t) = yes ;
3735  else
3736  tr("2010") = yes ;
3737  tr("2015") = yes ;
3738  tr("2020") = yes ;
3739  tr("2025") = yes ;
3740  tr("2030") = yes ;
3741  ) ;
3742   
3743  parameter niter(t, sim) Iteration steps ; niter(t,sim) = 1 ;
3744  parameter iter3    Iteration counter /1/ ;
3745  parameter step (t) ; step(t) = 1 ;
3746   
3747  Table Scen(t,*) Exogenous growth scenario
3748   
3749              GDP         Pop    depr    LandR   NatR    Margin  AgProd
3750  2008        8.09        1.78   4.000   0.000   0.000   0.000   1.000
3751  2009        8.18        1.76   4.000   0.000   0.000   0.000   1.000
3752  2010        8.27        1.75   4.000   0.000   0.000   0.000   1.000
3753  2011        8.36        1.74   4.000   0.000   0.000   0.000   1.000
3754  2012        8.44        1.71   4.000   0.000   0.000   0.000   1.000
3755  2013        8.52        1.67   4.000   0.000   0.000   0.000   1.000
3756  2014        8.60        1.64   4.000   0.000   0.000   0.000   1.000
3757  2015        8.68        1.60   4.000   0.000   0.000   0.000   1.000
3758  2016        8.76        1.57   4.000   0.000   0.000   0.000   1.000
3759  2017        8.84        1.53   4.000   0.000   0.000   0.000   1.000
3760  2018        8.92        1.50   4.000   0.000   0.000   0.000   1.000
3761  2019        9.00        1.46   4.000   0.000   0.000   0.000   1.000
3762  2020        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3763  2021        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3764  2022        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3765  2023        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3766  2024        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3767  2025        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3768  2026        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3769  2027        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3770  2028        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3771  2029        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3772  2030        9.08        1.43   4.000   0.000   0.000   0.000   1.000
3773     ;
3774   
3775  scen(t,"gdp") = 5 ;
3776  scen(t,"pop") = 1.5 ;
3777  scen(t,"depr") = 5 ;
3778  scen(t,"agprod") = 2 ;
3779   
3780  parameter lScen(t,l) Exogenous growth scenario ;
3781  lscen(t,l) = 1.5 ;
3782   
      LabSk   LabUn 
      2002   1.779   1.779 
      2003   1.691   1.691 
      2004   1.608   1.608 
      2005   1.530   1.530 
      2006   1.530   1.530 
      2007   1.530   1.530 
      2008   1.530   1.530 
      2009   1.530   1.530 
      2010   1.530   1.530 
      2011   1.530   1.530 
      2012   1.530   1.530 
      2013   1.530   1.530 
      2014   1.530   1.530 
      2015   1.530   1.530 
      2016   1.530   1.530 
      2017   1.530   1.530 
      2018   1.530   1.530 
      2019   1.530   1.530 
      2020   1.530   1.530 
      2021   1.566   2.139 
      2022   1.376   2.310 
      2023   1.561   2.191 
      2024   1.131   2.180 
      2025   1.972   2.168 
      2026   1.427   2.154 
      2027   1.566   2.139 
      2028   1.376   2.310 
      2029   1.561   2.191 
      2030   1.131   2.180 
       
         ;
3817   
3818  parameter chilT(i,l,t) ;
3819   
3820  * ----- Baseline values
3821   
3822  parameter
3823     glT(t) Labor productivity growth
3824     xfT(f,t)        Final demand aggregate volume
3825     xafT(k,f,t)     Other final demand accounts
3826     wtrgT(t)
3827  ;
3828   
3829  * Re-calibrate tariffs
3830   
3831  parameter tbase (k);
3832  tbase(k) = 0 ;
3833  *tm.fx(k,r) = tbase(k) ;
3834   
3835   
3836  glT(t) = 0 ;
3837  xfT(f,t) = 0 ;
3838  xafT(k,f,t) = 0 ;
3839  wtrgT(t) = 0 ;
3840   
3841  scen(t,"gdp") = 3;
3842  scen(t,"depr") = 2;
3843  Scen(t,"AgProd") = 0 ;
3844  Scen(t,"pop") = 1 ;
3845  lscen(t,l) = 0 ;
3846  chil(manu,l) = 0.0;
3847   
3848  set et(i) Experimental sectors for productivity growth ;
3849   
3850  parameter exup / 1.2 / ;
3851   
3852  display "Results" ;
3853   
3854  * ----- Run the simulations
3855   
3856  loop(sim,
3857   
3858  Scen(t,"AgProd") = 0 ;
3859  ae(k,r) = ae0(k,r) ;
3860  chil(i,v) = 0.0;
3861   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/cal.gms
3863  * ------------------------------------------------------------------------------
3864  *
3865  * Initialize the variables
3866  *
3867  * ------------------------------------------------------------------------------
3868   
3869  * ----- Basic prices
3870   
3871  p0(k)       = 1 ;
3872  pa0(k)      = 1 ;
3873  pp0(i)      = 1 ;
3874  pd0(k)      = 1 ;
3875  pmt0(k)     = 1 ;
3876  wpm0(k,r)   = 1 ;
3877  pet0(k)     = 1 ;
3878  wpe0(k,r)   = 1 ;
3879   
3880  *wage0(i,l)  = 1 ;
3881  rent0(i,kt) = 1 ;
3882  pt0(i,lt)   = 1 ;
3883  pr0(i)      = 1 ;
3884   
3885  plev0       = 1 ;
3886  er0         = 1 ;
3887   
3888  * ------------------------------------------------------------------------------
3889  *
3890  * Initialize the trade block
3891  *
3892  * This must be the first step due to the possibility of the law of one price
3893  *
3894  * ------------------------------------------------------------------------------
3895  *
3896  * ----- Second level Armington
3897   
3898  tm0(k,r) = sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),wtf_pm0(r0,k0)-sam0(r0,k0))) ;
3899  xm0(k,r) = sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),sam0(r0,k0))/(wpm0(k,r)*er0)) ;
3900   
3901  tm0(k,r)$(xm0(k,r) ne 0) = tm0(k,r)/(er0*wpm0(k,r)*xm0(k,r)) ;
3902  pm0(k,r) = er0*wpm0(k,r)*(1+tm0(k,r)) ;
3903   
3904  * ----- Calculate pre-FOB price of exports
3905   
3906  xe0(k,r) = (sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),sam0(k0,r0))))/(er0*wpe0(k,r)) ;
3907  te0(k,r) = er0*wpe0(k,r)*xe0(k,r) - (sum(k0$(mapk(k0,k)),sum(r0$(mapr(r0,r)),wtf_pe0(r0,k0)))) ;
3908  te0(k,r)$(xe0(k,r) ne 0) = te0(k,r)/(er0*wpe0(k,r)*xe0(k,r) - te0(k,r)) ;
3909  pe0(k,r) = (er0*wpe0(k,r))/(1+te0(k,r)) ;
3910   
3911  * ----- Calculate the Armington aggregate
3912   
3913  xap0(k,j) = (sum(k0$(mapk(k0,k)),sum(j0$(mapi(j0,j)),sam0(k0,j0))))/pa0(k) ;
3914  xac0(k,h) = sum(h0$maph(h0,h),sum(i$mapik(i,k),sum(i0$mapi(i0,i),sam0(i0,h0)))) ;
3915  *display xac0 ;
3916  xac0(k,h) = (xac0(k,h)+sum(h0$maph(h0,h),sum(k0$mapk(k0,k),sam0(k0,h0))))/pa0(k) ;
3917  *display xac0 ;
3918  *xac0(k,h) = (sum(h0$(maph(h0,h)),sum(k0$(mapk(k0,k)),sam0(k0,h0))))/pa0(k) ;
3919  xaf0(k,f) = sum(k0$mapk(k0,k),sum(f0$mapf(f0,f),sam0(k0,f0)))/pa0(k) ;
3920  **xaf0("CEnergy","gov") = xaf0("CEnergy","gov") + .001 ;
3921  * ----- Calculate the indirect taxes on production and final demand
3922   
3923  tcp0(k,j) = sum(k0$(mapk(k0,k)),sum(j0$(mapi(j0,j)),patax0(k0,j0))) ;
3924  tcp0(k,j)$(xap0(k,j) ne 0) = tcp0(k,j)/(pa0(k)*xap0(k,j)) ;
3925   
3926  tcc0(k,h) = sum(h0$(maph(h0,h)),sum(k0$(mapk(k0,k)),fdtax0(k0,h0))) ;
3927  tcc0(k,h)$(xac0(k,h) ne 0) = tcc0(k,h)/(pa0(k)*xac0(k,h)) ;
3928   
3929  tcf0(k,f) = sum(f0$(mapf(f0,f)),sum(k0$(mapk(k0,k)),fdtax0(k0,f0))) ;
3930  tcf0(k,f)$(xaf0(k,f) ne 0) = tcf0(k,f)/(pa0(k)*xaf0(k,f)) ;
3931   
3932   
3933  * ----- Initialize the demand for domestic trade and transport services
3934  * !!!!! Assume it is only for one sector for the moment
3935   
3936  xamg0(k,kk,"d") = (sum(k0$mapk(k0,k),sum(kk0$mapk(kk0,kk),sam0(k0,kk0))))/pa0(k) ;
3937  ptmg0(kk,"d")   = 1 ;
3938  ytmg0(kk,"d")   = sum(k,pa0(k)*xamg0(k,kk,"d")) ;
3939  xtmg0(kk,"d")   = ytmg0(kk,"d")/ptmg0(kk,"d") ;
3940   
3941  xa0(k)  = sum(j,xap0(k,j)) + sum(h,xac0(k,h)) + sum(f,xaf0(k,f)) + sum(kk, xamg0(k,kk,"d")) ;
3942   
3943  * ----- Initialize production
3944   
3945  * ----- First, aggregate value added
3946   
3947  sam(s,ss)  = 0 ;
3948  sam(v,j)   = sum(v0$(mapv(v0,v)),sum(j0$(mapi(j0,j)),sam0(v0,j0))) ;
3949  vatax(v,j) = sum(v0$(mapv(v0,v)),sum(j0$(mapi(j0,j)),vatax0(v0,j0))) ;
3950   
3951  * ----- Production will be divided by the relevant price below,
3952  *       after figuring whether the law of one price holds
3953   
3954  ld0(j,l)  = sum(l0$(mapv(l0,l)),sum(j0$(mapi(j0,j)),labvol0(j0,l0))) ;
3955  wage0(j,l) = 1 ;
3956  wage0(j,l)$(ld0(j,l) ne 0) = sam(l,j)/ld0(j,l) ;
3957  *display wage0 ;
3958  *ld0(j,l)  = sam(l,j)/wage0(j,l) ;
3959  tfl0(j,l)$(ld0(j,l) gt 0) = vatax(l,j)/(wage0(j,l)*ld0(j,l) - vatax(l,j)) ;
3960   
3961  kd0(j,kt) = sam(kt,j)/rent0(j,kt) ;
3962  tfk0(j,kt)$(kd0(j,kt) gt 0) = vatax(kt,j)/(rent0(j,kt)*kd0(j,kt) - vatax(kt,j)) ;
3963   
3964  td0(j,lt) = sam(lt,j)/pt0(j,lt) ;
3965  tft0(j,lt)$(td0(j,lt) gt 0) = vatax(lt,j)/(pt0(j,lt)*td0(j,lt) - vatax(lt,j)) ;
3966   
3967  rd0(j) = sum(nr,sam(nr,j))/pr0(j) ;
3968  tfr0(j)$(rd0(j) gt 0) = sum(nr,vatax(nr,j)/(pr0(j)*rd0(j) - vatax(nr,j))) ;
3969   
3970  *display tfk0, tft0, tfr0 ;
3971   
3972  *tp0(j)    = sum(j0$(mapi(j0,j)),sam0("prdtx",j0)) ;
3973  tp0(j) = 0 ;
3974   
3975  xp0(j)    = sum(k,(1+tcp0(k,j))*pa0(k)*xap0(k,j)) + sum(l,wage0(j,l)*ld0(j,l))
3976            + sum(kt,rent0(j,kt)*kd0(j,kt)) + sum(lt,pt0(j,lt)*td0(j,lt)) + pr0(j)*rd0(j) + tp0(j) ;
3977   
3978  tp0(j)    = tp0(j)/(xp0(j) - tp0(j)) ;
3979   
3980  * ----- Initialize aggregate commodity supply and calibrate
3981   
3982  x0(k)     = sum(i$mapik(i,k),xp0(i)) ;
3983   
3984  *display xp0, x0 ;
3985   
3986  * ----- Calculate the commodity-specific trade margin
3987   
3988  tmg0(kk,"d") = ytmg0(kk,"d")/(x0(kk) + sum(r,pm0(kk,r)*xm0(kk,r))) ;
3989  tmg0(kk,mg)  = tmg0(kk,"d") ;
3990   
3991  * ----- Calculate aggregate imports
3992   
3993  xmt0(k) = sum(r,pm0(k,r)*(1+tmg0(k,"m"))*xm0(k,r))/pmt0(k) ;
3994   
3995  * ----- The export price should now reflect the producer price, i.e. net of the margin
3996   
3997  pe0(k,r) = pe0(k,r)/(1+tmg0(k,"x")) ;
3998   
3999  sigmax(k) = KeyComm(k,"sigmax") ;
4000  sigmaz(k) = KeyComm(k,"sigmaz") ;
4001  sigmac(k) = KeyComm(k,"sigmac") ;
4002  sigmac(k)$(sigmac(k) eq 1) = 1.01 ;
4003   
4004  * !!!! Re-base pet0 if the law of one price holds
4005  * !!!! This would pose a problem if there are multiple trading partners with destination
4006  *      specific export tariffs. In such a case, it would be better to use a finite
4007  *      transformation elasticity, even if high.
4008   
4009  loop(k$(sigmaz(k) eq inf), loop(r$(ord(r) eq 1), pet0(k) = pe0(k,r) ; ) ; ) ;
4010   
4011  * Re-base pd0 if the law of one-price-holds
4012   
4013  pd0(k)$(sigmax(k) eq inf) = pet0(k) ;
4014  p0(k)$(sigmax(k) eq inf)  = pet0(k) ;
4015  loop(k$(sigmac(k) eq inf),
4016     loop(i$mapik(i,k),
4017        pp0(i) = p0(k) ;
4018     ) ;
4019  ) ;
4020   
4021  * Re-base output
4022   
4023  xp0(i) = xp0(i)/pp0(i) ;
4024  x0(k)  = x0(k)/p0(k) ;
4025   
4026  * ------------------------------------------------------------------------------
4027  *
4028  * Initialize and calibrate the production block
4029  *
4030  * ------------------------------------------------------------------------------
4031   
4032  * ----- Initialize prices and productivity parameters
4033   
4034  lambdal0(i,l)  = 1 ;
4035  lambdak0(i,kt) = 1 ;
4036  lambdat0(i,lt) = 1 ;
4037  lambdar0(i)    = 1 ;
4038   
4039  ac(i,k)   = 0 ;
4040   
4041  loop(k,
4042     if (sigmac(k) ne inf,
4043        loop(i$mapik(i,k),
4044           ac(i,k) = (xp0(i)/x0(k))*(pp0(i)/p0(k))**sigmac(k) ;
4045        ) ;
4046     ) ;
4047  ) ;
4048   
4049  * ----- Calibrate the unskilled labor bundle
4050   
4051  pusk0(j)  = 1 ;
4052  usk0(j)   = sum(ul,wage0(j,ul)*ld0(j,ul))/pusk0(j) ;
4053  sigmau(j) = KeySect(j,"sigmau") ;
4054  sigmau(j)$(sigmau(j) eq 1) = 1.01 ;
4055  al(j,ul)$(ld0(j,ul) ne 0) = (ld0(j,ul)/usk0(j))*((wage0(j,ul)/pusk0(j))**sigmau(j))*(lambdal0(j,ul)**(1-sigmau(j))) ;
4056   
4057  * ----- Calibrate the skilled labor bundle
4058   
4059  pskl0(j)  = 1 ;
4060  skl0(j)   = sum(sl,wage0(j,sl)*ld0(j,sl))/pskl0(j) ;
4061  sigmas(j) = KeySect(j,"sigmas") ;
4062  sigmas(j)$(sigmas(j) eq 1) = 1.01 ;
4063  al(j,sl)$(ld0(j,sl) ne 0) = (ld0(j,sl)/skl0(j))*((wage0(j,sl)/pskl0(j))**sigmas(j))*(lambdal0(j,sl)**(1-sigmas(j))) ;
4064   
4065  * ----- Calibrate the aggregate capital bundle
4066   
4067  pktd0(j) = 1 ;
4068  ktd0(j)  = sum(kt, rent0(j,kt)*kd0(j,kt))/pktd0(j) ;
4069  sigmak(j) = KeySect(j,"sigmak") ;
4070  sigmak(j)$(sigmak(j) eq 1) = 1.01 ;
4071  ak(j,kt)$(kd0(j,kt) ne 0) = (kd0(j,kt)/ktd0(j))*((rent0(j,kt)/pktd0(j))**sigmak(j))*(lambdak0(j,kt)**(1-sigmak(j))) ;
4072   
4073  * ----- Calibrate the aggregate land bundle
4074   
4075  pttd0(j) = 1 ;
4076  ttd0(j)  = sum(lt, pt0(j,lt)*td0(j,lt))/pttd0(j) ;
4077  sigmat(j) = KeySect(j,"sigmat") ;
4078  sigmat(j)$(sigmat(j) eq 1) = 1.01 ;
4079  at(j,lt)$(td0(j,lt) ne 0) = (td0(j,lt)/ttd0(j))*((pt0(j,lt)/pttd0(j))**sigmat(j))*(lambdat0(j,lt)**(1-sigmat(j))) ;
4080   
4081  * ----- Calibrate the KSK bundle
4082   
4083  pksk0(j)  = 1 ;
4084  ksk0(j)   = (pktd0(j)*ktd0(j) + pskl0(j)*skl0(j))/pksk0(j) ;
4085  sigmaks(j) = KeySect(j,"sigmaks") ;
4086  sigmaks(j)$(sigmaks(j) eq 1) = 1.01 ;
4087  as(j)$(skl0(j) ne 0)  = (skl0(j)/ksk0(j))*((pskl0(j)/pksk0(j))**sigmaks(j)) ;
4088  akt(j)$(ktd0(j) ne 0) = (ktd0(j)/ksk0(j))*((pktd0(j)/pksk0(j))**sigmaks(j)) ;
4089   
4090  * ----- Calibrate the KL bundle
4091   
4092  pkl0(j)  = 1 ;
4093  kl0(j)   = (pusk0(j)*usk0(j) + pksk0(j)*ksk0(j))/pkl0(j) ;
4094  sigmakl(j) = KeySect(j,"sigmakl") ;
4095  sigmakl(j)$(sigmakl(j) eq 1) = 1.01 ;
4096  au(j)$(usk0(j) ne 0)  = (usk0(j)/kl0(j))*((pusk0(j)/pkl0(j))**sigmakl(j)) ;
4097  aksk(j)$(kl0(j) ne 0) = (ksk0(j)/kl0(j))*((pksk0(j)/pkl0(j))**sigmakl(j)) ;
4098   
4099  * ----- Calibrate the value added bundle
4100   
4101  pva0(j)   = 1 ;
4102  va0(j)    = (pkl0(j)*kl0(j) + pr0(j)*rd0(j) + pttd0(j)*ttd0(j))/pva0(j) ;
4103  sigmav(j) = KeySect(j,"sigmav") ;
4104  sigmav(j)$(sigmav(j) eq 1) = 1.01 ;
4105  akl(j)$(kl0(j) ne 0)  = (kl0(j)/va0(j))*((pkl0(j)/pva0(j))**sigmav(j)) ;
4106  att(j)$(ttd0(j) ne 0) = (ttd0(j)/va0(j))*((pttd0(j)/pva0(j))**sigmav(j)) ;
4107  ar(j)$(rd0(j) ne 0)  = (rd0(j)/va0(j))*((pr0(j)/pva0(j))**sigmav(j)) ;
4108   
4109  * ----- Calibrate the top level bundle
4110   
4111  px0(j)    = pp0(j)/(1+tp0(j)) ;
4112  pnd0(j)   = 1 ;
4113  nd0(j)    = (sum(k,(1+tcp0(k,j))*pa0(k)*xap0(k,j)))/pnd0(j) ;
4114  sigmap(j) = KeySect(j,"sigmap") ;
4115  sigmap(j)$(sigmap(j) eq 1) = 1.01 ;
4116  ava(j)    = (va0(j)/xp0(j))*((pva0(j)/px0(j))**sigmap(j)) ;
4117  and(j)    = (nd0(j)/xp0(j))*((pnd0(j)/px0(j))**sigmap(j)) ;
4118   
4119  * ----- Calibrate the IO coefficients
4120   
4121  a(k,j)$(nd0(j) ne 0) = xap0(k,j)/nd0(j) ;
4122   
4123  * ------------------------------------------------------------------------------
4124  *
4125  * Initialize and calibrate the demand block
4126  *
4127  * ------------------------------------------------------------------------------
4128   
4129  * ---- Initialize household variables
4130   
4131  htrh0(h,hh) = sum(h0$(maph(h0,h)),sum(hh0$(maph(hh0,hh)),sam0(h0,hh0))) ;
4132  kappah0(h)  = sum(h0$(maph(h0,h)),sam0("dirtx",h0)) ;
4133  taxadjh0    = 1 ;
4134  htrw0(h)    = sum(h0$(maph(h0,h)),sam0("row",h0)) ;
4135  savh0(h)    = sum(h0$(maph(h0,h)),sam0("inv",h0)) ;
4136  *savh0(h)    = sum(h0$(maph(h0,h)),sam0("inv",h0) + sam0("depry",h0)) ;
4137   
4138  htr0(h)     = sum(hh,htrh0(hh,h)) + htrw0(h) ;
4139   
4140  yh0(h)      = sum(k,(1+tcc0(k,h))*pa0(k)*xac0(k,h)) + htr0(h) + kappah0(h) + savh0(h) ;
4141  yd0(h)      = sum(k,(1+tcc0(k,h))*pa0(k)*xac0(k,h)) + savh0(h) ;
4142   
4143  kappah0(h) = kappah0(h)/yh0(h) ;
4144  asav(h)    = savh0(h)/yd0(h) ;
4145   
4146  *display yh0, kappah0, yd0 ;
4147   
4148  ahtr(h) = htr0(h)/((1-kappah0(h))*yh0(h)) ;
4149  ahtrh(h,hh)$(htr0(hh) ne 0) = htrh0(h,hh)/htr0(hh) ;
4150  ahtrw(h)$(htr0(h) ne 0)     = htrw0(h)/htr0(h) ;
4151   
4152  * ----- Calculate the maximum share in domestic transfers to guarantee
4153  *       that the shares add up to 1
4154   
4155  loop(h,
4156     delta = sum(hh, ahtrh(hh,h)) + ahtrw(h) ;
4157   
4158     work = -inf ;
4159     if (sum(hh,ahtrh(hh,h)) ne 0,
4160        loop(hh,
4161           if (ahtrh(hh,h) gt work,
4162              work = ahtrh(hh,h) ;
4163              index = ord(hh) ;
4164           ) ;
4165        ) ;
4166     ) ;
4167     loop(hh$(ord(hh) eq index), ahtrh(hh,h) = ahtrh(hh,h) + (1-delta) ; ) ;
4168  ) ;
4169   
4170  * ----- Calibrate the ELES system
4171   
4172  eta(k,h)$xac0(k,h) = sum(h0$maph(h0,h),sum(k0$mapk(k0,k),eta0(k0,h0)*(xac0(k,h)*(1+tcc0(k,h))*pa0(k))))/
4173             sum(h0$maph(h0,h),sum(k0$mapk(k0,k),(xac0(k,h)*(1+tcc0(k,h))*pa0(k))));
4174   
4175  *display eta ;
4176  if(0,
4177   
4178  *  Use the standard ELES calibration
4179   
4180     thetav.l(k,h) = 0.1*xac0(k,h) ;
4181     share0(k,h)   = (1+tcc0(k,h))*pa0(k)*xac0(k,h)/yd0(h) ;
4182     mu(k,h)       = eta(k,h)*share0(k,h) ;
4183     mus(h)  = 1 - sum(k,mu(k,h)) ;
4184     etas(h)$(savh0(h) ne 0) = mus(h)/(savh0(h)/yd0(h)) ;
4185  *   display mus, etas ;
4186   
4187     solve eles using mcp ;
4188   
4189     theta(k,h) = thetav.l(k,h) ;
4190   
4191  else
4192   
4193  *  Use the Frisch parameter technique
4194   
4195  *  Adjust the eta parameters so that the normalization conditions holds
4196   
4197     eta(k,h)$(xac0(k,h) eq 0) = 0 ;
4198   
4199     share0(k,h)   = (1+tcc0(k,h))*pa0(k)*xac0(k,h)/(yd0(h)-savh0(h)) ;
4200   
4201  *   display eta ;
4202   
4203     eta(k,h) = eta(k,h) + share0(k,h)*(1-sum(kk,share0(kk,h)*eta(kk,h)))/sum(kk,share0(kk,h)*share0(kk,h)) ;
4204   
4205  *   display eta ;
4206   
4207  *  Calibrate mu and theta
4208   
4209     mu(k,h)    = eta(k,h)*share0(k,h) ;
4210     theta(k,h) = xac0(k,h)*(1+eta(k,h)/frisch(h)) ;
4211   
4212     loop(h, work = 1000000*(sum(k,eta(k,h)*share0(k,h))) ;
4213  *  display work
4214  ) ;
4215   
4216  *   display theta ;
4217  ) ;
4218   
4219  cpi0(h)      = 1 ;
4220   
4221  * ----- Final demand expenditures
4222   
4223  pf0(f) = 1 ;
4224  xf0(f) = (sum(k,(1+tcf0(k,f))*pa0(k)*xaf0(k,f)))/pf0(f) ;
4225  yf0(f) = pf0(f)*xf0(f) ;
4226   
4227  sigmaf(f)$(sigmaf(f) eq 1) = 1.01 ;
4228  af(k,f)$(xf0(f) ne 0) = (xaf0(k,f)/xf0(f))*((1+tcf0(k,f))*pa0(k)/pf0(f))**sigmaf(f) ;
4229   
4230   
4231  * ----- Domestic demand for domestic production
4232   
4233  xdd0(k) = (pa0(k)*xa0(k) - pmt0(k)*xmt0(k))/((1+tmg0(k,"d"))*pd0(k)) ;
4234   
4235  * ----- Calibrate the second level Armington function
4236   
4237  sigmaw(k) = KeyComm(k,"sigmaw") ;
4238  sigmaw(k)$(sigmaw(k) eq 1) = 1.01 ;
4239   
4240  aw(k,r)$(xmt0(k) ne 0) = (xm0(k,r)/xmt0(k))*(pm0(k,r)*(1+tmg0(k,"m"))/pmt0(k))**sigmaw(k) ;
4241   
4242  * ----- Calibrate the first level Armington demand function
4243   
4244  sigmam(k) = KeyComm(k,"sigmam") ;
4245  sigmam(k)$(sigmam(k) eq 1) = 1.01 ;
4246   
4247  ad(k) = (xdd0(k)/xa0(k))*(pd0(k)*(1+tmg0(k,"d"))/pa0(k))**sigmam(k) ;
4248  am(k) = (xmt0(k)/xa0(k))*(pmt0(k)/pa0(k))**sigmam(k) ;
4249  *display am ;
4250   
4251  * ----- Calibrate the export system
4252   
4253  xds0(k)  = xdd0(k) ;
4254   
4255  xet0(k) = sum(r,pe0(k,r)*xe0(k,r))/pet0(k) ;
4256   
4257  * ----- Top level CET
4258   
4259  loop(k$(x0(k) ne 0),
4260     if (sigmax(k) ne inf,
4261        gd(k) = (xds0(k)/x0(k))*(p0(k)/pd0(k))**sigmax(k) ;
4262        ge(k) = (xet0(k)/x0(k))*(p0(k)/pet0(k))**sigmax(k) ;
4263     ) ;
4264  ) ;
4265   
4266  * ----- Second level CET
4267   
4268  loop(k$(xet0(k) ne 0),
4269     if (sigmaz(k) ne inf,
4270        gx(k,r) = (xe0(k,r)/xet0(k))*(pet0(k)/pe0(k,r))**sigmaz(k) ;
4271     ) ;
4272  ) ;
4273   
4274  * ----- Export demand
4275   
4276  ed0(k,r) = xe0(k,r) ;
4277  wpendx0(k,r) = wpe0(k,r) ;
4278  * !!!!! Data entry should be split by region of destination
4279  etae(k,r) = KeyComm(k,"etae") ;
4280  ae(k,r)$(etae(k,r) ne inf) = ed0(k,r)*(wpe0(k,r)/wpendx0(k,r))**etae(k,r) ;
4281  ae0(k,r) = ae(k,r) ;
4282   
4283  * ----- Finish updating margin variables
4284   
4285  *display xamg0 ;
4286   
4287  amg(k,kk,mg)$(xamg0(k,kk,"d") ne 0) = xamg0(k,kk,"d")/xtmg0(kk,"d") ;
4288   
4289  ptmg0(k,mg)  = 1 ;
4290  ytmg0(k,"d") = pd0(k)*tmg0(k,"d")*xdd0(k) ;
4291  ytmg0(k,"m") = sum(r,pm0(k,r)*tmg0(k,"m")*xm0(k,r)) ;
4292  ytmg0(k,"x") = sum(r,pe0(k,r)*tmg0(k,"x")*xe0(k,r)) ;
4293  xtmg0(k,mg)  = ytmg0(k,mg)/ptmg0(k,mg) ;
4294  xamg0(k,kk,mg) = amg(k,kk,mg)*xtmg0(kk,mg) ;
4295   
4296  *display xamg0 ;
4297   
4298  * ------------------------------------------------------------------------------
4299  *
4300  * Initialize and calibrate income distribution
4301  *
4302  * ------------------------------------------------------------------------------
4303   
4304  * ----- Capital income
4305   
4306  sam(e,v)      = sum(e0$(mape(e0,e)),sum(v0$(mapv(v0,v)),sam0(e0,v0))) ;
4307  sam(h,v)      = sum(h0$(maph(h0,h)),sum(v0$(mapv(v0,v)),sam0(h0,v0))) ;
4308  sam("row",v)  = sum(v0$(mapv(v0,v)),sam0("row",v0)) ;
4309   
4310  ky0(kt)   = sum(i,rent0(i,kt)*kd0(i,kt)/(1+tfk0(i,kt))) ;
4311   
4312  ktre0(kt) = sum(e,sam(e,kt)) ;
4313  ktrh0(kt) = sum(h,sam(h,kt)) ;
4314  ktrw0(kt) = sam("row",kt) ;
4315   
4316  chk1 = sum(kt, ktre0(kt)+ktrh0(kt)+ktrw0(kt)) ;
4317  *display chk1, ky0 ;
4318   
      sam(e,kt) = sam(e,kt)*ky0(kt)/chk1 ;
      sam(h,kt) = sam(h,kt)*ky0(kt)/chk1 ;
      sam("row",kt) = sam("row",kt)*ky0(kt)/chk1 ;
      ktre0(kt) = sum(e,sam(e,kt)) ;
      ktrh0(kt) = sum(h,sam(h,kt)) ;
      ktrw0(kt) = sam("row",kt) ;
4327   
4328  * ----- Calibrate the aggregate shares
4329   
4330  xkht(kt)  = ktrh0(kt)/ky0(kt) ;
4331  xket(kt)  = ktre0(kt)/ky0(kt) ;
4332  xkwt(kt)  = 1 - xkht(kt) - xket(kt) ;
4333   
4334  * ----- Calibrate the sub-aggregate shares
4335   
4336  xkh(kt,h)$(ktrh0(kt) ne 0) = sam(h,kt)/ktrh0(kt) ;
4337  xke(kt,e)$(ktre0(kt) ne 0) = sam(e,kt)/ktre0(kt) ;
4338  xkw(kt)$(ktrw0(kt) ne 0)   = sam("row",kt)/ktrw0(kt) ;
4339   
4340  chk1 = sum(kt,sum(h, xkh(kt,h))) ;
4341  *display chk1 ;
4342  chk1 = sum(kt,sum(e, xke(kt,e))) ;
4343  *display chk1 ;
4344  chk1 = sum(kt,xkw(kt)) ;
4345  *display chk1 ;
4346   
4347  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
4348   
4349  loop(kt,
4350     if (ktrh0(kt) ne 0,
4351        delta = sum(h, xkh(kt,h)) ;
4352   
4353        if (sum(h, xkh(kt,h)) ne 0,
4354           work = -inf ;
4355           loop(h,
4356              if (xkh(kt,h) gt work,
4357                 work = xkh(kt,h) ;
4358                 index = ord(h) ;
4359              ) ;
4360           ) ;
4361           loop(h$(ord(h) eq index), xkh(kt,h) = xkh(kt,h) + (1-delta) ; ) ;
4362        ) ;
4363     ) ;
4364   
4365     if (ktre0(kt) ne 0,
4366        delta = sum(e, xke(kt,e)) ;
4367   
4368        work = -inf ;
4369        loop(e,
4370           if (xke(kt,e) gt work,
4371              work = xke(kt,e) ;
4372              index = ord(e) ;
4373           ) ;
4374        ) ;
4375        loop(e$(ord(e) eq index), xke(kt,e) = xke(kt,e) + (1-delta) ; ) ;
4376     ) ;
4377   
4378  ) ;
4379   
4380  * ----- Land income
4381   
4382  ty0(lt)   = sum(i,pt0(i,lt)*td0(i,lt)/(1+tft0(i,lt))) ;
4383   
4384  * ----- Calibrate the sub-aggregate shares
4385   
4386  xth(lt,h)$(ty0(lt) ne 0) = sam(h,lt)/ty0(lt) ;
4387   
4388  chk1 = sum(lt,sum(h,xth(lt,h))) ;
4389   
4390  *display chk1 ;
4391   
4392  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
4393   
4394  loop(lt,
4395     if (ty0(lt) ne 0,
4396        delta = sum(h, xth(lt,h)) ;
4397   
4398        work = -inf ;
4399        loop(h,
4400           if (xth(lt,h) gt work,
4401              work = xth(lt,h) ;
4402              index = ord(h) ;
4403           ) ;
4404        ) ;
4405        loop(h$(ord(h) eq index), xth(lt,h) = xth(lt,h) + (1-delta) ; ) ;
4406     ) ;
4407  ) ;
4408   
4409  chk1 = sum(lt,sum(h,xth(lt,h))) ;
4410   
4411  *display chk1 ;
4412   
4413  * ----- Labor income
4414   
4415  ly0(l)   = sum(i,wage0(i,l)*ld0(i,l)/(1+tfl0(i,l))) ;
4416   
4417  xlh(h,l) = sam(h,l)/ly0(l) ;
4418   
4419  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
4420   
4421  loop(l,
4422     delta = sum(h, xlh(h,l)) ;
4423   
4424     work = -inf ;
4425     loop(h,
4426        if (xlh(h,l) gt work,
4427           work = xlh(h,l) ;
4428           index = ord(h) ;
4429        ) ;
4430     ) ;
4431     loop(h$(ord(h) eq index), xlh(h,l) = xlh(h,l) + (1-delta) ; ) ;
4432   
4433     delta = sum(h, xlh(h,l)) ;
4434  ) ;
4435   
4436  * ----- Income from sector specific resource
4437   
4438  ry0      = sum(i,pr0(i)*rd0(i)/(1+tfr0(i))) ;
4439   
4440  xrh(h)$(ry0 ne 0) = sam(h,"natrs")/ry0 ;
4441   
4442  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
4443   
4444  if(ry0 ne 0,
4445     delta = sum(h, xrh(h)) ;
4446   
4447     work = -inf ;
4448     loop(h,
4449        if (xrh(h) gt work,
4450           work = xrh(h) ;
4451           index = ord(h) ;
4452        ) ;
4453     ) ;
4454     loop(h$(ord(h) eq index), xrh(h) = xrh(h) + (1-delta) ; ) ;
4455   
4456  ) ;
4457   
4458  * ----- Corporate income
4459   
4460  cy0(e)     = sum(kt,xke(kt,e)*ktre0(kt)) ;
4461  taxadjc0  = 1 ;
4462  kappac0(e)$(cy0(e) ne 0) = sum(e0$mape(e0,e),sam0("dirtx",e0)-sam0(e0,"gov"))/cy0(e) ;
4463   
4464  savc0(e)                   = sum(e0$mape(e0,e),sam0("inv",e0)) ;
4465  csavrate0(e)$(cy0(e) ne 0) = savc0(e)/((1-kappac0(e))*cy0(e)) ;
4466   
4467  ctrh0(e) = sum(h0,sum(e0$mape(e0,e),sam0(h0,e0))) ;
4468  ctrw0(e) = sum(r0,sum(e0$mape(e0,e),sam0(r0,e0)-sam0(e0,r0))) ;
4469   
4470  xcht(e)$(cy0(e) ne 0) = ctrh0(e)/((1-kappac0(e))*cy0(e)) ;
4471  xcwt(e)$(cy0(e) ne 0) = 1 - csavrate0(e) - xcht(e) ;
4472   
4473  xch(e,h)$(ctrh0(e) ne 0) = sum(h0$maph(h0,h),sum(e0$mape(e0,e),sam0(h0,e0)))/ctrh0(e) ;
4474  xcw(e)$(ctrw0(e) ne 0) = sum(e0$mape(e0,e),sam0("row",e0)-sam0(e0,"row"))/ctrw0(e) ;
4475   
4476  * ---- Make sure the shares sum to 1 by assigning any discrepancy to the highest share
4477   
4478  loop(e,
4479   
4480     delta = sum(h, xch(e,h)) ;
4481     work = -inf ;
4482     loop(h,
4483        if (xch(e,h) gt work,
4484           work = xch(e,h) ;
4485           index = ord(h) ;
4486        ) ;
4487     ) ;
4488     loop(h$(ord(h) eq index), xch(e,h) = xch(e,h) + (1-delta) ; ) ;
4489   
4490  ) ;
4491   
4492  * ----- Other sources of income
4493   
4494  gtrh0(h) = sum(h0$(maph(h0,h)),sam0(h0,"gov")) ;
4495  wtrh0(h) = sum(h0$(maph(h0,h)),sam0(h0,"row"))/er0 ;
4496   
4497  * ------------------------------------------------------------------------------
4498  *
4499  * Initialize and calibrate government accounts
4500  *
4501  * ------------------------------------------------------------------------------
4502   
4503  wtrg0 = sam0("gov","row")/er0 ;
4504   
4505  tmadj0 = 1 ;
4506  tary0  = sum(k,sum(r,tmadj0*tm0(k,r)*er0*wpm0(k,r)*xm0(k,r))) ;
4507  rtary0 = tary0 ;
4508   
4509  gy0 = sum(i,tp0(i)*px0(i)*xp0(i))
4510      + sum(k,pa0(k)*(sum(j,tcp0(k,j)*xap0(k,j))+sum(h,tcc0(k,h)*xac0(k,h))+sum(f,tcf0(k,f)*xaf0(k,f))))
4511      + tary0 + sum(k,sum(r,te0(k,r)*(1+tmg0(k,"x"))*pe0(k,r)*xe0(k,r)))
4512      + sum(lt,sum(i,tft0(i,lt)*pt0(i,lt)*td0(i,lt)/(1+tft0(i,lt))))
4513      + sum(kt,sum(i,tfk0(i,kt)*rent0(i,kt)*kd0(i,kt)/(1+tfk0(i,kt))))
4514      + sum(l,sum(i,tfl0(i,l)*wage0(i,l)*ld0(i,l)/(1+tfl0(i,l))))
4515      + sum(i,tfr0(i)*pr0(i)*rd0(i)/(1+tfr0(i)))
4516      + sum(e,kappac0(e)*cy0(e)) + sum(h,kappah0(h)*yh0(h)) + er0*wtrg0 ;
4517   
4518  gtrw0 = sam0("row","gov")/er0 ;
4519  gexp0 = yf0("gov") + sum(h,gtrh0(h)) + gtrw0 ;
4520   
4521  *display gy0, gexp0, te0 ;
4522  savg0 = gy0 - gexp0 ;
4523  rsg0  = savg0/plev0 ;
4524   
4525  * ------------------------------------------------------------------------------
4526  *
4527  * Initialize and calibrate factor markets
4528  *
4529  * ------------------------------------------------------------------------------
4530   
4531  * ----- Labor markets
4532   
4533  ls0(l,"Tot") = sum(i,ld0(i,l)) ;
4534  ewage0(l,"Tot")$(omegam(l) eq inf) = sum(i,ld0(i,l)*wage0(i,l))/ls0(l,"Tot") ;
4535  phil(i,l)$(omegam(l) eq inf) = wage0(i,l)/ewage0(l,"Tot") ;
4536   
4537  als(l,"Tot")$(omegam(l) eq inf) = ls0(l,"Tot")*(plev0/ewage0(l,"Tot"))**omegal(l,"Tot") ;
4538   
4539  loop(l$(omegam(l) ne inf),
4540     awage0(l,gz2) = sum(i$mapg(i,gz2),wage0(i,l)*ld0(i,l)/(1+tfl0(i,l)))
4541                   / sum(i$mapg(i,gz2),ld0(i,l)) ;
4542     ewage0(l,gz2) = 1 ;
4543     loop(gz2,loop(i$mapg(i,gz2), phil(i,l) = wage0(i,l)/ewage0(l,gz2) ; )) ;
4544     ls0(l,gz2) = sum(i$mapg(i,gz2),ld0(i,l)) ;
4545     chim(l) = migr0(l)*(awage0(l,"rur")/awage0(l,"urb"))**omegam(l) ;
4546     lslag(l,"Rur") = (ls0(l,"Rur")+migr0(l))/(1+glab0(l,"Rur")) ;
4547     lslag(l,"Urb") = (ls0(l,"Urb")-migr0(l))/(1+glab0(l,"Urb")) ;
4548  ) ;
4549   
4550  * ----- Capital markets
4551   
4552  ptks0(kt)  = 1 ;
4553  pk0        = 1 ;
4554  tks0(kt)   = sum(i,rent0(i,kt)*kd0(i,kt)/(1+tfk0(i,kt)))/ptks0(kt) ;
4555  ks0(i,kt)  = kd0(i,kt) ;
4556   
4557  *display rent0, kd0, ptks0 ;
4558   
4559  ksup0      = sum(kt, ptks0(kt)*tks0(kt))/pk0 ;
4560   
4561  loop(kt$(tks0(kt) ne 0),
4562     if(omegak(kt) ne inf,
4563        aks(i,kt) = (ks0(i,kt)/tks0(kt))*((1+tfk0(i,kt))*ptks0(kt)/rent0(i,kt))**omegak(kt) ;
4564     ) ;
4565   
4566     if (omegakt ne inf,
4567        akst(kt) = (tks0(kt)/ksup0)*(pk0/ptks0(kt))**omegakt ;
4568     ) ;
4569  ) ;
4570   
4571  * ----- Land markets
4572   
4573  ts0(i,lt) = td0(i,lt) ;
4574  pland0    = 1+0*uniform(0.5,4) ;
4575  ptts0(lt) = 1 ;
4576   
4577  tts0(lt) = sum(i,pt0(i,lt)*td0(i,lt)/(1+tft0(i,lt)))/ptts0(lt) ;
4578  land0    = sum(lt,ptts0(lt)*tts0(lt))/pland0 ;
4579   
4580  if (land0 ne 0 and omegatl ne inf,
4581     atts(lt) = (tts0(lt)/land0)*(pland0/ptts0(lt))**omegatl ;
4582  ) ;
4583   
4584  loop(lt,
4585     if (tts0(lt) ne 0 and omegat(lt) ne inf,
4586        ats(i,lt) = (ts0(i,lt)/tts0(lt))*((1+tft0(i,lt))*ptts0(lt)/pt0(i,lt))**omegat(lt) ;
4587     ) ;
4588  ) ;
4589   
4590  * ----- Market for sector specific resource
4591   
4592  rs0(i) = rd0(i) ;
4593   
4594  loop(i$(rs0(i) ne 0),
4595     if (omegar(i) ne inf,
4596        ars(i) = rs0(i)*(plev0/pr0(i))**omegar(i) ;
4597     ) ;
4598  ) ;
4599   
4600  * ------------------------------------------------------------------------------
4601  *
4602  * Miscellaneous initializations
4603  *
4604  * ------------------------------------------------------------------------------
4605   
4606  savf0   = (sam0("inv","row")-sam0("row","inv"))/er0 ;
4607   
4608  gdpmp0  = sum(k,sum(h,xac0(k,h)*(1+tcc0(k,h))*pa0(k))) + sum(k,sum(f,pa0(k)*(1+tcf0(k,f))*xaf0(k,f)))
4609          + sum(k,sum(r,er0*wpe0(k,r)*xe0(k,r)))
4610          - sum(k,sum(r,er0*wpm0(k,r)*xm0(k,r))) ;
4611   
4612  rgdpmp0 = gdpmp0 ;
4613  pgdpmp0 = 1 ;
4614   
4615  gdpfc0  = sum(i,sum(l,wage0(i,l)*lambdal0(i,l)*ld0(i,l)))
4616          + sum(kt,sum(i,rent0(i,kt)*lambdak0(i,kt)*kd0(i,kt)))
4617          + sum(i,pr0(i)*lambdar0(i)*rd0(i))
4618          + sum(lt,sum(i,pt0(i,lt)*lambdat0(i,lt)*td0(i,lt))) ;
4619   
4620  rgdpfc0 = gdpfc0 ;
4621  pgdpfc0 = 1 ;
4622   
4623  pop0(h)   = 0.01*tpop0*sum(h0$(maph(h0,h)),popsh0(h0)) ;
4624  gl0       = 0 ;
4625  ggdp0     = 0 ;
4626  geg0(k,j) = 1 ;
4627  gce0(k,h) = 1 ;
4628  chil(i,l) = 0 ;
4629   
4630  * Rescale theta relative to population
4631   
4632  theta(k,h) = theta(k,h)/pop0(h) ;
4633   
4634  walras0 =  sum(r,sum(k,wpe0(k,r)*xe0(k,r))) + sum(h,wtrh0(h)) + wtrg0 + savf0
4635          -  sum(r,sum(k,wpm0(k,r)*xm0(k,r)))
4636          - (sum(h,htrw0(h)) + gtrw0 + sum(e,ctrw0(e)) + sum(kt,ktrw0(kt)))/er0;
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/init.gms
4638  * ------------------------------------------------------------------------------
4639  *
4640  * Initialize model variables
4641  *
4642  * ------------------------------------------------------------------------------
4643   
4644  * ----- Production block
4645   
4646     nd.l(i)         = nd0(i) ;
4647     va.l(i)         = va0(i) ;
4648     px.l(i)         = px0(i) ;
4649     pp.l(i)         = pp0(i) ;
4650   
4651     xap.l(k,j)      = xap0(k,j) ;
4652     pnd.l(i)        = pnd0(i) ;
4653   
4654     kl.l(i)         = kl0(i) ;
4655     ttd.l(i)        = ttd0(i) ;
4656     rd.l(i)         = rd0(i) ;
4657     pva.l(i)        = pva0(i) ;
4658   
4659     usk.l(i)        = usk0(i) ;
4660     ksk.l(i)        = ksk0(i) ;
4661     pkl.l(i)        = pkl0(i) ;
4662   
4663     skl.l(i)        = skl0(i) ;
4664     ktd.l(i)        = ktd0(i) ;
4665     pksk.l(i)       = pksk0(i) ;
4666   
4667     ld.l(i,l)       = ld0(i,l) ;
4668     pusk.l(i)       = pusk0(i) ;
4669     pskl.l(i)       = pskl0(i) ;
4670   
4671     kd.l(i,kt)      = kd0(i,kt) ;
4672     pktd.l(i)       = pktd0(i) ;
4673   
4674     td.l(i,lt)      = td0(i,lt) ;
4675     pttd.l(i)       = pttd0(i) ;
4676   
4677     xp.l(i)         = xp0(i) ;
4678     p.l(k)          = p0(k) ;
4679   
4680  * ----- Income block
4681   
4682     ly.l(l)         = ly0(l) ;
4683     ky.l(kt)        = ky0(kt) ;
4684     ty.l(lt)        = ty0(lt) ;
4685     ry.l            = ry0 ;
4686   
4687     ktre.l(kt)      = ktre0(kt) ;
4688     ktrh.l(kt)      = ktrh0(kt) ;
4689     ktrw.l(kt)      = ktrw0(kt) ;
4690   
4691     cy.l(e)         = cy0(e) ;
4692     savc.l(e)       = savc0(e) ;
4693     ctrh.l(e)       = ctrh0(e) ;
4694     ctrw.l(e)       = ctrw0(e) ;
4695   
4696     yh.l(h)         = yh0(h) ;
4697     yd.l(h)         = yd0(h) ;
4698     htr.l(h)        = htr0(h) ;
4699     htrh.l(h,hh)    = htrh0(h,hh) ;
4700     htrw.l(h)       = htrw0(h) ;
4701   
4702  * ----- Demand block
4703   
4704     xac.l(k,h)      = xac0(k,h) ;
4705     savh.l(h)       = savh0(h) ;
4706     cpi.l(h)        = cpi0(h) ;
4707   
4708     xaf.l(k,f)      = xaf0(k,f) ;
4709     pf.l(f)         = pf0(f) ;
4710     yf.l(f)         = yf0(f) ;
4711   
4712  * ----- Trade block
4713   
4714     xa.l(k)         = xa0(k) ;
4715     xdd.l(k)        = xdd0(k) ;
4716     xmt.l(k)        = xmt0(k) ;
4717     pa.l(k)         = pa0(k) ;
4718   
4719     pm.l(k,r)       = pm0(k,r) ;
4720     xm.l(k,r)       = xm0(k,r) ;
4721     pmt.l(k)        = pmt0(k) ;
4722   
4723     pe.l(k,r)       = pe0(k,r) ;
4724     xds.l(k)        = xds0(k) ;
4725     xet.l(k)        = xet0(k) ;
4726     x.l(k)          = x0(k) ;
4727   
4728     xe.l(k,r)       = xe0(k,r) ;
4729     pet.l(k)        = pet0(k) ;
4730   
4731     ed.l(k,r)       = ed0(k,r) ;
4732   
4733  * ----- Domestic trade and transport margins
4734   
4735     ytmg.l(k,mg)    = ytmg0(k,mg) ;
4736     xtmg.l(k,mg)    = xtmg0(k,mg) ;
4737     xamg.l(k,kk,mg) = xamg0(k,kk,mg) ;
4738     ptmg.l(k,mg)    = ptmg0(k,mg) ;
4739   
4740  * ----- Goods market equilibrium
4741   
4742     pd.l(k)         = pd0(k) ;
4743     wpe.l(k,r)      = wpe0(k,r) ;
4744   
4745  * ----- Government accounts
4746   
4747     tary.l          = tary0 ;
4748     rtary.l         = rtary0 ;
4749     gy.l            = gy0 ;
4750     gexp.l          = gexp0 ;
4751     savg.l          = savg0 ;
4752     taxadjh.l       = taxadjh0 ;
4753     taxadjc.l       = taxadjc0 ;
4754   
4755  * ----- Closure
4756   
4757     xf.l(f)         = xf0(f) ;
4758     plev.l          = plev0 ;
4759     walras          = walras0 ;
4760   
4761  * ----- Factor block
4762   
4763     ls.l(l,gz)      = ls0(l,gz) ;
4764     ewage.l(l,gz)   = ewage0(l,gz) ;
4765     wage.l(i,l)     = wage0(i,l) ;
4766   
4767     migr.l(l)       = migr0(l) ;
4768     awage.l(l,gz)   = awage0(l,gz) ;
4769   
4770     tks.l(kt)       = tks0(kt) ;
4771     pk.l            = pk0 ;
4772   
4773     ks.l(i,kt)      = ks0(i,kt) ;
4774     ptks.l(kt)      = ptks0(kt) ;
4775     rent.l(i,kt)    = rent0(i,kt) ;
4776   
4777     tts.l(lt)       = tts0(lt) ;
4778     pland.l         = pland0 ;
4779   
4780     ts.l(i,lt)      = ts0(i,lt) ;
4781     ptts.l(lt)      = ptts0(lt) ;
4782     pt.l(i,lt)      = pt0(i,lt) ;
4783   
4784     rs.l(i)         = rs0(i) ;
4785     pr.l(i)         = pr0(i) ;
4786   
4787  * ----- Macro variables
4788   
4789     gdpmp.l         = gdpmp0 ;
4790     rgdpmp.l        = rgdpmp0 ;
4791     pgdpmp.l        = pgdpmp0 ;
4792     gdpfc.l         = gdpfc0 ;
4793     rgdpfc.l        = rgdpfc0 ;
4794     pgdpfc.l        = pgdpfc0 ;
4795   
4796  * ----- Growth variables
4797   
4798     ggdp.l          = ggdp0 ;
4799     lambdal.l(i,l)  = lambdal0(i,l) ;
4800     lambdak.l(i,kt)  = lambdak0(i,kt) ;
4801     lambdat.l(i,lt)  = lambdat0(i,lt) ;
4802     geg.l(k,j)      = geg0(k,j) ;
4803     gce.l(k,h)       =gce0(k,h) ;
4804   
4805  * ----- Growth factors
4806   
4807     gl.fx            = gl0 ;
4808  *   lambdak.fx(i,kt) = lambdak0(i,kt) ;
4809  *   lambdat.fx(i,lt) = lambdat0(i,lt) ;
4810     lambdar.fx(i)    = lambdar0(i) ;
4811     ksup.fx          = ksup0 ;
4812     tk.fx            = tk0 ;
4813     land.fx          = land0 ;
4814     pop.fx(h)        = pop0(h) ;
4815     glab.fx(l,gz)    = glab0(l,gz) ;
4816   
4817  * ----- Trade prices
4818   
4819     wpm.fx(k,r)     = wpm0(k,r) ;
4820     wpendx.fx(k,r)  = wpendx0(k,r) ;
4821     er.fx           = er0 ;
4822   
4823  * ----- Policy variables
4824   
4825     rsg.fx          = rsg0 ;
4826     tp.fx(i)        = tp0(i) ;
4827     tcp.fx(k,j)     = tcp0(k,j) ;
4828     tcc.fx(k,h)     = tcc0(k,h) ;
4829     tcf.fx(k,f)     = tcf0(k,f) ;
4830     kappah.fx(h)    = kappah0(h) ;
4831     gtrh.fx(h)      = gtrh0(h) ;
4832     kappac.fx(e)    = kappac0(e) ;
4833   
4834     tmadj.fx        = tmadj0 ;
4835     tm.fx(k,r)      = tm0(k,r) ;
4836     te.fx(k,r)      = te0(k,r) ;
4837   
4838     tfl.fx(j,l)     = tfl0(j,l) ;
4839     tfk.fx(j,kt)    = tfk0(j,kt) ;
4840     tft.fx(j,lt)    = tft0(j,lt) ;
4841     tfr.fx(j)       = tfr0(j) ;
4842   
4843  * ----- Miscellaneous variables
4844   
4845     wtrh.fx(h)      = wtrh0(h) ;
4846     wtrg.fx         = wtrg0 ;
4847     gtrw.fx         = gtrw0 ;
4848     ctrw.l(e)       = ctrw0(e) ;
4849     savf.fx         = savf0 ;
4850     csavrate.fx(e)  = csavrate0(e) ;
4851     tmg.fx(k,mg)    = tmg0(k,mg) ;
4852   
4853   
4854       calflag = 0 ;
4855       if (ord(sim) le 1,
4856       calflag = 1 ;
4857       ) ;
4858   
4859  *xf.fx("gov") = xf0("gov") ;
4860  ntcip = 0 ;
4861   
4862  loop(t$(year(t) le 2030),
4863  *loop(t,
4864  *loop(t$(ord(t) le 13),
4865   
4866  *## Configure Dynamic Calibration
4867  *if (ord(sim) ge 1 and ord(t) ge 20, Scen(t,"depr") = 3.4 ; ) ;
4868   
4869   
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/dyncal.gms
4871  if (ord(t) eq 1,
4872   
4873  *  Define the necessary lags
4874   
4875        lambdalLag(i,l)  = lambdal0(i,l) ;
4876        lambdakLag(i,kt)  = lambdak0(i,kt) ;
4877        lambdatLag(i,lt)  = lambdat0(i,lt) ;
4878        rgdpmpLag        = rgdpmp0 ;
4879        xaplag(k,j)      = xap0(k,j) ;
4880        xaclag(k,h)      = xac0(k,h) ;
4881   
4882  * Update exogenous variables
4883   
4884        als(l,"Tot") = als(l,"Tot") ;
4885  *      als(l,"Tot") = als(l,"Tot")*(1+0.01*lScen(t,l)) ;
4886   
4887        pop.fx(h)    = pop0(h) ;
4888   
4889        xf.fx("gov") = xf0("gov") ;
4890   
4891        tk.fx        = tk0 ;
4892        ksup.fx      = (ksup0/tk0)*tk0 ;
4893   
4894        land.fx      = land0 ;
4895   
4896        ars(i)       = ars(i) ;
4897   
4898        tmg.fx(k,mg) = tmg0(k,mg) ;
4899   
4900  *  Update agricultural productivity
4901   
4902        lambdal.fx(np,l)  = lambdal0(np,l) ;
4903        lambdak.fx(np,kt) = lambdak0(np,kt) ;
4904        lambdat.fx(np,lt) = lambdat0(np,lt) ;
4905        lambdal.lo(ip,l)  = -inf ;
4906        lambdak.lo(ip,kt) = -inf ;
4907        lambdat.lo(ip,lt) = -inf ;
4908        lambdal.up(ip,l)  = +inf ;
4909        lambdak.up(ip,kt) = +inf ;
4910        lambdat.up(ip,lt) = +inf ;
4911   
4912  else
4913   
4914  *     Define the necessary lags
4915   
4916        lambdalLag(i,l)  = lambdal.l(i,l) ;
4917        lambdakLag(i,kt)  = lambdak.l(i,kt) ;
4918        lambdatLag(i,lt)  = lambdat.l(i,lt) ;
4919        rgdpmpLag        = rgdpmp.l ;
4920        xaplag(k,j)      = xap.l(k,j) ;
4921        xaclag(k,h)      = xac.l(k,h) ;
4922   
4923   
4924  *     Update exogenous variables
4925   
4926        als(l,"Tot") = als(l,"Tot")*(1+0.01*Scen(t,"pop")) ;
4927  *      als(l,"Tot") = als(l,"Tot")*(1+0.01*lScen(t,l)) ;
4928   
4929        pop.fx(h)    = pop.l(h)*(1+0.01*Scen(t,"Pop")) ;
4930   
4931        xf.fx("gov") = (xf.l("gov") - ntcip)*(1+0.01*Scen(t,"GDP"))**step(t) + ntcip ;
4932   
4933        tk.fx        = (1-0.01*Scen(t,"depr"))*tk.l + xf.l("inv") ;
4934  *      tk.fx        = tk.l*(1+0.01*Scen(t,"Pop")) ;
4935        ksup.fx      = (ksup0/tk0)*tk.l ;
4936   
4937        land.fx      = (1+0.01*Scen(t,"LandR"))*land.l ;
4938   
4939        ars(i)       = (1+0.01*Scen(t,"natr"))*ars(i) ;
4940   
4941        tmg.fx(k,mg) = (1+0.01*Scen(t,"Margin"))*tmg.l(k,mg) ;
4942   
4943  *     Update agricultural productivity
4944   
4945        lambdal.fx(ag,l)  = (1+0.01*Scen(t,"AgProd"))*lambdal.l(ag,l) ;
4946        lambdak.fx(ag,kt) = (1+0.01*Scen(t,"AgProd"))*lambdak.l(ag,kt) ;
4947        lambdat.fx(ag,lt) = (1+0.01*Scen(t,"AgProd"))*lambdat.l(ag,lt) ;
4948   
4949  );
4950   
4951  *  Fiscal Closure
4952  *    1. Endogenous Government Saving, fixed taxes
4953  *       rsg.lo = -inf ;
4954  *       rsg.up = +inf ;
4955  *       taxadjh.fx = taxadjh0 ;
4956  *    2. Fixed Government Saving, lump sum redistribution
4957          taxadjh.lo = -inf ;
4958          taxadjh.up = +inf ;
4959          rsg.fx = rsg0 ;
4960   
4961  *     Endogenize labor productivity growth for the BaU, else
4962  *     Endogenize GDP growth
4963   
4964        if (CalFlag eq 1,
4965   
4966           gl.lo = -inf ;
4967           gl.up = +inf ;
4968   
4969           if (ord(t) eq 2, gl.l = 0.01 ; ) ;
4970   
4971           ggdp.fx = 0.01*Scen(t,"GDP") ;
4972   
4973        else
4974   
4975           gl.fx = glT(t) ;
4976   
4977           ggdp.lo = -inf ;
4978           ggdp.up = +inf ;
4979   
4980        ) ;
4981   
4982   
4983   
4984   
4985  *display lambdal.l, lambdak.l, lambdat.l ;
4986   
4987   
4988        solve Model_dynamic using mcp ;
4989   
4990              put screen ;
4991              put //, "End of solver: Sim - ", sim.tl,
4992                  "  Year - ", t.tl, " Iteration - ", iter3:2:0, " of ", niter(t, sim):2:0, " iterations" // ;
4993              putclose ;
4994   
4995              if (Model_dynamic.solvestat ne 1 or Model_dynamic.modelstat gt 2,
4996                 Abort$(1) "Model did not solve, aborting..."
4997              ) ;
4998   
4999  display xf.l, chil ;
5000   
5001  * ---- Calculate WALRAS' Law
5002   
5003  walras =  sum(r,sum(k,wpe.l(k,r)*xe.l(k,r))) +  sum(h,wtrh.l(h)) + wtrg.l + savf.l
5004                  - sum(r,sum(k,wpm.l(k,r)*xm.l(k,r)))
5005            - (sum(h,htrw.l(h)) + gtrw.l + sum(e,ctrw.l(e)) + sum(kt,ktrw.l(kt)))/er.l  ;
5006   
5007  display walras ;
5008  display savf.l ;
5009   
5010  * ----- Save intermediate results
5011   
5012       if (CalFlag eq 1,
5013                  glT(t) = gl.l ;
5014                  xfT(f,t) = xf.l(f) ;
5015                  xafT(k,f,t) = xaf.l(k,f) ;
5016                  wtrgT(t) = wtrg.l ;
5017       ) ;
5018   
5019       if (TR(t),
INCLUDE    /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/postsim.gms
5021  * -- postsim.gms
5022  * --
5023  * -- This file produces simulation results in Excel compatible CSV files
5024  * -- Two files are produced for each interval, a reportfile containing desired simulation variables,
5025  * --      and a samfile containing complete Social Accounting Matrices
5026  * --
5027   
5028   
5029  * ----- Output the SAM
5030   
5031  put samfile ;
5032   
5033  *$include 'sam.gms'
5034   
5035  * ----- Output the results
5036   
5037  put reportfile ;
5038   
5039  rscale = scale ;
5040   
5041  * ----- Sectoral results
5042   
5043  loop(i, put sim.tl, t.tl, 'xp',      i.tl, '', 'S1', (rscale*xp.l(i)) / ; ) ;
5044  loop(i, put sim.tl, t.tl, 'pp',      i.tl, '', 'S2', (pp.l(i)) / ; ) ;
5045  loop(i$icsv, put sim.tl, t.tl, 'px',      i.tl, '', 'S2', (px.l(i)) / ; ) ;
5046  loop(i$icsv, put sim.tl, t.tl, 'va',      i.tl, '', 'S1', (rscale*va.l(i)) / ; ) ;
5047  loop(i$icsv, put sim.tl, t.tl, 'pva',     i.tl, '', 'S2', (pva.l(i)) / ; ) ;
5048  loop(k$icsv, put sim.tl, t.tl, 'int',     k.tl, '', 'S1', (rscale*sum(j,xap.l(k,j))) / ; ) ;
5049  loop(kt$icsv,
5050     loop(i, put sim.tl, t.tl, 'kd',      i.tl, kt.tl, 'S1', (rscale*kd.l(i,kt)) / ; ) ;
5051     loop(i, put sim.tl, t.tl, 'rent',    i.tl, kt.tl, 'S2', (rent.l(i,kt)) / ; ) ;
5052     loop(i, put sim.tl, t.tl, 'lambdak', i.tl, kt.tl, 'S2', (lambdak.l(i,kt)) / ; ) ;
5053     loop(i, put sim.tl, t.tl, 'tfk',     i.tl, kt.tl, 'S2', (tfk.l(i,kt)) / ; ) ;
5054  ) ;
5055  loop(lt$icsv,
5056     loop(i, put sim.tl, t.tl, 'td',      i.tl, lt.tl, 'S1', (rscale*td.l(i,lt)) / ; ) ;
5057     loop(i, put sim.tl, t.tl, 'pt',      i.tl, lt.tl, 'S2', (pt.l(i,lt)) / ; ) ;
5058     loop(i, put sim.tl, t.tl, 'lambdat', i.tl, lt.tl, 'S2', (lambdat.l(i,lt)) / ; ) ;
5059     loop(i, put sim.tl, t.tl, 'tft',     i.tl, lt.tl, 'S2', (tft.l(i,lt)) / ; ) ;
5060  ) ;
5061   
5062  loop(l$icsv,
5063     loop(i, put sim.tl, t.tl, 'ld',      i.tl, l.tl, 'L1', (rscale*ld.l(i,l)) / ; ) ;
5064     loop(i, put sim.tl, t.tl, 'lambdal', i.tl, l.tl, 'L2', (lambdal.l(i,l)) / ; ) ;
5065     loop(i, put sim.tl, t.tl, 'wage',    i.tl, l.tl, 'L2', (wage.l(i,l)) / ; ) ;
5066     loop(i, put sim.tl, t.tl, 'tfl',     i.tl, l.tl, 'L2', (tfl.l(i,l)) / ; ) ;
5067  ) ;
5068   
5069  loop(k, put sim.tl, t.tl, 'x',          k.tl, '', 'S1', (rscale*x.l(k)) / ; ) ;
5070  loop(h,
5071     loop(k, put sim.tl, t.tl, 'xac',     h.tl, k.tl,  'H1', (rscale*xac.l(k,h)) / ; ) ;
5072  ) ;
5073   
5074  loop(f$icsv,
5075     loop(k, put sim.tl, t.tl, 'xaf',     k.tl, f.tl, 'S1', (rscale*xaf.l(k,f)) / ; ) ;
5076     put sim.tl, t.tl, 'pf',     f.tl, '', 'M2', (pf.l(f)) / ;
5077     put sim.tl, t.tl, 'xf',     f.tl, '', 'M1', (rscale*xf.l(f)) / ;
5078     put sim.tl, t.tl, 'yf',     f.tl, '', 'M1', (rscale*yf.l(f)) / ;
5079  ) ;
5080   
5081  loop(k,
5082  put sim.tl, t.tl, 'xa',  k.tl, '', 'S1', (rscale*xa.l(k)) / ;
5083  put sim.tl, t.tl, 'xd',  k.tl, '', 'S1', (rscale*xdd.l(k)) / ;
5084  put sim.tl, t.tl, 'xmt', k.tl, '', 'S1', (rscale*xmt.l(k)) / ;
5085  put sim.tl, t.tl, 'xet', k.tl, '', 'S1', (rscale*xet.l(k)) / ;
5086  put$icsv sim.tl, t.tl, 'p',   k.tl, '', 'S2', (p.l(k))   / ;
5087  put$icsv sim.tl, t.tl, 'pa',  k.tl, '', 'S2', (pa.l(k))  / ;
5088  put$icsv sim.tl, t.tl, 'pd',  k.tl, '', 'S2', (pd.l(k))  / ;
5089  put$icsv sim.tl, t.tl, 'pmt', k.tl, '', 'S2', (pmt.l(k)) / ;
5090  put$icsv sim.tl, t.tl, 'pet', k.tl, '', 'S2', (pet.l(k)) / ;
5091   
5092       loop(r, put sim.tl, t.tl, "xm", k.tl, r.tl, "S3", (rscale*xm.l(k,r)) / ; ) ;
5093       loop(r, put sim.tl, t.tl, "xe", k.tl, r.tl, "S3", (rscale*xe.l(k,r)) / ; ) ;
5094  ) ;
5095   
5096  loop(i$icsv, put sim.tl, t.tl, 'tp',  i.tl, '', 'S2', (tp.l(i)) / ; ) ;
5097  loop(k$icsv, loop(j, put sim.tl, t.tl, 'tcp',  k.tl, j.tl, 'S2', (tcp.l(k,j)) / ; )) ;
5098  loop(k$icsv, loop(h, put sim.tl, t.tl, 'tcc',  k.tl, h.tl, 'S2', (tcc.l(k,h)) / ; )) ;
5099  loop(k$icsv, loop(f, put sim.tl, t.tl, 'tcf',  k.tl, f.tl, 'S2', (tcf.l(k,f)) / ; )) ;
5100  loop(mg$icsv, loop(k, put sim.tl, t.tl, 'tmg', k.tl, mg.tl, 'S2', (tmg.l(k,mg)) / ; ) ; ) ;
5101   
5102  * ----- Macro variables
5103   
5104  put sim.tl, t.tl, 'gdpmp',    '', '', 'M1', (rscale*gdpmp.l) / ;
5105  put sim.tl, t.tl, 'rgdpmp',   '', '', 'M1', (rscale*rgdpmp.l) / ;
5106  put sim.tl, t.tl, 'pgdpmp',   '', '', 'M2', (pgdpmp.l) / ;
5107   
5108  put sim.tl, t.tl, 'tcons',   '', '', 'M1', (rscale*sum(k,sum(h,(1+tcc0(k,h))*pa0(k)*xac.l(k,h)))) / ;
5109  put sim.tl, t.tl, 'tinv',    '', '', 'M1', (rscale*sum(k,(1+tcf0(k,"inv"))*pa0(k)*xaf.l(k,"inv"))) / ;
5110  *put sim.tl, t.tl, 'ttrdmg',  '', '', 'M1', (rscale*sum(k,(1+tcf0(k,"trdmg"))*pa0(k)*xaf.l(k,"trdmg"))) / ;
5111  put sim.tl, t.tl, 'texp',    '', '', 'M1', (rscale*er0*sum(k,sum(r,wpe0(k,r)*xe.l(k,r)))) / ;
5112  put sim.tl, t.tl, 'timp',    '', '', 'M1', (rscale*er0*sum(k,sum(r,wpm0(k,r)*xm.l(k,r)))) / ;
5113   
5114  put sim.tl, t.tl, 'pcons',   '', '', 'M1', (100*sum(k,sum(h,(1+tcc.l(k,h))*pa.l(k)*xac0(k,h)))
5115                                                       /sum(k,sum(h,(1+tcc0(k,h))*pa0(k)*xac0(k,h)))) / ;
5116  *if (xf0("GIV") ne 0, put sim.tl, t.tl, 'pgov',    '', '', 'M1',
5117  *   (100*sum(k,(1+tcf.l(k,"GIV"))*pa.l(k)*xaf0(k,"GIV"))/sum(k,(1+tcf0(k,"GIV"))*pa0(k)*xaf0(k,"GIV"))) / ; ) ;
5118  if (xf0("inv") ne 0, put sim.tl, t.tl, 'pinv',    '', '', 'M1',
5119     (100*sum(k,(1+tcf.l(k,"inv"))*pa.l(k)*xaf0(k,"inv"))/sum(k,(1+tcf0(k,"inv"))*pa0(k)*xaf0(k,"inv"))) / ; ) ;
5120  *if (xf0("ginvs") ne 0, put sim.tl, t.tl, 'pzig',    '', '', 'M1',
5121  *   (100*sum(k,(1+tcf.l(k,"ginvs"))*pa.l(k)*xaf0(k,"ginvs"))/sum(k,(1+tcf0(k,"ginvs"))*pa0(k)*xaf0(k,"ginvs"))) / ; ) ;
5122  *if (xf0("inventory") ne 0, put sim.tl, t.tl, 'pdst',    '', '', 'M1',
5123  *   (100*sum(k,(1+tcf.l(k,"inventory"))*pa.l(k)*xaf0(k,"inventory"))/sum(k,(1+tcf0(k,"inventory"))*pa0(k)*xaf0(k,"inventory"))) / ; ) ;
5124  *if (xf0("trdmg") ne 0, put sim.tl, t.tl, 'ptrdmg',    '', '', 'M1',
5125  *   (100*sum(k,(1+tcf.l(k,"trdmg"))*pa.l(k)*xaf0(k,"trdmg"))/sum(k,(1+tcf0(k,"trdmg"))*pa0(k)*xaf0(k,"trdmg"))) / ; ) ;
5126   
5127  put sim.tl, t.tl, 'pexp',    '', '', 'M1', (100*er.l*sum(k,sum(r,wpe.l(k,r)*xe0(k,r)))/(er0*sum(k,sum(r,wpe0(k,r)*xe0(k,r))))) / ;
5128  put sim.tl, t.tl, 'pimp',    '', '', 'M1', (100*er.l*sum(k,sum(r,wpm.l(k,r)*xm0(k,r)))/(er0*sum(k,sum(r,wpm0(k,r)*xm0(k,r))))) / ;
5129   
5130  put sim.tl, t.tl, 'gdpfc',    '', '', 'M1', (rscale*gdpfc.l) / ;
5131  put sim.tl, t.tl, 'rgdpfc',   '', '', 'M1', (rscale*rgdpfc.l) / ;
5132  put sim.tl, t.tl, 'pgdpfc',   '', '', 'M2', (pgdpfc.l) / ;
5133  put sim.tl, t.tl, 'pk',       '', '', 'M2', (pk.l) / ;
5134  put sim.tl, t.tl, 'pland',    '', '', 'M2', (pland.l) / ;
5135  put sim.tl, t.tl, 'ggdp',     '', '', 'M2', (ggdp.l) / ;
5136  put sim.tl, t.tl, 'gl',       '', '', 'M2', (gl.l) / ;
5137   
5138  loop(kt,put sim.tl, t.tl, 'ky',   kt.tl, '', 'M1', (rscale*ky.l(kt)) / ; ) ;
5139  loop(lt,put sim.tl, t.tl, 'ty',   lt.tl, '', 'M1', (rscale*ty.l(lt)) / ; ) ;
5140   
5141  loop(e$icsv,
5142     put sim.tl, t.tl, 'cy',       e.tl, '', 'M1', (rscale*cy.l(e)) / ;
5143     put sim.tl, t.tl, 'savc',     e.tl, '', 'M1', (rscale*savc.l(e)) / ;
5144     put sim.tl, t.tl, 'ctrw',     e.tl, '', 'M1', (rscale*ctrw.l(e)) / ;
5145     put sim.tl, t.tl, 'kappac',   e.tl, '', 'M2', (kappac.l(e)) / ;
5146     put sim.tl, t.tl, 'csavrate', e.tl, '', 'M2', (csavrate.l(e)) / ;
5147  ) ;
5148   
5149  put sim.tl, t.tl, 'tary',  '', '', 'M1', (rscale*tary.l)  / ;
5150  put sim.tl, t.tl, 'rtary', '', '', 'M1', (rscale*rtary.l) / ;
5151  put sim.tl, t.tl, 'tmadj', '', '', 'M1', (tmadj.l)        / ;
5152  put sim.tl, t.tl, 'gy',    '', '', 'M1', (rscale*gy.l)    / ;
5153  put sim.tl, t.tl, 'gexp',  '', '', 'M1', (rscale*gexp.l)  / ;
5154  put sim.tl, t.tl, 'savg',  '', '', 'M1', (rscale*savg.l)  / ;
5155  put sim.tl, t.tl, 'rsg',   '', '', 'M1', (rscale*rsg.l)   / ;
5156   
5157  loop(kt, put sim.tl, t.tl, 'tks',   kt.tl, '', 'M1', (rscale*tks.l(kt)) / ; ) ;
5158  loop(kt, put sim.tl, t.tl, 'ptks',  kt.tl, '', 'M2', (ptks.l(kt)) / ; ) ;
5159   
5160  put sim.tl, t.tl, 'savf', '', '', 'M1', (rscale*savf.l) / ;
5161   
5162  put sim.tl, t.tl, 'plev', '', '', 'M2', (plev.l) / ;
5163  put sim.tl, t.tl, 'er',   '', '', 'M2', (er.l) / ;
5164   
5165  put sim.tl, t.tl, 'taxadjh',  '', '', 'M2', (taxadjh.l) / ;
5166   
5167  loop(l, put sim.tl, t.tl, 'ly', l.tl, '', 'M3', (rscale*ly.l(l)) / ; ) ;
5168   
5169  loop(h,
5170  put sim.tl, t.tl, 'yh',   h.tl, '', 'H1', (rscale*yh.l(h)) / ;
5171  put sim.tl, t.tl, 'yd',   h.tl, '', 'H1', (rscale*yd.l(h)) / ;
5172  put$icsv sim.tl, t.tl, 'savh', h.tl, '', 'H1', (rscale*savh.l(h)) / ;
5173  put$icsv sim.tl, t.tl, 'pop',  h.tl, '', 'H1', (pop.l(h)) / ;
5174  put$icsv sim.tl, t.tl, 'htr',  h.tl, '', 'H1', (rscale*htr.l(h)) / ;
5175  put$icsv sim.tl, t.tl, 'htrh', h.tl, '', 'H1', (rscale*sum(hh,htrh.l(h,hh))) / ;
5176  put$icsv sim.tl, t.tl, 'htrw', h.tl, '', 'H1', (rscale*htrw.l(h)) / ;
5177   
5178  put sim.tl, t.tl, 'gtrh',   h.tl, '', 'H1', (rscale*gtrh.l(h)) / ;
5179  put sim.tl, t.tl, 'cpi',    h.tl, '', 'H2', (cpi.l(h)) / ;
5180  put sim.tl, t.tl, 'kappah', h.tl, '', 'H2', (kappah.l(h)) / ;
5181  ) ;
5182   
5183  * ----- Trade block
5184   
5185  loop(r$icsv,
5186     loop(k, put sim.tl, t.tl, 'xm', k.tl, r.tl, 'T1', (rscale*xm.l(k,r)) / ; ) ;
5187     loop(k, put sim.tl, t.tl, 'xe', k.tl, r.tl, 'T1', (rscale*xe.l(k,r)) / ; ) ;
5188   
5189     loop(k, put sim.tl, t.tl, 'pm',     k.tl, r.tl, 'T2', (pm.l(k,r)) / ; ) ;
5190     loop(k, put sim.tl, t.tl, 'wpm',    k.tl, r.tl, 'T2', (wpm.l(k,r)) / ; ) ;
5191     loop(k, put sim.tl, t.tl, 'pe',     k.tl, r.tl, 'T2', (pe.l(k,r)) / ; ) ;
5192     loop(k, put sim.tl, t.tl, 'wpe',    k.tl, r.tl, 'T2', (wpe.l(k,r)) / ; ) ;
5193     loop(k, put sim.tl, t.tl, 'wpendx', k.tl, r.tl, 'T2', (wpendx.l(k,r)) / ; ) ;
5194   
5195     loop(k, put sim.tl, t.tl, 'tm', k.tl, r.tl, 'T2', (tm.l(k,r)) / ; ) ;
5196     loop(k, put sim.tl, t.tl, 'te', k.tl, r.tl, 'T2', (te.l(k,r)) / ; ) ;
5197  ) ;
5198   
5199  * ----- Factor block
5200   
5201  loop(gz$icsv,
5202     loop(l$(ls.l(l,gz) ne 0), put sim.tl, t.tl, "ls",    l.tl, gz.tl, 'L3', (ls.l(l,gz)/pscale) / ;) ;
5203     loop(l$(ls.l(l,gz) ne 0), put sim.tl, t.tl, "ewage", l.tl, gz.tl, 'L4', (ewage.l(l,gz)) / ;) ;
5204  ) ;
5205   
5206  loop(l$icsv, put sim.tl, t.tl, "migr", l.tl, '', 'L3', (migr.l(l)/pscale) / ;) ;
5207       ) ;
5208  display glt ;
5209  ) ;
5210  *display glt, lambdal.l, lambdallag, chil ;
5211  ) ;
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 3
Proto_CGE
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_CGE.gms
     2       57 INCLUDE        1      57  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_3.dat
     3      614 INCLUDE        2     557  ../Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_SAM.dat
     4      972 INCLUDE        1      61  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/decl.gms
     5     1622 INCLUDE        1      62  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/cal.gms
     6     2397 INCLUDE        1      63  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/init.gms
     7     2614 INCLUDE        1      65  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/model.gms
     8     3720 INCLUDE        1      69  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Scen_2030.dat
     9     3862 INCLUDE        1      97  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/cal.gms
    10     4637 INCLUDE        1      98  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/init.gms
    11     4870 INCLUDE        1     116  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/dyncal.gms
    12     5020 INCLUDE        1     155  ./Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/postsim.gms


COMPILATION TIME     =        0.088 SECONDS      3 Mb  DEX237-237 Jul 21, 2011
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 4
Proto_CGE
E x e c u t i o n


----    712 PARAMETER nsam  

             Primary    Manufact    Tertiary      UnSkil       Skill       Captl       LandR       natrs       hhsld         gov         inv

Primary        8.816       7.417       3.051                                                                  20.360       0.025       0.784
Manufact       3.940      23.223      18.065                                                                  10.281       0.406      11.433
Tertiary       5.438       8.568      23.183                                                                  16.340      14.248      12.971
UnSkil         9.191       6.814      16.044
Skill          0.577       1.204       9.847
Captl          7.044       4.886      14.554
LandR          1.180
natrs          0.003
hhsld                                             32.050      11.630      26.490       1.180       0.003
inv                                                                                                            5.500
depry                                                                                                          8.064
indtx    2.073000E-5       0.001       0.025                                                                                           0.003
prdtx          0.074       0.154       0.101
imptx          1.262       2.283
exptx                1.072300E-4
dirtx                                                                                                         10.800
row            8.298      23.591       2.977
total         45.823      78.141      87.846      32.050      11.630      26.490       1.180       0.003      71.345      14.679      25.192

       +       depry       trdmg       indtx       prdtx       imptx       dirtx         row       total

Primary                                                                                5.360      45.813
Manufact                                                                              10.798      78.146
Tertiary                   0.835                                                       6.248      87.831
UnSkil                                                                                            32.049
Skill                                                                                             11.627
Captl                                                                                             26.485
LandR                                                                                              1.180
natrs                                                                                              0.003
hhsld                                                                                             71.353
gov                                    0.004       0.329       3.544      10.800                  14.678
inv            8.064                                                                  11.630      25.194
depry                                                                                              8.064
trdmg                                                                                  0.835       0.835
indtx                                                                                              0.030
prdtx                                                                                              0.329
imptx                                                                                              3.544
exptx                                                                                        1.072300E-4
dirtx                                                                                             10.800
row                                                                                   34.870      69.736
total          8.064       0.835       0.004       0.329       3.544      10.800      69.741     487.697


----    955 SET ip  Sectors with endogenous labor productivity

Manufact,    Tertiary


----    955 SET np  Sectors with exogenous labor productivity

Primary


----   3852 Results
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 5
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2008


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.018 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2008

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 6
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.025      1000.000
 ITERATION COUNT, LIMIT         8    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.0000e+03 var: (wage(Primary,UnSkil))
Maximum of F. . . . . . . . . .  3.8912e+01 eqn: (yheq(hhsld))
Maximum of Grad F . . . . . . .  1.0000e+03 eqn: (lyeq(UnSkil))
                                            var: (ld(Primary,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  6.0593e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  5.0050e-01 eqn: (puskeq(Primary))
Maximum Column Norm . . . . . .  3.0326e+03 var: (ld(Primary,UnSkil))
Minimum Column Norm . . . . . .  8.3524e-01 var: (pskl(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.1141e-11 eqn: (xdseq1(Primary))
Inf-Norm of Normal Map. . . . .  1.1141e-11 eqn: (xdseq1(Primary))
Inf-Norm of Minimum Map . . . .  1.1141e-11 eqn: (xdseq1(Primary))
Inf-Norm of Fischer Function. .  1.1141e-11 eqn: (xdseq1(Primary))
Inf-Norm of Grad Fischer Fcn. .  5.3089e-09 eqn: (uskeq(Manufact))
Two-Norm of Grad Fischer Fcn. .  7.5214e-09

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1086e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.1141e-11 eqn: (xdseq1(Primary))
Maximum of Grad F . . . . . . .  1.6608e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))


**** ERRORS/WARNINGS IN EQUATION puskeq(Primary)
     2 error(s): vcPower: FUNC DOMAIN: x**c, x < 0 (RETURNED 0)


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             1     ERRORS ( ****)
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 7
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 14.679,    inv 19.797


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.009  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008 0.661

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 8
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2009


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.002 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2009

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                                12/14/16 18:19:37 Page 9
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         3    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1086e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  3.8328e+01 eqn: (gegeq(Manufact,Manufact))
Maximum of Grad F . . . . . . .  1.6608e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  8.7008e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  3.9465e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.9343e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  5.5285e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.4211e-13 eqn: (xdseq1(Primary))
Inf-Norm of Normal Map. . . . .  1.4211e-13 eqn: (xdseq1(Primary))
Inf-Norm of Minimum Map . . . .  1.4211e-13 eqn: (xdseq1(Primary))
Inf-Norm of Fischer Function. .  1.4211e-13 eqn: (xdseq1(Primary))
Inf-Norm of Grad Fischer Fcn. .  9.7992e-11 eqn: (uskeq(Manufact))
Two-Norm of Grad Fischer Fcn. .  1.8278e-10

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1355e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.4211e-13 eqn: (xdseq1(Primary))
Maximum of Grad F . . . . . . .  1.5269e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 10
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 15.120,    inv 19.900


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.008  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 11
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2010


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2010

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 12
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         3    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1355e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.5600e+00 eqn: (pkeq2)
Maximum of Grad F . . . . . . .  1.5269e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  8.1705e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  3.7216e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8504e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  5.1982e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  2.8422e-13 eqn: (xmeq(Manufact,row))
Inf-Norm of Normal Map. . . . .  2.8422e-13 eqn: (xmeq(Manufact,row))
Inf-Norm of Minimum Map . . . .  2.8422e-13 eqn: (xmeq(Manufact,row))
Inf-Norm of Fischer Function. .  2.8422e-13 eqn: (xmeq(Manufact,row))
Inf-Norm of Grad Fischer Fcn. .  2.3566e-10 eqn: (xmteq(Primary))
Two-Norm of Grad Fischer Fcn. .  3.4113e-10

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1565e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  2.8422e-13 eqn: (xmeq(Manufact,row))
Maximum of Grad F . . . . . . .  1.4376e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 13
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 15.573,    inv 20.066


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.008  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 14
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2011


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2011

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 15
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1565e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.5121e+00 eqn: (pkeq2)
Maximum of Grad F . . . . . . .  1.4376e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.8180e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  3.5306e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8004e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  4.9190e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  2.4790e-07 eqn: (pgdpfceq)
Inf-Norm of Normal Map. . . . .  2.4790e-07 eqn: (pgdpfceq)
Inf-Norm of Minimum Map . . . .  2.4790e-07 eqn: (pgdpfceq)
Inf-Norm of Fischer Function. .  2.4790e-07 eqn: (pgdpfceq)
Inf-Norm of Grad Fischer Fcn. .  6.1075e-05 eqn: (cpieq(hhsld))
Two-Norm of Grad Fischer Fcn. .  1.4565e-04

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1731e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  2.4790e-07 eqn: (pgdpfceq)
Maximum of Grad F . . . . . . .  1.3759e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 16
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 16.040,    inv 20.279


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.007  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 17
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2012


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.002 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2012

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 18
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1731e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.4772e+00 eqn: (pkeq2)
Maximum of Grad F . . . . . . .  1.3759e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.5758e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  3.3628e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7703e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  4.6747e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  8.1548e-08 eqn: (pgdpfceq)
Inf-Norm of Normal Map. . . . .  8.1548e-08 eqn: (pgdpfceq)
Inf-Norm of Minimum Map . . . .  8.1548e-08 eqn: (pgdpfceq)
Inf-Norm of Fischer Function. .  8.1548e-08 eqn: (pgdpfceq)
Inf-Norm of Grad Fischer Fcn. .  2.2075e-05 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  5.4276e-05

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1865e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  8.1548e-08 eqn: (pgdpfceq)
Maximum of Grad F . . . . . . .  1.3327e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 19
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 16.522,    inv 20.528


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.007  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 20
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2013


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.002 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2013

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 21
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.006      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1865e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.4528e+00 eqn: (pkeq2)
Maximum of Grad F . . . . . . .  1.3327e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.4074e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  3.2120e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7527e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  4.4559e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.0060e-08 eqn: (pgdpfceq)
Inf-Norm of Normal Map. . . . .  3.0060e-08 eqn: (pgdpfceq)
Inf-Norm of Minimum Map . . . .  3.0060e-08 eqn: (pgdpfceq)
Inf-Norm of Fischer Function. .  3.0060e-08 eqn: (pgdpfceq)
Inf-Norm of Grad Fischer Fcn. .  9.5104e-06 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  2.2038e-05

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1974e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  3.0060e-08 eqn: (pgdpfceq)
Maximum of Grad F . . . . . . .  1.3025e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 22
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 17.017,    inv 20.809


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.007  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 23
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2014


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2014

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 24
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.1974e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.4367e+00 eqn: (pkeq2)
Maximum of Grad F . . . . . . .  1.3025e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.2911e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  3.0744e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7433e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  4.2569e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.2221e-08 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  1.2221e-08 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  1.2221e-08 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  1.2221e-08 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  4.4100e-06 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  9.6825e-06

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2061e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.2221e-08 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2820e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 25
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 17.528,    inv 21.115


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.007  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 26
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2015


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.002 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2015

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 27
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2061e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.4781e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2820e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.2132e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.9476e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7397e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  4.0742e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  6.0079e-09 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  6.0079e-09 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  6.0079e-09 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  6.0079e-09 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  2.1790e-06 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  4.5576e-06

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2131e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.0079e-09 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2689e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 28
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 18.054,    inv 21.444


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 29
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2016


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.002 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2016

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 30
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2131e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.6124e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2689e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.1649e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.8299e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7402e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.9050e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.1058e-09 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  3.1058e-09 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  3.1058e-09 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  3.1058e-09 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  1.1371e-06 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  2.2753e-06

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2186e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  3.1058e-09 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2616e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 31
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 18.595,    inv 21.793


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 32
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2017


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2017

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 33
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.007      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2186e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.7508e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2616e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.1401e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.7200e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7439e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.7475e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6771e-09 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  1.6771e-09 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  1.6771e-09 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  1.6771e-09 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  6.2166e-07 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  1.1933e-06

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2228e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6771e-09 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2592e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 34
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 19.153,    inv 22.160


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 35
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2018


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.004 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2018

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 36
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2228e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  4.8933e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2592e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.1345e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.6170e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7500e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.6003e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  9.4013e-10 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  9.4013e-10 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  9.4013e-10 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  9.4013e-10 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  3.5346e-07 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  6.5213e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2260e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  9.4013e-10 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2609e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 37
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 19.728,    inv 22.545


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 38
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2019


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2019

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 39
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2260e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.0401e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2609e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.1451e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.5201e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7580e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.4622e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  5.4400e-10 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  5.4400e-10 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  5.4399e-10 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  5.4400e-10 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  2.0770e-07 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  3.6854e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2281e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.4400e-10 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2661e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 40
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 20.320,    inv 22.945


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 41
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2020


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2020

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 42
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.009      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2281e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.1914e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2661e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.1695e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.4288e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7676e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.3324e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  3.2314e-10 eqn: (savheq(hhsld))
Inf-Norm of Normal Map. . . . .  3.2314e-10 eqn: (savheq(hhsld))
Inf-Norm of Minimum Map . . . .  3.2313e-10 eqn: (savheq(hhsld))
Inf-Norm of Fischer Function. .  3.2314e-10 eqn: (savheq(hhsld))
Inf-Norm of Grad Fischer Fcn. .  1.2522e-07 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  2.1440e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2293e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  3.2314e-10 eqn: (savheq(hhsld))
Maximum of Grad F . . . . . . .  1.2743e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 43
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 20.929,    inv 23.359


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 44
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2021


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2021

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 45
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.010      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2293e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.3471e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2743e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.2063e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.3427e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7785e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.2102e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  2.0560e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Normal Map. . . . .  2.0560e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Minimum Map . . . .  2.0560e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Fischer Function. .  2.0560e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Grad Fischer Fcn. .  7.6992e-08 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  1.2869e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2296e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  2.0560e-10 eqn: (ktdeq(Tertiary))
Maximum of Grad F . . . . . . .  1.2853e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 46
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 21.557,    inv 23.788


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.006  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 47
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2022


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2022

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 48
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.010      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2296e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.5075e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2853e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.2541e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.2612e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.7906e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  3.0949e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.9260e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Normal Map. . . . .  1.9260e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Minimum Map . . . .  1.9259e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Fischer Function. .  1.9260e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Grad Fischer Fcn. .  4.7924e-08 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  8.0476e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2292e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.9260e-10 eqn: (ktdeq(Tertiary))
Maximum of Grad F . . . . . . .  1.2989e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 49
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 22.204,    inv 24.229


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 50
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2023


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2023

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 51
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2292e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.6727e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.2989e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.3120e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.1841e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8038e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.9860e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.7967e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Normal Map. . . . .  1.7967e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Minimum Map . . . .  1.7968e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Fischer Function. .  1.7967e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Grad Fischer Fcn. .  2.9975e-08 eqn: (pfeq(inv))
Two-Norm of Grad Fischer Fcn. .  5.4336e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2281e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.7967e-10 eqn: (ktdeq(Tertiary))
Maximum of Grad F . . . . . . .  1.3149e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 52
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 22.870,    inv 24.683


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 53
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2024


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2024

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 54
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.009      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2281e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  5.8429e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.3149e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.3796e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.1110e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8180e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.8831e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6809e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Normal Map. . . . .  1.6809e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Minimum Map . . . .  1.6809e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Fischer Function. .  1.6809e-10 eqn: (ktdeq(Tertiary))
Inf-Norm of Grad Fischer Fcn. .  2.3969e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  4.1377e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2262e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6809e-10 eqn: (ktdeq(Tertiary))
Maximum of Grad F . . . . . . .  1.3331e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 55
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 23.556,    inv 25.149


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 56
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2025


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2025

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 57
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.009      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2262e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.0182e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.3331e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.4562e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  2.0418e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8332e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.7857e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6276e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Normal Map. . . . .  1.6276e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Minimum Map . . . .  1.6276e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Fischer Function. .  1.6276e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Grad Fischer Fcn. .  2.5920e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  3.5975e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2237e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6276e-10 eqn: (kdeq(Tertiary,Captl))
Maximum of Grad F . . . . . . .  1.3536e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 58
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 24.263,    inv 25.625


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014,    2025  0.015

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 59
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2026


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2026

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 60
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.009      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2237e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.1987e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.3536e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.5417e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  1.9761e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8493e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.6935e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6219e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Normal Map. . . . .  1.6219e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Minimum Map . . . .  1.6219e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Fischer Function. .  1.6219e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Grad Fischer Fcn. .  2.8076e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  3.4569e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2205e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6219e-10 eqn: (kdeq(Tertiary,Captl))
Maximum of Grad F . . . . . . .  1.3763e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 61
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 24.990,    inv 26.112


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014,    2025  0.015
2026  0.017

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 62
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2027


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2027

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 63
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2205e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.3847e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.3763e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.6359e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  1.9137e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8664e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.6062e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6185e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Normal Map. . . . .  1.6185e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Minimum Map . . . .  1.6185e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Fischer Function. .  1.6185e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Grad Fischer Fcn. .  3.0609e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  3.5453e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2167e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6185e-10 eqn: (kdeq(Tertiary,Captl))
Maximum of Grad F . . . . . . .  1.4012e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 64
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 25.740,    inv 26.609


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014,    2025  0.015
2026  0.017,    2027  0.018

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 65
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2028


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2028

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 66
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2167e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.5762e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.4012e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.7388e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  1.8545e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.8846e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.5234e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6248e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Normal Map. . . . .  1.6248e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Minimum Map . . . .  1.6248e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Fischer Function. .  1.6248e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Grad Fischer Fcn. .  3.3681e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  3.7820e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2124e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6248e-10 eqn: (kdeq(Tertiary,Captl))
Maximum of Grad F . . . . . . .  1.4283e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 67
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 26.512,    inv 27.115


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014,    2025  0.015
2026  0.017,    2027  0.018,    2028  0.019

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 68
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2029


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2029

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 69
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2124e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.7735e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.4283e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.8506e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  1.7982e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.9037e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.4448e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6460e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Normal Map. . . . .  1.6460e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Minimum Map . . . .  1.6460e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Fischer Function. .  1.6460e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Grad Fischer Fcn. .  3.7487e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  4.1559e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2074e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6460e-10 eqn: (kdeq(Tertiary,Captl))
Maximum of Grad F . . . . . . .  1.4577e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 70
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 27.308,    inv 27.629


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014,    2025  0.015
2026  0.017,    2027  0.018,    2028  0.019,    2029  0.021

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 71
Proto_CGE
Model Statistics    SOLVE Model_dynamic Using MCP From line 4988


LOOPS                                  sim   Baseline
                                         t   2030


MODEL STATISTICS

BLOCKS OF EQUATIONS         130     SINGLE EQUATIONS          262
BLOCKS OF VARIABLES          93     SINGLE VARIABLES          262
NON ZERO ELEMENTS           885     NON LINEAR N-Z            505
DERIVATIVE POOL               6     CONSTANT POOL              88
CODE LENGTH               1,632


GENERATION TIME      =        0.003 SECONDS      5 Mb  DEX237-237 Jul 21, 2011
               L O O P S                sim Baseline
                                          t 2030

GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 72
Proto_CGE
Solution Report     SOLVE Model_dynamic Using MCP From line 4988


               S O L V E      S U M M A R Y

     MODEL   Model_dynamic       
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  4988

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.008      1000.000
 ITERATION COUNT, LIMIT         2    2000000000
 EVALUATION ERRORS              0             0
262 row/cols, 885 non-zeros, 1.29% dense.

Path 4.7.02 (Thu Jul 21 18:49:07 2011)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2074e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  6.9767e+00 eqn: (ggdpeq)
Maximum of Grad F . . . . . . .  1.4577e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  7.9713e+03 eqn: (rgdpfceq)
Minimum Row Norm. . . . . . . .  1.7447e-01 eqn: (pttdeq(Primary))
Maximum Column Norm . . . . . .  3.9241e+03 var: (ld(Manufact,UnSkil))
Minimum Column Norm . . . . . .  2.3703e-01 var: (pttd(Primary))

FINAL STATISTICS
Inf-Norm of Complementarity . .  1.6849e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Normal Map. . . . .  1.6849e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Minimum Map . . . .  1.6849e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Fischer Function. .  1.6849e-10 eqn: (kdeq(Tertiary,Captl))
Inf-Norm of Grad Fischer Fcn. .  4.2243e-08 eqn: (tdeq(Primary,LandR))
Two-Norm of Grad Fischer Fcn. .  4.6822e-08

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  1.2018e+03 var: (ewage(UnSkil,Tot))
Maximum of F. . . . . . . . . .  1.6849e-10 eqn: (kdeq(Tertiary,Captl))
Maximum of Grad F . . . . . . .  1.4894e+03 eqn: (rgdpfceq)
                                            var: (ld(Manufact,UnSkil))



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
GAMS Rev 237  XXX-DEG 23.7.2 Mac x86_64/Darwin                                                                               12/14/16 18:19:37 Page 73
Proto_CGE
E x e c u t i o n


----   4999 VARIABLE xf.L  Final demand aggregate volume

gov 28.127,    inv 28.152


----   4999 PARAMETER chil  Sector and skill specific shift parameters

                      ( ALL       0.000 )


----   5007 PARAMETER walras               =       -0.005  Evaluation of walras law

----   5008 VARIABLE savf.L                =       11.630  Foreign investment inflows

----   5208 PARAMETER glT  Labor productivity growth

2008  0.661,    2009 -0.081,    2010 -0.059,    2011 -0.043,    2012 -0.031,    2013 -0.023,    2014 -0.016,    2015 -0.010,    2016 -0.006
2017 -0.002,    2018  0.001,    2019  0.004,    2020  0.007,    2021  0.009,    2022  0.011,    2023  0.012,    2024  0.014,    2025  0.015
2026  0.017,    2027  0.018,    2028  0.019,    2029  0.021,    2030  0.022


**** REPORT FILE SUMMARY

reportfile /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_CGE_Results.csv
samfile /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_CGE_SAM.csv
screen /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/con


EXECUTION TIME       =        0.849 SECONDS      5 Mb  DEX237-237 Jul 21, 2011


USER: David Roland-Holst                             G110727:0605AN-DAR
      University of California, Agricultural and Resource EconomiDC7723
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_CGE.gms
Output     /Users/dwrh1/Documents/Research/Countries/Morocco/Prototype_CGE/Proto_CGE.lst

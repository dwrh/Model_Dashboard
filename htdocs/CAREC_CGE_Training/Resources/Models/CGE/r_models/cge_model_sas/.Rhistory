library(nleqslv) # you have to load the package with the library() function after every time you open R# [1] Set parameter values:	# Demand values 			alpha1_r = 0.5 			alpha2_r = 0.5 			alpha1_p = 0.3 			alpha2_p = 0.7			mu_r = 1.5 			mu_p = 0.75 			Kbar_r = 25 			Kbar_p = 0 			Lbar_r = 0 			Lbar_p = 60	# Production parameters 			phi1 = 1.5 			phi2 = 2.0 			delta1 = 0.6 			delta2 = 0.7 			sigma1 = 2.0 			sigma2 = 0.5			w = 1.0# [2] Define the system of equations in the form of one function:	f=function(x){		# Assign the variables to be solved for to the input vector:				r =   x[1] 			p1 =  x[2]			p2 = x[3] 			x1_r = x[4]			x2_r = x[5]			x1_p = x[6]			x2_p = x[7]			L1 = x[8]			L2 = x[9]			K1 = x[10]			K2 = x[11]			Q1 = x[12]			Q2 = x[13]				# Put the system of equations into a vector called F:		F=rep(NA,13)	# Demand functions  			F[1] = x1_r - ((alpha1_r*(w*Lbar_r+r*Kbar_r))/((p1**mu_r)*(alpha1_r*(p1**(1-mu_r))+alpha2_r*(p2**(1-mu_r))))) 			F[2] = x2_r - ((alpha2_r*(w*Lbar_r+r*Kbar_r))/((p2**mu_r)*(alpha1_r*(p1**(1-mu_r))+alpha2_r*(p2**(1-mu_r))))) 			F[3] = x1_p - ((alpha1_p*(w*Lbar_p+r*Kbar_p))/((p1**mu_p)*(alpha1_p*(p1**(1-mu_p))+alpha2_p*(p2**(1-mu_p))))) 			F[4] = x2_p - ((alpha2_p*(w*Lbar_p+r*Kbar_p))/((p2**mu_p)*(alpha1_p*(p1**(1-mu_p))+alpha2_p*(p2**(1-mu_p))))) 	# Factor demand functions 			F[5] = L1-((1/phi1*Q1)*((((((delta1*r)/((1-delta1)*w))**(1-sigma1))*(1-delta1))+delta1)**(sigma1/(1-sigma1)))) 			F[6] = L2-((1/phi2*Q2)*((((((delta2*r)/((1-delta2)*w))**(1-sigma2))*(1-delta2))+delta2)**(sigma2/(1-sigma2)))) 			F[7] = K1-((1/phi1*Q1)*(((delta1*((((1-delta1)*w)/(delta1*r))**(1-sigma1)))+(1-delta1))**(sigma1/(1-sigma1)))) 			F[8] = K2-((1/phi2*Q2)*(((delta2*((((1-delta2)*w)/(delta2*r))**(1-sigma2)))+(1-delta2))**(sigma2/(1-sigma2)))) 	# Excess factor demand function			F[9] = (L1+L2)-(Lbar_r+Lbar_p) 	# Commodity prices 			F[10] = p1-((w*L1/Q1)+(r*K1/Q1)) 			F[11] = p2-((w*L2/Q2)+(r*K2/Q2)) 	# Commodity demand  			F[12] = Q1-(x1_p+x1_r) 			F[13] = Q2-(x2_p+x2_r) 	# Return the value of the function:			return(F)							}# [3] Set initial values for the free variables:	initial_vals=c(0.082218, 0.883000, 0.872615, 0.332099, 0.106169, 0.509949, 0.488365, 0.683653, 0.901062, 0.755751, 0.350616, 0.819783, 0.963865)		names(initial_vals)=c("r","p1","p2","x1_r","x2_r","x1_p","x2_p","L1","L2","K1","K2","Q1","Q2")# [4] Solve the Model:	model_solution = nleqslv(x=initial_vals,fn=f)# [5] Store, label, and print the solution:	solution_values=model_solution$x	names(solution_values)=c("r","p1","p2","x1_r","x2_r","x1_p","x2_p","L1","L2","K1","K2","Q1","Q2")	print(solution_values)
